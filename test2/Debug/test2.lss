
test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009c2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000080  00800060  000009c2  00000a36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000ab6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ae8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000017ac  00000000  00000000  00000c04  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006f9  00000000  00000000  000023b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000cc4  00000000  00000000  00002aa9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001d0  00000000  00000000  00003770  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000045c  00000000  00000000  00003940  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000cc2  00000000  00000000  00003d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  00004a5e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ec       	ldi	r30, 0xC2	; 194
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 3e       	cpi	r26, 0xE0	; 224
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 43 03 	call	0x686	; 0x686 <main>
  7a:	0c 94 df 04 	jmp	0x9be	; 0x9be <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <i2c_init>:
	DC_PRT |= (1<<0); //Set pin B0 to high for clock wise rotation
	while (ms--)
	{
		_delay_ms(1);
	}
	dc_stp();
  82:	82 e6       	ldi	r24, 0x62	; 98
  84:	80 b9       	out	0x00, r24	; 0
  86:	84 e0       	ldi	r24, 0x04	; 4
  88:	86 bf       	out	0x36, r24	; 54
  8a:	11 b8       	out	0x01, r1	; 1
  8c:	08 95       	ret

0000008e <i2c_start>:
  8e:	84 ea       	ldi	r24, 0xA4	; 164
  90:	86 bf       	out	0x36, r24	; 54
  92:	06 b6       	in	r0, 0x36	; 54
  94:	07 fe       	sbrs	r0, 7
  96:	fd cf       	rjmp	.-6      	; 0x92 <i2c_start+0x4>
  98:	08 95       	ret

0000009a <i2c_write>:
  9a:	83 b9       	out	0x03, r24	; 3
  9c:	84 e8       	ldi	r24, 0x84	; 132
  9e:	86 bf       	out	0x36, r24	; 54
  a0:	06 b6       	in	r0, 0x36	; 54
  a2:	07 fe       	sbrs	r0, 7
  a4:	fd cf       	rjmp	.-6      	; 0xa0 <i2c_write+0x6>
  a6:	08 95       	ret

000000a8 <delay>:
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	50 e0       	ldi	r21, 0x00	; 0
  ac:	0a c0       	rjmp	.+20     	; 0xc2 <delay+0x1a>
  ae:	2f 5f       	subi	r18, 0xFF	; 255
  b0:	3f 4f       	sbci	r19, 0xFF	; 255
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <delay+0x10>
  b4:	20 e0       	ldi	r18, 0x00	; 0
  b6:	30 e0       	ldi	r19, 0x00	; 0
  b8:	29 37       	cpi	r18, 0x79	; 121
  ba:	31 05       	cpc	r19, r1
  bc:	c4 f3       	brlt	.-16     	; 0xae <delay+0x6>
  be:	4f 5f       	subi	r20, 0xFF	; 255
  c0:	5f 4f       	sbci	r21, 0xFF	; 255
  c2:	84 17       	cp	r24, r20
  c4:	95 07       	cpc	r25, r21
  c6:	b4 f7       	brge	.-20     	; 0xb4 <delay+0xc>
  c8:	08 95       	ret

000000ca <toggle>:
  ca:	83 b1       	in	r24, 0x03	; 3
  cc:	82 60       	ori	r24, 0x02	; 2
  ce:	83 b9       	out	0x03, r24	; 3
  d0:	84 e8       	ldi	r24, 0x84	; 132
  d2:	86 bf       	out	0x36, r24	; 54
  d4:	06 b6       	in	r0, 0x36	; 54
  d6:	07 fe       	sbrs	r0, 7
  d8:	fd cf       	rjmp	.-6      	; 0xd4 <toggle+0xa>
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 54 00 	call	0xa8	; 0xa8 <delay>
  e2:	83 b1       	in	r24, 0x03	; 3
  e4:	8d 7f       	andi	r24, 0xFD	; 253
  e6:	83 b9       	out	0x03, r24	; 3
  e8:	84 e8       	ldi	r24, 0x84	; 132
  ea:	86 bf       	out	0x36, r24	; 54
  ec:	06 b6       	in	r0, 0x36	; 54
  ee:	07 fe       	sbrs	r0, 7
  f0:	fd cf       	rjmp	.-6      	; 0xec <toggle+0x22>
  f2:	08 95       	ret

000000f4 <lcd_cmd_hf>:
  f4:	93 b1       	in	r25, 0x03	; 3
  f6:	9e 7f       	andi	r25, 0xFE	; 254
  f8:	93 b9       	out	0x03, r25	; 3
  fa:	94 e8       	ldi	r25, 0x84	; 132
  fc:	96 bf       	out	0x36, r25	; 54
  fe:	06 b6       	in	r0, 0x36	; 54
 100:	07 fe       	sbrs	r0, 7
 102:	fd cf       	rjmp	.-6      	; 0xfe <lcd_cmd_hf+0xa>
 104:	93 b1       	in	r25, 0x03	; 3
 106:	9f 70       	andi	r25, 0x0F	; 15
 108:	93 b9       	out	0x03, r25	; 3
 10a:	94 e8       	ldi	r25, 0x84	; 132
 10c:	96 bf       	out	0x36, r25	; 54
 10e:	06 b6       	in	r0, 0x36	; 54
 110:	07 fe       	sbrs	r0, 7
 112:	fd cf       	rjmp	.-6      	; 0x10e <lcd_cmd_hf+0x1a>
 114:	93 b1       	in	r25, 0x03	; 3
 116:	80 7f       	andi	r24, 0xF0	; 240
 118:	89 2b       	or	r24, r25
 11a:	83 b9       	out	0x03, r24	; 3
 11c:	84 e8       	ldi	r24, 0x84	; 132
 11e:	86 bf       	out	0x36, r24	; 54
 120:	06 b6       	in	r0, 0x36	; 54
 122:	07 fe       	sbrs	r0, 7
 124:	fd cf       	rjmp	.-6      	; 0x120 <lcd_cmd_hf+0x2c>
 126:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 12a:	08 95       	ret

0000012c <lcd_cmd>:
 12c:	cf 93       	push	r28
 12e:	c8 2f       	mov	r28, r24
 130:	83 b1       	in	r24, 0x03	; 3
 132:	8e 7f       	andi	r24, 0xFE	; 254
 134:	83 b9       	out	0x03, r24	; 3
 136:	84 e8       	ldi	r24, 0x84	; 132
 138:	86 bf       	out	0x36, r24	; 54
 13a:	06 b6       	in	r0, 0x36	; 54
 13c:	07 fe       	sbrs	r0, 7
 13e:	fd cf       	rjmp	.-6      	; 0x13a <lcd_cmd+0xe>
 140:	83 b1       	in	r24, 0x03	; 3
 142:	8f 70       	andi	r24, 0x0F	; 15
 144:	83 b9       	out	0x03, r24	; 3
 146:	84 e8       	ldi	r24, 0x84	; 132
 148:	86 bf       	out	0x36, r24	; 54
 14a:	06 b6       	in	r0, 0x36	; 54
 14c:	07 fe       	sbrs	r0, 7
 14e:	fd cf       	rjmp	.-6      	; 0x14a <lcd_cmd+0x1e>
 150:	83 b1       	in	r24, 0x03	; 3
 152:	9c 2f       	mov	r25, r28
 154:	90 7f       	andi	r25, 0xF0	; 240
 156:	89 2b       	or	r24, r25
 158:	83 b9       	out	0x03, r24	; 3
 15a:	84 e8       	ldi	r24, 0x84	; 132
 15c:	86 bf       	out	0x36, r24	; 54
 15e:	06 b6       	in	r0, 0x36	; 54
 160:	07 fe       	sbrs	r0, 7
 162:	fd cf       	rjmp	.-6      	; 0x15e <lcd_cmd+0x32>
 164:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 168:	83 b1       	in	r24, 0x03	; 3
 16a:	8f 70       	andi	r24, 0x0F	; 15
 16c:	83 b9       	out	0x03, r24	; 3
 16e:	84 e8       	ldi	r24, 0x84	; 132
 170:	86 bf       	out	0x36, r24	; 54
 172:	06 b6       	in	r0, 0x36	; 54
 174:	07 fe       	sbrs	r0, 7
 176:	fd cf       	rjmp	.-6      	; 0x172 <lcd_cmd+0x46>
 178:	23 b1       	in	r18, 0x03	; 3
 17a:	30 e1       	ldi	r19, 0x10	; 16
 17c:	c3 9f       	mul	r28, r19
 17e:	c0 01       	movw	r24, r0
 180:	11 24       	eor	r1, r1
 182:	82 2b       	or	r24, r18
 184:	83 b9       	out	0x03, r24	; 3
 186:	84 e8       	ldi	r24, 0x84	; 132
 188:	86 bf       	out	0x36, r24	; 54
 18a:	06 b6       	in	r0, 0x36	; 54
 18c:	07 fe       	sbrs	r0, 7
 18e:	fd cf       	rjmp	.-6      	; 0x18a <lcd_cmd+0x5e>
 190:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <lcd_init>:
 198:	80 e3       	ldi	r24, 0x30	; 48
 19a:	0e 94 7a 00 	call	0xf4	; 0xf4 <lcd_cmd_hf>
 19e:	80 e3       	ldi	r24, 0x30	; 48
 1a0:	0e 94 7a 00 	call	0xf4	; 0xf4 <lcd_cmd_hf>
 1a4:	80 e2       	ldi	r24, 0x20	; 32
 1a6:	0e 94 7a 00 	call	0xf4	; 0xf4 <lcd_cmd_hf>
 1aa:	88 e2       	ldi	r24, 0x28	; 40
 1ac:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1b0:	8c e0       	ldi	r24, 0x0C	; 12
 1b2:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1bc:	86 e0       	ldi	r24, 0x06	; 6
 1be:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1c2:	80 e8       	ldi	r24, 0x80	; 128
 1c4:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 1c8:	08 95       	ret

000001ca <lcd_dwr>:
 1ca:	cf 93       	push	r28
 1cc:	c8 2f       	mov	r28, r24
 1ce:	83 b1       	in	r24, 0x03	; 3
 1d0:	81 60       	ori	r24, 0x01	; 1
 1d2:	83 b9       	out	0x03, r24	; 3
 1d4:	84 e8       	ldi	r24, 0x84	; 132
 1d6:	86 bf       	out	0x36, r24	; 54
 1d8:	06 b6       	in	r0, 0x36	; 54
 1da:	07 fe       	sbrs	r0, 7
 1dc:	fd cf       	rjmp	.-6      	; 0x1d8 <lcd_dwr+0xe>
 1de:	83 b1       	in	r24, 0x03	; 3
 1e0:	8f 70       	andi	r24, 0x0F	; 15
 1e2:	83 b9       	out	0x03, r24	; 3
 1e4:	84 e8       	ldi	r24, 0x84	; 132
 1e6:	86 bf       	out	0x36, r24	; 54
 1e8:	06 b6       	in	r0, 0x36	; 54
 1ea:	07 fe       	sbrs	r0, 7
 1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <lcd_dwr+0x1e>
 1ee:	83 b1       	in	r24, 0x03	; 3
 1f0:	9c 2f       	mov	r25, r28
 1f2:	90 7f       	andi	r25, 0xF0	; 240
 1f4:	89 2b       	or	r24, r25
 1f6:	83 b9       	out	0x03, r24	; 3
 1f8:	84 e8       	ldi	r24, 0x84	; 132
 1fa:	86 bf       	out	0x36, r24	; 54
 1fc:	06 b6       	in	r0, 0x36	; 54
 1fe:	07 fe       	sbrs	r0, 7
 200:	fd cf       	rjmp	.-6      	; 0x1fc <lcd_dwr+0x32>
 202:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 206:	83 b1       	in	r24, 0x03	; 3
 208:	8f 70       	andi	r24, 0x0F	; 15
 20a:	83 b9       	out	0x03, r24	; 3
 20c:	84 e8       	ldi	r24, 0x84	; 132
 20e:	86 bf       	out	0x36, r24	; 54
 210:	06 b6       	in	r0, 0x36	; 54
 212:	07 fe       	sbrs	r0, 7
 214:	fd cf       	rjmp	.-6      	; 0x210 <lcd_dwr+0x46>
 216:	23 b1       	in	r18, 0x03	; 3
 218:	30 e1       	ldi	r19, 0x10	; 16
 21a:	c3 9f       	mul	r28, r19
 21c:	c0 01       	movw	r24, r0
 21e:	11 24       	eor	r1, r1
 220:	82 2b       	or	r24, r18
 222:	83 b9       	out	0x03, r24	; 3
 224:	84 e8       	ldi	r24, 0x84	; 132
 226:	86 bf       	out	0x36, r24	; 54
 228:	06 b6       	in	r0, 0x36	; 54
 22a:	07 fe       	sbrs	r0, 7
 22c:	fd cf       	rjmp	.-6      	; 0x228 <lcd_dwr+0x5e>
 22e:	0e 94 65 00 	call	0xca	; 0xca <toggle>
 232:	cf 91       	pop	r28
 234:	08 95       	ret

00000236 <lcd_msg>:
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	ec 01       	movw	r28, r24
 23c:	03 c0       	rjmp	.+6      	; 0x244 <lcd_msg+0xe>
 23e:	21 96       	adiw	r28, 0x01	; 1
 240:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_dwr>
 244:	88 81       	ld	r24, Y
 246:	81 11       	cpse	r24, r1
 248:	fa cf       	rjmp	.-12     	; 0x23e <lcd_msg+0x8>
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <keyfind>:
 250:	80 ef       	ldi	r24, 0xF0	; 240
 252:	81 bb       	out	0x11, r24	; 17
 254:	8f ef       	ldi	r24, 0xFF	; 255
 256:	82 bb       	out	0x12, r24	; 18
 258:	8f e0       	ldi	r24, 0x0F	; 15
 25a:	82 bb       	out	0x12, r24	; 18
 25c:	00 00       	nop
 25e:	80 b3       	in	r24, 0x10	; 16
 260:	8f 70       	andi	r24, 0x0F	; 15
 262:	8f 30       	cpi	r24, 0x0F	; 15
 264:	c9 f7       	brne	.-14     	; 0x258 <keyfind+0x8>
 266:	87 e8       	ldi	r24, 0x87	; 135
 268:	93 e1       	ldi	r25, 0x13	; 19
 26a:	01 97       	sbiw	r24, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <keyfind+0x1a>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <keyfind+0x20>
 270:	00 00       	nop
 272:	80 b3       	in	r24, 0x10	; 16
 274:	8f 70       	andi	r24, 0x0F	; 15
 276:	8f 30       	cpi	r24, 0x0F	; 15
 278:	b1 f3       	breq	.-20     	; 0x266 <keyfind+0x16>
 27a:	8f e0       	ldi	r24, 0x0F	; 15
 27c:	97 e2       	ldi	r25, 0x27	; 39
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <keyfind+0x2e>
 282:	00 c0       	rjmp	.+0      	; 0x284 <keyfind+0x34>
 284:	00 00       	nop
 286:	80 b3       	in	r24, 0x10	; 16
 288:	8f 70       	andi	r24, 0x0F	; 15
 28a:	8f 30       	cpi	r24, 0x0F	; 15
 28c:	61 f3       	breq	.-40     	; 0x266 <keyfind+0x16>
 28e:	8f ee       	ldi	r24, 0xEF	; 239
 290:	82 bb       	out	0x12, r24	; 18
 292:	00 00       	nop
 294:	80 b3       	in	r24, 0x10	; 16
 296:	8f 70       	andi	r24, 0x0F	; 15
 298:	8f 30       	cpi	r24, 0x0F	; 15
 29a:	c1 f4       	brne	.+48     	; 0x2cc <keyfind+0x7c>
 29c:	8f ed       	ldi	r24, 0xDF	; 223
 29e:	82 bb       	out	0x12, r24	; 18
 2a0:	00 00       	nop
 2a2:	80 b3       	in	r24, 0x10	; 16
 2a4:	8f 70       	andi	r24, 0x0F	; 15
 2a6:	8f 30       	cpi	r24, 0x0F	; 15
 2a8:	99 f4       	brne	.+38     	; 0x2d0 <keyfind+0x80>
 2aa:	8f eb       	ldi	r24, 0xBF	; 191
 2ac:	82 bb       	out	0x12, r24	; 18
 2ae:	00 00       	nop
 2b0:	80 b3       	in	r24, 0x10	; 16
 2b2:	8f 70       	andi	r24, 0x0F	; 15
 2b4:	8f 30       	cpi	r24, 0x0F	; 15
 2b6:	71 f4       	brne	.+28     	; 0x2d4 <keyfind+0x84>
 2b8:	8f e7       	ldi	r24, 0x7F	; 127
 2ba:	82 bb       	out	0x12, r24	; 18
 2bc:	00 00       	nop
 2be:	80 b3       	in	r24, 0x10	; 16
 2c0:	8f 70       	andi	r24, 0x0F	; 15
 2c2:	8f 30       	cpi	r24, 0x0F	; 15
 2c4:	09 f4       	brne	.+2      	; 0x2c8 <keyfind+0x78>
 2c6:	c4 cf       	rjmp	.-120    	; 0x250 <keyfind>
 2c8:	93 e0       	ldi	r25, 0x03	; 3
 2ca:	05 c0       	rjmp	.+10     	; 0x2d6 <keyfind+0x86>
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	03 c0       	rjmp	.+6      	; 0x2d6 <keyfind+0x86>
 2d0:	91 e0       	ldi	r25, 0x01	; 1
 2d2:	01 c0       	rjmp	.+2      	; 0x2d6 <keyfind+0x86>
 2d4:	92 e0       	ldi	r25, 0x02	; 2
 2d6:	8e 30       	cpi	r24, 0x0E	; 14
 2d8:	81 f4       	brne	.+32     	; 0x2fa <keyfind+0xaa>
 2da:	91 30       	cpi	r25, 0x01	; 1
 2dc:	09 f4       	brne	.+2      	; 0x2e0 <keyfind+0x90>
 2de:	4b c0       	rjmp	.+150    	; 0x376 <keyfind+0x126>
 2e0:	08 f4       	brcc	.+2      	; 0x2e4 <keyfind+0x94>
 2e2:	46 c0       	rjmp	.+140    	; 0x370 <keyfind+0x120>
 2e4:	92 30       	cpi	r25, 0x02	; 2
 2e6:	19 f0       	breq	.+6      	; 0x2ee <keyfind+0x9e>
 2e8:	93 30       	cpi	r25, 0x03	; 3
 2ea:	21 f0       	breq	.+8      	; 0x2f4 <keyfind+0xa4>
 2ec:	06 c0       	rjmp	.+12     	; 0x2fa <keyfind+0xaa>
 2ee:	24 e6       	ldi	r18, 0x64	; 100
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	4c c0       	rjmp	.+152    	; 0x38c <keyfind+0x13c>
 2f4:	26 e6       	ldi	r18, 0x66	; 102
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	49 c0       	rjmp	.+146    	; 0x38c <keyfind+0x13c>
 2fa:	8d 30       	cpi	r24, 0x0D	; 13
 2fc:	89 f4       	brne	.+34     	; 0x320 <keyfind+0xd0>
 2fe:	91 30       	cpi	r25, 0x01	; 1
 300:	e9 f1       	breq	.+122    	; 0x37c <keyfind+0x12c>
 302:	28 f0       	brcs	.+10     	; 0x30e <keyfind+0xbe>
 304:	92 30       	cpi	r25, 0x02	; 2
 306:	31 f0       	breq	.+12     	; 0x314 <keyfind+0xc4>
 308:	93 30       	cpi	r25, 0x03	; 3
 30a:	39 f0       	breq	.+14     	; 0x31a <keyfind+0xca>
 30c:	30 c0       	rjmp	.+96     	; 0x36e <keyfind+0x11e>
 30e:	28 e6       	ldi	r18, 0x68	; 104
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	3c c0       	rjmp	.+120    	; 0x38c <keyfind+0x13c>
 314:	2c e6       	ldi	r18, 0x6C	; 108
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	39 c0       	rjmp	.+114    	; 0x38c <keyfind+0x13c>
 31a:	26 e9       	ldi	r18, 0x96	; 150
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	36 c0       	rjmp	.+108    	; 0x38c <keyfind+0x13c>
 320:	8b 30       	cpi	r24, 0x0B	; 11
 322:	89 f4       	brne	.+34     	; 0x346 <keyfind+0xf6>
 324:	91 30       	cpi	r25, 0x01	; 1
 326:	69 f1       	breq	.+90     	; 0x382 <keyfind+0x132>
 328:	28 f0       	brcs	.+10     	; 0x334 <keyfind+0xe4>
 32a:	92 30       	cpi	r25, 0x02	; 2
 32c:	31 f0       	breq	.+12     	; 0x33a <keyfind+0xea>
 32e:	93 30       	cpi	r25, 0x03	; 3
 330:	39 f0       	breq	.+14     	; 0x340 <keyfind+0xf0>
 332:	1d c0       	rjmp	.+58     	; 0x36e <keyfind+0x11e>
 334:	2e e6       	ldi	r18, 0x6E	; 110
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	29 c0       	rjmp	.+82     	; 0x38c <keyfind+0x13c>
 33a:	22 e7       	ldi	r18, 0x72	; 114
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	26 c0       	rjmp	.+76     	; 0x38c <keyfind+0x13c>
 340:	24 e7       	ldi	r18, 0x74	; 116
 342:	30 e0       	ldi	r19, 0x00	; 0
 344:	23 c0       	rjmp	.+70     	; 0x38c <keyfind+0x13c>
 346:	91 30       	cpi	r25, 0x01	; 1
 348:	f9 f0       	breq	.+62     	; 0x388 <keyfind+0x138>
 34a:	28 f0       	brcs	.+10     	; 0x356 <keyfind+0x106>
 34c:	92 30       	cpi	r25, 0x02	; 2
 34e:	31 f0       	breq	.+12     	; 0x35c <keyfind+0x10c>
 350:	93 30       	cpi	r25, 0x03	; 3
 352:	39 f0       	breq	.+14     	; 0x362 <keyfind+0x112>
 354:	09 c0       	rjmp	.+18     	; 0x368 <keyfind+0x118>
 356:	26 e7       	ldi	r18, 0x76	; 118
 358:	30 e0       	ldi	r19, 0x00	; 0
 35a:	18 c0       	rjmp	.+48     	; 0x38c <keyfind+0x13c>
 35c:	2a e7       	ldi	r18, 0x7A	; 122
 35e:	30 e0       	ldi	r19, 0x00	; 0
 360:	15 c0       	rjmp	.+42     	; 0x38c <keyfind+0x13c>
 362:	2c e7       	ldi	r18, 0x7C	; 124
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	12 c0       	rjmp	.+36     	; 0x38c <keyfind+0x13c>
 368:	27 e6       	ldi	r18, 0x67	; 103
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	0f c0       	rjmp	.+30     	; 0x38c <keyfind+0x13c>
 36e:	08 95       	ret
 370:	20 e6       	ldi	r18, 0x60	; 96
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	0b c0       	rjmp	.+22     	; 0x38c <keyfind+0x13c>
 376:	22 e6       	ldi	r18, 0x62	; 98
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	08 c0       	rjmp	.+16     	; 0x38c <keyfind+0x13c>
 37c:	2a e6       	ldi	r18, 0x6A	; 106
 37e:	30 e0       	ldi	r19, 0x00	; 0
 380:	05 c0       	rjmp	.+10     	; 0x38c <keyfind+0x13c>
 382:	20 e7       	ldi	r18, 0x70	; 112
 384:	30 e0       	ldi	r19, 0x00	; 0
 386:	02 c0       	rjmp	.+4      	; 0x38c <keyfind+0x13c>
 388:	28 e7       	ldi	r18, 0x78	; 120
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	82 2f       	mov	r24, r18
 38e:	93 2f       	mov	r25, r19
 390:	08 95       	ret

00000392 <stpr_init>:
 392:	8f ef       	ldi	r24, 0xFF	; 255
 394:	8a bb       	out	0x1a, r24	; 26
 396:	1b ba       	out	0x1b, r1	; 27
 398:	08 95       	ret

0000039a <stpr_clk>:
 39a:	40 e0       	ldi	r20, 0x00	; 0
 39c:	50 e0       	ldi	r21, 0x00	; 0
 39e:	7a c0       	rjmp	.+244    	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 3a0:	29 e0       	ldi	r18, 0x09	; 9
 3a2:	30 e0       	ldi	r19, 0x00	; 0
 3a4:	06 2e       	mov	r0, r22
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <stpr_clk+0x12>
 3a8:	22 0f       	add	r18, r18
 3aa:	33 1f       	adc	r19, r19
 3ac:	0a 94       	dec	r0
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <stpr_clk+0xe>
 3b0:	2b bb       	out	0x1b, r18	; 27
 3b2:	e7 e9       	ldi	r30, 0x97	; 151
 3b4:	fa e3       	ldi	r31, 0x3A	; 58
 3b6:	31 97       	sbiw	r30, 0x01	; 1
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <stpr_clk+0x1c>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <stpr_clk+0x22>
 3bc:	00 00       	nop
 3be:	28 e0       	ldi	r18, 0x08	; 8
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	06 2e       	mov	r0, r22
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <stpr_clk+0x30>
 3c6:	22 0f       	add	r18, r18
 3c8:	33 1f       	adc	r19, r19
 3ca:	0a 94       	dec	r0
 3cc:	e2 f7       	brpl	.-8      	; 0x3c6 <stpr_clk+0x2c>
 3ce:	2b bb       	out	0x1b, r18	; 27
 3d0:	e7 e9       	ldi	r30, 0x97	; 151
 3d2:	fa e3       	ldi	r31, 0x3A	; 58
 3d4:	31 97       	sbiw	r30, 0x01	; 1
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <stpr_clk+0x3a>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <stpr_clk+0x40>
 3da:	00 00       	nop
 3dc:	2c e0       	ldi	r18, 0x0C	; 12
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	06 2e       	mov	r0, r22
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <stpr_clk+0x4e>
 3e4:	22 0f       	add	r18, r18
 3e6:	33 1f       	adc	r19, r19
 3e8:	0a 94       	dec	r0
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <stpr_clk+0x4a>
 3ec:	2b bb       	out	0x1b, r18	; 27
 3ee:	e7 e9       	ldi	r30, 0x97	; 151
 3f0:	fa e3       	ldi	r31, 0x3A	; 58
 3f2:	31 97       	sbiw	r30, 0x01	; 1
 3f4:	f1 f7       	brne	.-4      	; 0x3f2 <stpr_clk+0x58>
 3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <stpr_clk+0x5e>
 3f8:	00 00       	nop
 3fa:	24 e0       	ldi	r18, 0x04	; 4
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	06 2e       	mov	r0, r22
 400:	02 c0       	rjmp	.+4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 402:	22 0f       	add	r18, r18
 404:	33 1f       	adc	r19, r19
 406:	0a 94       	dec	r0
 408:	e2 f7       	brpl	.-8      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 40a:	2b bb       	out	0x1b, r18	; 27
 40c:	e7 e9       	ldi	r30, 0x97	; 151
 40e:	fa e3       	ldi	r31, 0x3A	; 58
 410:	31 97       	sbiw	r30, 0x01	; 1
 412:	f1 f7       	brne	.-4      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 414:	00 c0       	rjmp	.+0      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 416:	00 00       	nop
 418:	26 e0       	ldi	r18, 0x06	; 6
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	06 2e       	mov	r0, r22
 41e:	02 c0       	rjmp	.+4      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 420:	22 0f       	add	r18, r18
 422:	33 1f       	adc	r19, r19
 424:	0a 94       	dec	r0
 426:	e2 f7       	brpl	.-8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 428:	2b bb       	out	0x1b, r18	; 27
 42a:	e7 e9       	ldi	r30, 0x97	; 151
 42c:	fa e3       	ldi	r31, 0x3A	; 58
 42e:	31 97       	sbiw	r30, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 434:	00 00       	nop
 436:	22 e0       	ldi	r18, 0x02	; 2
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	06 2e       	mov	r0, r22
 43c:	02 c0       	rjmp	.+4      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 43e:	22 0f       	add	r18, r18
 440:	33 1f       	adc	r19, r19
 442:	0a 94       	dec	r0
 444:	e2 f7       	brpl	.-8      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 446:	2b bb       	out	0x1b, r18	; 27
 448:	e7 e9       	ldi	r30, 0x97	; 151
 44a:	fa e3       	ldi	r31, 0x3A	; 58
 44c:	31 97       	sbiw	r30, 0x01	; 1
 44e:	f1 f7       	brne	.-4      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 450:	00 c0       	rjmp	.+0      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 452:	00 00       	nop
 454:	23 e0       	ldi	r18, 0x03	; 3
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	06 2e       	mov	r0, r22
 45a:	02 c0       	rjmp	.+4      	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 45c:	22 0f       	add	r18, r18
 45e:	33 1f       	adc	r19, r19
 460:	0a 94       	dec	r0
 462:	e2 f7       	brpl	.-8      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 464:	2b bb       	out	0x1b, r18	; 27
 466:	e7 e9       	ldi	r30, 0x97	; 151
 468:	fa e3       	ldi	r31, 0x3A	; 58
 46a:	31 97       	sbiw	r30, 0x01	; 1
 46c:	f1 f7       	brne	.-4      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 46e:	00 c0       	rjmp	.+0      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 470:	00 00       	nop
 472:	21 e0       	ldi	r18, 0x01	; 1
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	06 2e       	mov	r0, r22
 478:	02 c0       	rjmp	.+4      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 47a:	22 0f       	add	r18, r18
 47c:	33 1f       	adc	r19, r19
 47e:	0a 94       	dec	r0
 480:	e2 f7       	brpl	.-8      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 482:	2b bb       	out	0x1b, r18	; 27
 484:	e7 e9       	ldi	r30, 0x97	; 151
 486:	fa e3       	ldi	r31, 0x3A	; 58
 488:	31 97       	sbiw	r30, 0x01	; 1
 48a:	f1 f7       	brne	.-4      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 48c:	00 c0       	rjmp	.+0      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 48e:	00 00       	nop
 490:	4f 5f       	subi	r20, 0xFF	; 255
 492:	5f 4f       	sbci	r21, 0xFF	; 255
 494:	48 17       	cp	r20, r24
 496:	59 07       	cpc	r21, r25
 498:	0c f4       	brge	.+2      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 49a:	82 cf       	rjmp	.-252    	; 0x3a0 <stpr_clk+0x6>
 49c:	89 e0       	ldi	r24, 0x09	; 9
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a2:	88 0f       	add	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	6a 95       	dec	r22
 4a8:	e2 f7       	brpl	.-8      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 4aa:	8b bb       	out	0x1b, r24	; 27
 4ac:	87 e9       	ldi	r24, 0x97	; 151
 4ae:	9a e3       	ldi	r25, 0x3A	; 58
 4b0:	01 97       	sbiw	r24, 0x01	; 1
 4b2:	f1 f7       	brne	.-4      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4b6:	00 00       	nop
 4b8:	08 95       	ret

000004ba <stpr_aclk>:
 4ba:	40 e0       	ldi	r20, 0x00	; 0
 4bc:	50 e0       	ldi	r21, 0x00	; 0
 4be:	7a c0       	rjmp	.+244    	; 0x5b4 <stpr_aclk+0xfa>
 4c0:	21 e0       	ldi	r18, 0x01	; 1
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	06 2e       	mov	r0, r22
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <stpr_aclk+0x12>
 4c8:	22 0f       	add	r18, r18
 4ca:	33 1f       	adc	r19, r19
 4cc:	0a 94       	dec	r0
 4ce:	e2 f7       	brpl	.-8      	; 0x4c8 <stpr_aclk+0xe>
 4d0:	2b bb       	out	0x1b, r18	; 27
 4d2:	e7 e9       	ldi	r30, 0x97	; 151
 4d4:	fa e3       	ldi	r31, 0x3A	; 58
 4d6:	31 97       	sbiw	r30, 0x01	; 1
 4d8:	f1 f7       	brne	.-4      	; 0x4d6 <stpr_aclk+0x1c>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <stpr_aclk+0x22>
 4dc:	00 00       	nop
 4de:	23 e0       	ldi	r18, 0x03	; 3
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	06 2e       	mov	r0, r22
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <stpr_aclk+0x30>
 4e6:	22 0f       	add	r18, r18
 4e8:	33 1f       	adc	r19, r19
 4ea:	0a 94       	dec	r0
 4ec:	e2 f7       	brpl	.-8      	; 0x4e6 <stpr_aclk+0x2c>
 4ee:	2b bb       	out	0x1b, r18	; 27
 4f0:	e7 e9       	ldi	r30, 0x97	; 151
 4f2:	fa e3       	ldi	r31, 0x3A	; 58
 4f4:	31 97       	sbiw	r30, 0x01	; 1
 4f6:	f1 f7       	brne	.-4      	; 0x4f4 <stpr_aclk+0x3a>
 4f8:	00 c0       	rjmp	.+0      	; 0x4fa <stpr_aclk+0x40>
 4fa:	00 00       	nop
 4fc:	22 e0       	ldi	r18, 0x02	; 2
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	06 2e       	mov	r0, r22
 502:	02 c0       	rjmp	.+4      	; 0x508 <stpr_aclk+0x4e>
 504:	22 0f       	add	r18, r18
 506:	33 1f       	adc	r19, r19
 508:	0a 94       	dec	r0
 50a:	e2 f7       	brpl	.-8      	; 0x504 <stpr_aclk+0x4a>
 50c:	2b bb       	out	0x1b, r18	; 27
 50e:	e7 e9       	ldi	r30, 0x97	; 151
 510:	fa e3       	ldi	r31, 0x3A	; 58
 512:	31 97       	sbiw	r30, 0x01	; 1
 514:	f1 f7       	brne	.-4      	; 0x512 <stpr_aclk+0x58>
 516:	00 c0       	rjmp	.+0      	; 0x518 <stpr_aclk+0x5e>
 518:	00 00       	nop
 51a:	26 e0       	ldi	r18, 0x06	; 6
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	06 2e       	mov	r0, r22
 520:	02 c0       	rjmp	.+4      	; 0x526 <stpr_aclk+0x6c>
 522:	22 0f       	add	r18, r18
 524:	33 1f       	adc	r19, r19
 526:	0a 94       	dec	r0
 528:	e2 f7       	brpl	.-8      	; 0x522 <stpr_aclk+0x68>
 52a:	2b bb       	out	0x1b, r18	; 27
 52c:	e7 e9       	ldi	r30, 0x97	; 151
 52e:	fa e3       	ldi	r31, 0x3A	; 58
 530:	31 97       	sbiw	r30, 0x01	; 1
 532:	f1 f7       	brne	.-4      	; 0x530 <stpr_aclk+0x76>
 534:	00 c0       	rjmp	.+0      	; 0x536 <stpr_aclk+0x7c>
 536:	00 00       	nop
 538:	24 e0       	ldi	r18, 0x04	; 4
 53a:	30 e0       	ldi	r19, 0x00	; 0
 53c:	06 2e       	mov	r0, r22
 53e:	02 c0       	rjmp	.+4      	; 0x544 <stpr_aclk+0x8a>
 540:	22 0f       	add	r18, r18
 542:	33 1f       	adc	r19, r19
 544:	0a 94       	dec	r0
 546:	e2 f7       	brpl	.-8      	; 0x540 <stpr_aclk+0x86>
 548:	2b bb       	out	0x1b, r18	; 27
 54a:	e7 e9       	ldi	r30, 0x97	; 151
 54c:	fa e3       	ldi	r31, 0x3A	; 58
 54e:	31 97       	sbiw	r30, 0x01	; 1
 550:	f1 f7       	brne	.-4      	; 0x54e <stpr_aclk+0x94>
 552:	00 c0       	rjmp	.+0      	; 0x554 <stpr_aclk+0x9a>
 554:	00 00       	nop
 556:	2c e0       	ldi	r18, 0x0C	; 12
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	06 2e       	mov	r0, r22
 55c:	02 c0       	rjmp	.+4      	; 0x562 <stpr_aclk+0xa8>
 55e:	22 0f       	add	r18, r18
 560:	33 1f       	adc	r19, r19
 562:	0a 94       	dec	r0
 564:	e2 f7       	brpl	.-8      	; 0x55e <stpr_aclk+0xa4>
 566:	2b bb       	out	0x1b, r18	; 27
 568:	e7 e9       	ldi	r30, 0x97	; 151
 56a:	fa e3       	ldi	r31, 0x3A	; 58
 56c:	31 97       	sbiw	r30, 0x01	; 1
 56e:	f1 f7       	brne	.-4      	; 0x56c <stpr_aclk+0xb2>
 570:	00 c0       	rjmp	.+0      	; 0x572 <stpr_aclk+0xb8>
 572:	00 00       	nop
 574:	28 e0       	ldi	r18, 0x08	; 8
 576:	30 e0       	ldi	r19, 0x00	; 0
 578:	06 2e       	mov	r0, r22
 57a:	02 c0       	rjmp	.+4      	; 0x580 <stpr_aclk+0xc6>
 57c:	22 0f       	add	r18, r18
 57e:	33 1f       	adc	r19, r19
 580:	0a 94       	dec	r0
 582:	e2 f7       	brpl	.-8      	; 0x57c <stpr_aclk+0xc2>
 584:	2b bb       	out	0x1b, r18	; 27
 586:	e7 e9       	ldi	r30, 0x97	; 151
 588:	fa e3       	ldi	r31, 0x3A	; 58
 58a:	31 97       	sbiw	r30, 0x01	; 1
 58c:	f1 f7       	brne	.-4      	; 0x58a <stpr_aclk+0xd0>
 58e:	00 c0       	rjmp	.+0      	; 0x590 <stpr_aclk+0xd6>
 590:	00 00       	nop
 592:	29 e0       	ldi	r18, 0x09	; 9
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	06 2e       	mov	r0, r22
 598:	02 c0       	rjmp	.+4      	; 0x59e <stpr_aclk+0xe4>
 59a:	22 0f       	add	r18, r18
 59c:	33 1f       	adc	r19, r19
 59e:	0a 94       	dec	r0
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <stpr_aclk+0xe0>
 5a2:	2b bb       	out	0x1b, r18	; 27
 5a4:	e7 e9       	ldi	r30, 0x97	; 151
 5a6:	fa e3       	ldi	r31, 0x3A	; 58
 5a8:	31 97       	sbiw	r30, 0x01	; 1
 5aa:	f1 f7       	brne	.-4      	; 0x5a8 <stpr_aclk+0xee>
 5ac:	00 c0       	rjmp	.+0      	; 0x5ae <stpr_aclk+0xf4>
 5ae:	00 00       	nop
 5b0:	4f 5f       	subi	r20, 0xFF	; 255
 5b2:	5f 4f       	sbci	r21, 0xFF	; 255
 5b4:	48 17       	cp	r20, r24
 5b6:	59 07       	cpc	r21, r25
 5b8:	0c f4       	brge	.+2      	; 0x5bc <stpr_aclk+0x102>
 5ba:	82 cf       	rjmp	.-252    	; 0x4c0 <stpr_aclk+0x6>
 5bc:	89 e0       	ldi	r24, 0x09	; 9
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <stpr_aclk+0x10c>
 5c2:	88 0f       	add	r24, r24
 5c4:	99 1f       	adc	r25, r25
 5c6:	6a 95       	dec	r22
 5c8:	e2 f7       	brpl	.-8      	; 0x5c2 <stpr_aclk+0x108>
 5ca:	8b bb       	out	0x1b, r24	; 27
 5cc:	87 e9       	ldi	r24, 0x97	; 151
 5ce:	9a e3       	ldi	r25, 0x3A	; 58
 5d0:	01 97       	sbiw	r24, 0x01	; 1
 5d2:	f1 f7       	brne	.-4      	; 0x5d0 <stpr_aclk+0x116>
 5d4:	00 c0       	rjmp	.+0      	; 0x5d6 <stpr_aclk+0x11c>
 5d6:	00 00       	nop
 5d8:	08 95       	ret

000005da <acvt_trayPsh>:
 5da:	0e 94 c9 01 	call	0x392	; 0x392 <stpr_init>
 5de:	60 e0       	ldi	r22, 0x00	; 0
 5e0:	70 e0       	ldi	r23, 0x00	; 0
 5e2:	82 e0       	ldi	r24, 0x02	; 2
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0e 94 cd 01 	call	0x39a	; 0x39a <stpr_clk>
 5ea:	2f e3       	ldi	r18, 0x3F	; 63
 5ec:	8d e0       	ldi	r24, 0x0D	; 13
 5ee:	93 e0       	ldi	r25, 0x03	; 3
 5f0:	21 50       	subi	r18, 0x01	; 1
 5f2:	80 40       	sbci	r24, 0x00	; 0
 5f4:	90 40       	sbci	r25, 0x00	; 0
 5f6:	e1 f7       	brne	.-8      	; 0x5f0 <acvt_trayPsh+0x16>
 5f8:	00 c0       	rjmp	.+0      	; 0x5fa <acvt_trayPsh+0x20>
 5fa:	00 00       	nop
 5fc:	60 e0       	ldi	r22, 0x00	; 0
 5fe:	70 e0       	ldi	r23, 0x00	; 0
 600:	82 e0       	ldi	r24, 0x02	; 2
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 5d 02 	call	0x4ba	; 0x4ba <stpr_aclk>
 608:	08 95       	ret

0000060a <acvt_lwr_mixr>:
 60a:	0e 94 c9 01 	call	0x392	; 0x392 <stpr_init>
 60e:	64 e0       	ldi	r22, 0x04	; 4
 610:	70 e0       	ldi	r23, 0x00	; 0
 612:	82 e0       	ldi	r24, 0x02	; 2
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	0e 94 cd 01 	call	0x39a	; 0x39a <stpr_clk>
 61a:	2f e3       	ldi	r18, 0x3F	; 63
 61c:	8d e0       	ldi	r24, 0x0D	; 13
 61e:	93 e0       	ldi	r25, 0x03	; 3
 620:	21 50       	subi	r18, 0x01	; 1
 622:	80 40       	sbci	r24, 0x00	; 0
 624:	90 40       	sbci	r25, 0x00	; 0
 626:	e1 f7       	brne	.-8      	; 0x620 <acvt_lwr_mixr+0x16>
 628:	00 c0       	rjmp	.+0      	; 0x62a <acvt_lwr_mixr+0x20>
 62a:	00 00       	nop
 62c:	64 e0       	ldi	r22, 0x04	; 4
 62e:	70 e0       	ldi	r23, 0x00	; 0
 630:	82 e0       	ldi	r24, 0x02	; 2
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	0e 94 5d 02 	call	0x4ba	; 0x4ba <stpr_aclk>
 638:	08 95       	ret

0000063a <dc_init>:
 63a:	87 b3       	in	r24, 0x17	; 23
 63c:	83 60       	ori	r24, 0x03	; 3
 63e:	87 bb       	out	0x17, r24	; 23
 640:	88 b3       	in	r24, 0x18	; 24
 642:	88 bb       	out	0x18, r24	; 24
 644:	88 b3       	in	r24, 0x18	; 24
 646:	88 bb       	out	0x18, r24	; 24
 648:	08 95       	ret

0000064a <dc_stp>:
 64a:	88 b3       	in	r24, 0x18	; 24
 64c:	8c 7f       	andi	r24, 0xFC	; 252
 64e:	88 bb       	out	0x18, r24	; 24
 650:	08 95       	ret

00000652 <dc_clk>:
}
	
void dc_clk(int ms){
	DC_PRT |= (1<<1); //Set pin B0 to high for clock wise rotation
 652:	28 b3       	in	r18, 0x18	; 24
 654:	22 60       	ori	r18, 0x02	; 2
 656:	28 bb       	out	0x18, r18	; 24
	while (ms--)
 658:	07 c0       	rjmp	.+14     	; 0x668 <dc_clk+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 65a:	89 ef       	ldi	r24, 0xF9	; 249
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	01 97       	sbiw	r24, 0x01	; 1
 660:	f1 f7       	brne	.-4      	; 0x65e <dc_clk+0xc>
 662:	00 c0       	rjmp	.+0      	; 0x664 <dc_clk+0x12>
 664:	00 00       	nop
 666:	c9 01       	movw	r24, r18
 668:	9c 01       	movw	r18, r24
 66a:	21 50       	subi	r18, 0x01	; 1
 66c:	31 09       	sbc	r19, r1
 66e:	89 2b       	or	r24, r25
 670:	a1 f7       	brne	.-24     	; 0x65a <dc_clk+0x8>
	{
		_delay_ms(1);
	}
	dc_stp();
 672:	0e 94 25 03 	call	0x64a	; 0x64a <dc_stp>
 676:	08 95       	ret

00000678 <acvt_mixer>:
void acvt_trayPsh();
void acvt_lwr_mixr();


void acvt_mixer(){
	dc_init();
 678:	0e 94 1d 03 	call	0x63a	; 0x63a <dc_init>
	dc_clk(2000);
 67c:	80 ed       	ldi	r24, 0xD0	; 208
 67e:	97 e0       	ldi	r25, 0x07	; 7
 680:	0e 94 29 03 	call	0x652	; 0x652 <dc_clk>
 684:	08 95       	ret

00000686 <main>:


//Global Variable


int main(void){
 686:	cf 93       	push	r28
 688:	df 93       	push	r29
 68a:	cd b7       	in	r28, 0x3d	; 61
 68c:	de b7       	in	r29, 0x3e	; 62
 68e:	64 97       	sbiw	r28, 0x14	; 20
 690:	0f b6       	in	r0, 0x3f	; 63
 692:	f8 94       	cli
 694:	de bf       	out	0x3e, r29	; 62
 696:	0f be       	out	0x3f, r0	; 63
 698:	cd bf       	out	0x3d, r28	; 61
	
	/*---Function for initializing the i2c module
	and the LCD Display---*/
	i2c_init();
 69a:	0e 94 41 00 	call	0x82	; 0x82 <i2c_init>
	i2c_start();
 69e:	0e 94 47 00 	call	0x8e	; 0x8e <i2c_start>
	i2c_write(0x70);
 6a2:	80 e7       	ldi	r24, 0x70	; 112
 6a4:	0e 94 4d 00 	call	0x9a	; 0x9a <i2c_write>
	lcd_init();
 6a8:	0e 94 cc 00 	call	0x198	; 0x198 <lcd_init>
		
		uint8_t num_trays = 0;
		uint8_t vol = 0;
		
		//Displaying the starting information
		lcd_cmd(0x80);
 6ac:	80 e8       	ldi	r24, 0x80	; 128
 6ae:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_msg("Rubber Solution Mixer 1.0");
 6b2:	8e e7       	ldi	r24, 0x7E	; 126
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
		lcd_cmd(0xC0);
 6ba:	80 ec       	ldi	r24, 0xC0	; 192
 6bc:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_cmd(0x14);
 6c0:	84 e1       	ldi	r24, 0x14	; 20
 6c2:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_cmd(0x14);
 6c6:	84 e1       	ldi	r24, 0x14	; 20
 6c8:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_cmd(0x14);
 6cc:	84 e1       	ldi	r24, 0x14	; 20
 6ce:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_cmd(0x14);
 6d2:	84 e1       	ldi	r24, 0x14	; 20
 6d4:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_msg("Welcome");
 6d8:	88 e9       	ldi	r24, 0x98	; 152
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
 6e0:	2f e9       	ldi	r18, 0x9F	; 159
 6e2:	86 e8       	ldi	r24, 0x86	; 134
 6e4:	91 e0       	ldi	r25, 0x01	; 1
 6e6:	21 50       	subi	r18, 0x01	; 1
 6e8:	80 40       	sbci	r24, 0x00	; 0
 6ea:	90 40       	sbci	r25, 0x00	; 0
 6ec:	e1 f7       	brne	.-8      	; 0x6e6 <main+0x60>
 6ee:	00 c0       	rjmp	.+0      	; 0x6f0 <main+0x6a>
 6f0:	00 00       	nop
		_delay_ms(500);
		for(int i = 0; i<27 ; i++)
 6f2:	00 e0       	ldi	r16, 0x00	; 0
 6f4:	10 e0       	ldi	r17, 0x00	; 0
 6f6:	0b c0       	rjmp	.+22     	; 0x70e <main+0x88>
		{
			lcd_cmd(0x18);
 6f8:	88 e1       	ldi	r24, 0x18	; 24
 6fa:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 6fe:	87 ea       	ldi	r24, 0xA7	; 167
 700:	91 e6       	ldi	r25, 0x61	; 97
 702:	01 97       	sbiw	r24, 0x01	; 1
 704:	f1 f7       	brne	.-4      	; 0x702 <main+0x7c>
 706:	00 c0       	rjmp	.+0      	; 0x708 <main+0x82>
 708:	00 00       	nop
		lcd_cmd(0x14);
		lcd_cmd(0x14);
		lcd_cmd(0x14);
		lcd_msg("Welcome");
		_delay_ms(500);
		for(int i = 0; i<27 ; i++)
 70a:	0f 5f       	subi	r16, 0xFF	; 255
 70c:	1f 4f       	sbci	r17, 0xFF	; 255
 70e:	0b 31       	cpi	r16, 0x1B	; 27
 710:	11 05       	cpc	r17, r1
 712:	94 f3       	brlt	.-28     	; 0x6f8 <main+0x72>
		}
		
		//Getting the user input for the number of trays
		redo_trays:
		
		lcd_cmd(0x01);
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_cmd(0x80);
 71a:	80 e8       	ldi	r24, 0x80	; 128
 71c:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_msg("Number of trays?");
 720:	80 ea       	ldi	r24, 0xA0	; 160
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
		lcd_cmd(0xC0);
 728:	80 ec       	ldi	r24, 0xC0	; 192
 72a:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_cmd(0x0F);
 72e:	8f e0       	ldi	r24, 0x0F	; 15
 730:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		
		char temp[10];
		char str[10];
		int digs=0;
 734:	00 e0       	ldi	r16, 0x00	; 0
 736:	10 e0       	ldi	r17, 0x00	; 0
		do
		{
			strcpy(temp,keyfind());
 738:	0e 94 28 01 	call	0x250	; 0x250 <keyfind>
 73c:	bc 01       	movw	r22, r24
 73e:	ce 01       	movw	r24, r28
 740:	0b 96       	adiw	r24, 0x0b	; 11
 742:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <strcpy>
			
			if (strcmp (temp, "=")==0){
 746:	64 e7       	ldi	r22, 0x74	; 116
 748:	70 e0       	ldi	r23, 0x00	; 0
 74a:	ce 01       	movw	r24, r28
 74c:	0b 96       	adiw	r24, 0x0b	; 11
 74e:	0e 94 c7 04 	call	0x98e	; 0x98e <strcmp>
 752:	89 2b       	or	r24, r25
 754:	01 f5       	brne	.+64     	; 0x796 <main+0x110>
				if (digs>=1)
 756:	10 16       	cp	r1, r16
 758:	11 06       	cpc	r1, r17
 75a:	74 f5       	brge	.+92     	; 0x7b8 <main+0x132>
				{
					lcd_cmd(0x10);
 75c:	80 e1       	ldi	r24, 0x10	; 16
 75e:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
					lcd_msg(" ");
 762:	86 e6       	ldi	r24, 0x66	; 102
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
					lcd_cmd(0x10);
 76a:	80 e1       	ldi	r24, 0x10	; 16
 76c:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
					lcd_cmd(0x10);
 770:	80 e1       	ldi	r24, 0x10	; 16
 772:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
					lcd_cmd(0x14);
 776:	84 e1       	ldi	r24, 0x14	; 20
 778:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
					digs--;
 77c:	01 50       	subi	r16, 0x01	; 1
 77e:	11 09       	sbc	r17, r1
					strcpy(&str[digs]," ");
 780:	e1 e0       	ldi	r30, 0x01	; 1
 782:	f0 e0       	ldi	r31, 0x00	; 0
 784:	ec 0f       	add	r30, r28
 786:	fd 1f       	adc	r31, r29
 788:	e0 0f       	add	r30, r16
 78a:	f1 1f       	adc	r31, r17
 78c:	80 e2       	ldi	r24, 0x20	; 32
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	91 83       	std	Z+1, r25	; 0x01
 792:	80 83       	st	Z, r24
				}
				continue;
 794:	11 c0       	rjmp	.+34     	; 0x7b8 <main+0x132>
			}
			lcd_msg(temp);
 796:	ce 01       	movw	r24, r28
 798:	0b 96       	adiw	r24, 0x0b	; 11
 79a:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
			strcpy(&str[digs],temp);
 79e:	be 01       	movw	r22, r28
 7a0:	65 5f       	subi	r22, 0xF5	; 245
 7a2:	7f 4f       	sbci	r23, 0xFF	; 255
 7a4:	81 e0       	ldi	r24, 0x01	; 1
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	8c 0f       	add	r24, r28
 7aa:	9d 1f       	adc	r25, r29
 7ac:	80 0f       	add	r24, r16
 7ae:	91 1f       	adc	r25, r17
 7b0:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <strcpy>
			digs++;
 7b4:	0f 5f       	subi	r16, 0xFF	; 255
 7b6:	1f 4f       	sbci	r17, 0xFF	; 255
		} while ((strcmp (temp, " ")!=0)|(atoi(str)==0));
 7b8:	66 e6       	ldi	r22, 0x66	; 102
 7ba:	70 e0       	ldi	r23, 0x00	; 0
 7bc:	ce 01       	movw	r24, r28
 7be:	0b 96       	adiw	r24, 0x0b	; 11
 7c0:	0e 94 c7 04 	call	0x98e	; 0x98e <strcmp>
 7c4:	7c 01       	movw	r14, r24
 7c6:	ce 01       	movw	r24, r28
 7c8:	01 96       	adiw	r24, 0x01	; 1
 7ca:	0e 94 a9 04 	call	0x952	; 0x952 <atoi>
 7ce:	ac 01       	movw	r20, r24
 7d0:	21 e0       	ldi	r18, 0x01	; 1
 7d2:	ef 28       	or	r14, r15
 7d4:	09 f4       	brne	.+2      	; 0x7d8 <main+0x152>
 7d6:	20 e0       	ldi	r18, 0x00	; 0
 7d8:	91 e0       	ldi	r25, 0x01	; 1
 7da:	41 15       	cp	r20, r1
 7dc:	51 05       	cpc	r21, r1
 7de:	09 f0       	breq	.+2      	; 0x7e2 <main+0x15c>
 7e0:	90 e0       	ldi	r25, 0x00	; 0
 7e2:	92 2b       	or	r25, r18
 7e4:	09 f0       	breq	.+2      	; 0x7e8 <main+0x162>
 7e6:	a8 cf       	rjmp	.-176    	; 0x738 <main+0xb2>

		num_trays = atoi(str);
 7e8:	14 2f       	mov	r17, r20
		lcd_cmd(0x01);
 7ea:	81 e0       	ldi	r24, 0x01	; 1
 7ec:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_cmd(0x80);
 7f0:	80 e8       	ldi	r24, 0x80	; 128
 7f2:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		
		if (num_trays >=20)
 7f6:	14 31       	cpi	r17, 0x14	; 20
 7f8:	f8 f0       	brcs	.+62     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
		{
			lcd_msg("Enter a value less than 20");
 7fa:	81 eb       	ldi	r24, 0xB1	; 177
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
 802:	9f e9       	ldi	r25, 0x9F	; 159
 804:	26 e8       	ldi	r18, 0x86	; 134
 806:	81 e0       	ldi	r24, 0x01	; 1
 808:	91 50       	subi	r25, 0x01	; 1
 80a:	20 40       	sbci	r18, 0x00	; 0
 80c:	80 40       	sbci	r24, 0x00	; 0
 80e:	e1 f7       	brne	.-8      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 810:	00 c0       	rjmp	.+0      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 812:	00 00       	nop
			_delay_ms(500);
			for(int i = 0; i<27 ; i++)
 814:	00 e0       	ldi	r16, 0x00	; 0
 816:	10 e0       	ldi	r17, 0x00	; 0
 818:	0b c0       	rjmp	.+22     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
			{
				lcd_cmd(0x18);
 81a:	88 e1       	ldi	r24, 0x18	; 24
 81c:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
 820:	87 ea       	ldi	r24, 0xA7	; 167
 822:	91 e6       	ldi	r25, 0x61	; 97
 824:	01 97       	sbiw	r24, 0x01	; 1
 826:	f1 f7       	brne	.-4      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 828:	00 c0       	rjmp	.+0      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 82a:	00 00       	nop
		
		if (num_trays >=20)
		{
			lcd_msg("Enter a value less than 20");
			_delay_ms(500);
			for(int i = 0; i<27 ; i++)
 82c:	0f 5f       	subi	r16, 0xFF	; 255
 82e:	1f 4f       	sbci	r17, 0xFF	; 255
 830:	0b 31       	cpi	r16, 0x1B	; 27
 832:	11 05       	cpc	r17, r1
 834:	94 f3       	brlt	.-28     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 836:	6e cf       	rjmp	.-292    	; 0x714 <main+0x8e>
			goto redo_trays;
		}
		
		//Getting the volume of trays in milliliters
		redo_vol:
		lcd_msg("Vol. of a tray (ml)");
 838:	8c ec       	ldi	r24, 0xCC	; 204
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
		lcd_cmd(0xC0);
 840:	80 ec       	ldi	r24, 0xC0	; 192
 842:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_cmd(0x0F);
 846:	8f e0       	ldi	r24, 0x0F	; 15
 848:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		strcpy(temp,"");
 84c:	1b 86       	std	Y+11, r1	; 0x0b
		strcpy(str,"");
 84e:	19 82       	std	Y+1, r1	; 0x01
		digs=0;
 850:	00 e0       	ldi	r16, 0x00	; 0
 852:	10 e0       	ldi	r17, 0x00	; 0
		do
		{
			strcpy(temp,keyfind());
 854:	0e 94 28 01 	call	0x250	; 0x250 <keyfind>
 858:	bc 01       	movw	r22, r24
 85a:	ce 01       	movw	r24, r28
 85c:	0b 96       	adiw	r24, 0x0b	; 11
 85e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <strcpy>
			
			if (strcmp (temp, "=")==0){
 862:	64 e7       	ldi	r22, 0x74	; 116
 864:	70 e0       	ldi	r23, 0x00	; 0
 866:	ce 01       	movw	r24, r28
 868:	0b 96       	adiw	r24, 0x0b	; 11
 86a:	0e 94 c7 04 	call	0x98e	; 0x98e <strcmp>
 86e:	89 2b       	or	r24, r25
 870:	01 f5       	brne	.+64     	; 0x8b2 <__stack+0x53>
				if (digs>=1)
 872:	10 16       	cp	r1, r16
 874:	11 06       	cpc	r1, r17
 876:	74 f5       	brge	.+92     	; 0x8d4 <__stack+0x75>
				{
					lcd_cmd(0x10);
 878:	80 e1       	ldi	r24, 0x10	; 16
 87a:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
					lcd_msg(" ");
 87e:	86 e6       	ldi	r24, 0x66	; 102
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
					lcd_cmd(0x10);
 886:	80 e1       	ldi	r24, 0x10	; 16
 888:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
					lcd_cmd(0x10);
 88c:	80 e1       	ldi	r24, 0x10	; 16
 88e:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
					lcd_cmd(0x14);
 892:	84 e1       	ldi	r24, 0x14	; 20
 894:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
					digs--;
 898:	01 50       	subi	r16, 0x01	; 1
 89a:	11 09       	sbc	r17, r1
					strcpy(&str[digs]," ");
 89c:	e1 e0       	ldi	r30, 0x01	; 1
 89e:	f0 e0       	ldi	r31, 0x00	; 0
 8a0:	ec 0f       	add	r30, r28
 8a2:	fd 1f       	adc	r31, r29
 8a4:	e0 0f       	add	r30, r16
 8a6:	f1 1f       	adc	r31, r17
 8a8:	80 e2       	ldi	r24, 0x20	; 32
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	91 83       	std	Z+1, r25	; 0x01
 8ae:	80 83       	st	Z, r24
				}
				continue;
 8b0:	11 c0       	rjmp	.+34     	; 0x8d4 <__stack+0x75>
			}
			lcd_msg(temp);
 8b2:	ce 01       	movw	r24, r28
 8b4:	0b 96       	adiw	r24, 0x0b	; 11
 8b6:	0e 94 1b 01 	call	0x236	; 0x236 <lcd_msg>
			strcpy(&str[digs],temp);
 8ba:	be 01       	movw	r22, r28
 8bc:	65 5f       	subi	r22, 0xF5	; 245
 8be:	7f 4f       	sbci	r23, 0xFF	; 255
 8c0:	81 e0       	ldi	r24, 0x01	; 1
 8c2:	90 e0       	ldi	r25, 0x00	; 0
 8c4:	8c 0f       	add	r24, r28
 8c6:	9d 1f       	adc	r25, r29
 8c8:	80 0f       	add	r24, r16
 8ca:	91 1f       	adc	r25, r17
 8cc:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <strcpy>
			digs++;
 8d0:	0f 5f       	subi	r16, 0xFF	; 255
 8d2:	1f 4f       	sbci	r17, 0xFF	; 255
		} while ((strcmp (temp, " ")!=0)|(atoi(str)==0));
 8d4:	66 e6       	ldi	r22, 0x66	; 102
 8d6:	70 e0       	ldi	r23, 0x00	; 0
 8d8:	ce 01       	movw	r24, r28
 8da:	0b 96       	adiw	r24, 0x0b	; 11
 8dc:	0e 94 c7 04 	call	0x98e	; 0x98e <strcmp>
 8e0:	7c 01       	movw	r14, r24
 8e2:	ce 01       	movw	r24, r28
 8e4:	01 96       	adiw	r24, 0x01	; 1
 8e6:	0e 94 a9 04 	call	0x952	; 0x952 <atoi>
 8ea:	ac 01       	movw	r20, r24
 8ec:	21 e0       	ldi	r18, 0x01	; 1
 8ee:	ef 28       	or	r14, r15
 8f0:	09 f4       	brne	.+2      	; 0x8f4 <__stack+0x95>
 8f2:	20 e0       	ldi	r18, 0x00	; 0
 8f4:	91 e0       	ldi	r25, 0x01	; 1
 8f6:	45 2b       	or	r20, r21
 8f8:	09 f0       	breq	.+2      	; 0x8fc <__stack+0x9d>
 8fa:	90 e0       	ldi	r25, 0x00	; 0
 8fc:	92 2b       	or	r25, r18
 8fe:	09 f0       	breq	.+2      	; 0x902 <__stack+0xa3>
 900:	a9 cf       	rjmp	.-174    	; 0x854 <__DATA_REGION_LENGTH__+0x54>

		vol = atoi(str);
		lcd_cmd(0x01);
 902:	81 e0       	ldi	r24, 0x01	; 1
 904:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		lcd_cmd(0x80);
 908:	80 e8       	ldi	r24, 0x80	; 128
 90a:	0e 94 96 00 	call	0x12c	; 0x12c <lcd_cmd>
		/*--The code required for calculation of the volumes 
		of each liquid and pH Values--*/
		
		/*--Code for Motors of the tray Dispenser to push trays
		onto the conveyor belt--*/
		acvt_lwr_mixr();
 90e:	0e 94 05 03 	call	0x60a	; 0x60a <acvt_lwr_mixr>
 912:	9f e9       	ldi	r25, 0x9F	; 159
 914:	26 e8       	ldi	r18, 0x86	; 134
 916:	81 e0       	ldi	r24, 0x01	; 1
 918:	91 50       	subi	r25, 0x01	; 1
 91a:	20 40       	sbci	r18, 0x00	; 0
 91c:	80 40       	sbci	r24, 0x00	; 0
 91e:	e1 f7       	brne	.-8      	; 0x918 <__stack+0xb9>
 920:	00 c0       	rjmp	.+0      	; 0x922 <__stack+0xc3>
 922:	00 00       	nop
		_delay_ms(500);
		
		acvt_trayPsh();
 924:	0e 94 ed 02 	call	0x5da	; 0x5da <acvt_trayPsh>
 928:	9f e9       	ldi	r25, 0x9F	; 159
 92a:	26 e8       	ldi	r18, 0x86	; 134
 92c:	81 e0       	ldi	r24, 0x01	; 1
 92e:	91 50       	subi	r25, 0x01	; 1
 930:	20 40       	sbci	r18, 0x00	; 0
 932:	80 40       	sbci	r24, 0x00	; 0
 934:	e1 f7       	brne	.-8      	; 0x92e <__stack+0xcf>
 936:	00 c0       	rjmp	.+0      	; 0x938 <__stack+0xd9>
 938:	00 00       	nop
		_delay_ms(500);
		
		acvt_mixer();
 93a:	0e 94 3c 03 	call	0x678	; 0x678 <acvt_mixer>
 93e:	9f e3       	ldi	r25, 0x3F	; 63
 940:	2d e0       	ldi	r18, 0x0D	; 13
 942:	83 e0       	ldi	r24, 0x03	; 3
 944:	91 50       	subi	r25, 0x01	; 1
 946:	20 40       	sbci	r18, 0x00	; 0
 948:	80 40       	sbci	r24, 0x00	; 0
 94a:	e1 f7       	brne	.-8      	; 0x944 <__stack+0xe5>
 94c:	00 c0       	rjmp	.+0      	; 0x94e <__stack+0xef>
 94e:	00 00       	nop
		_delay_ms(1000);
		/*--Code for the Conveyor belt and the IR sensor to--*/
		
		/*----*/
			
	}
 950:	ad ce       	rjmp	.-678    	; 0x6ac <main+0x26>

00000952 <atoi>:
 952:	fc 01       	movw	r30, r24
 954:	88 27       	eor	r24, r24
 956:	99 27       	eor	r25, r25
 958:	e8 94       	clt
 95a:	21 91       	ld	r18, Z+
 95c:	20 32       	cpi	r18, 0x20	; 32
 95e:	e9 f3       	breq	.-6      	; 0x95a <atoi+0x8>
 960:	29 30       	cpi	r18, 0x09	; 9
 962:	10 f0       	brcs	.+4      	; 0x968 <atoi+0x16>
 964:	2e 30       	cpi	r18, 0x0E	; 14
 966:	c8 f3       	brcs	.-14     	; 0x95a <atoi+0x8>
 968:	2b 32       	cpi	r18, 0x2B	; 43
 96a:	41 f0       	breq	.+16     	; 0x97c <atoi+0x2a>
 96c:	2d 32       	cpi	r18, 0x2D	; 45
 96e:	39 f4       	brne	.+14     	; 0x97e <atoi+0x2c>
 970:	68 94       	set
 972:	04 c0       	rjmp	.+8      	; 0x97c <atoi+0x2a>
 974:	0e 94 d7 04 	call	0x9ae	; 0x9ae <__mulhi_const_10>
 978:	82 0f       	add	r24, r18
 97a:	91 1d       	adc	r25, r1
 97c:	21 91       	ld	r18, Z+
 97e:	20 53       	subi	r18, 0x30	; 48
 980:	2a 30       	cpi	r18, 0x0A	; 10
 982:	c0 f3       	brcs	.-16     	; 0x974 <atoi+0x22>
 984:	1e f4       	brtc	.+6      	; 0x98c <atoi+0x3a>
 986:	90 95       	com	r25
 988:	81 95       	neg	r24
 98a:	9f 4f       	sbci	r25, 0xFF	; 255
 98c:	08 95       	ret

0000098e <strcmp>:
 98e:	fb 01       	movw	r30, r22
 990:	dc 01       	movw	r26, r24
 992:	8d 91       	ld	r24, X+
 994:	01 90       	ld	r0, Z+
 996:	80 19       	sub	r24, r0
 998:	01 10       	cpse	r0, r1
 99a:	d9 f3       	breq	.-10     	; 0x992 <strcmp+0x4>
 99c:	99 0b       	sbc	r25, r25
 99e:	08 95       	ret

000009a0 <strcpy>:
 9a0:	fb 01       	movw	r30, r22
 9a2:	dc 01       	movw	r26, r24
 9a4:	01 90       	ld	r0, Z+
 9a6:	0d 92       	st	X+, r0
 9a8:	00 20       	and	r0, r0
 9aa:	e1 f7       	brne	.-8      	; 0x9a4 <strcpy+0x4>
 9ac:	08 95       	ret

000009ae <__mulhi_const_10>:
 9ae:	7a e0       	ldi	r23, 0x0A	; 10
 9b0:	97 9f       	mul	r25, r23
 9b2:	90 2d       	mov	r25, r0
 9b4:	87 9f       	mul	r24, r23
 9b6:	80 2d       	mov	r24, r0
 9b8:	91 0d       	add	r25, r1
 9ba:	11 24       	eor	r1, r1
 9bc:	08 95       	ret

000009be <_exit>:
 9be:	f8 94       	cli

000009c0 <__stop_program>:
 9c0:	ff cf       	rjmp	.-2      	; 0x9c0 <__stop_program>
