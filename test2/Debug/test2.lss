
test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001580  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000096  00800060  00001580  00001614  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000044  008000f6  008000f6  000016aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000016aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000016dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b8  00000000  00000000  00001718  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001fcf  00000000  00000000  000018d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ef  00000000  00000000  0000389f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000136c  00000000  00000000  0000418e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000484  00000000  00000000  000054fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000062b  00000000  00000000  00005980  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001279  00000000  00000000  00005fab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00007224  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__vector_1>
       8:	0c 94 92 04 	jmp	0x924	; 0x924 <__vector_2>
       c:	0c 94 ae 05 	jmp	0xb5c	; 0xb5c <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 51 03 	jmp	0x6a2	; 0x6a2 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e8       	ldi	r30, 0x80	; 128
      68:	f5 e1       	ldi	r31, 0x15	; 21
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a6 3f       	cpi	r26, 0xF6	; 246
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	21 e0       	ldi	r18, 0x01	; 1
      78:	a6 ef       	ldi	r26, 0xF6	; 246
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	aa 33       	cpi	r26, 0x3A	; 58
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 5d 08 	call	0x10ba	; 0x10ba <main>
      8a:	0c 94 be 0a 	jmp	0x157c	; 0x157c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <keyfind>:

char keyfind()
{
	while(1)
	{
		KEY_DDR = 0xF0;           /* set port direction as input-output */
      92:	80 ef       	ldi	r24, 0xF0	; 240
      94:	84 bb       	out	0x14, r24	; 20
		KEY_PRT = 0xFF;
      96:	8f ef       	ldi	r24, 0xFF	; 255
      98:	85 bb       	out	0x15, r24	; 21

		do
		{
			KEY_PRT &= 0x0F;      /* mask PORT for column read only */
      9a:	85 b3       	in	r24, 0x15	; 21
      9c:	8f 70       	andi	r24, 0x0F	; 15
      9e:	85 bb       	out	0x15, r24	; 21
			asm("NOP");
      a0:	00 00       	nop
			colloc = (KEY_PIN & 0x0F); /* read status of column */
      a2:	83 b3       	in	r24, 0x13	; 19
      a4:	8f 70       	andi	r24, 0x0F	; 15
      a6:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <colloc>
		}while(colloc != 0x0F);
      aa:	8f 30       	cpi	r24, 0x0F	; 15
      ac:	b1 f7       	brne	.-20     	; 0x9a <keyfind+0x8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      ae:	87 e8       	ldi	r24, 0x87	; 135
      b0:	93 e1       	ldi	r25, 0x13	; 19
      b2:	01 97       	sbiw	r24, 0x01	; 1
      b4:	f1 f7       	brne	.-4      	; 0xb2 <keyfind+0x20>
      b6:	00 c0       	rjmp	.+0      	; 0xb8 <keyfind+0x26>
      b8:	00 00       	nop
		do
		{
			do
			{
				_delay_ms(20);             /* 20ms key debounce time */
				colloc = (KEY_PIN & 0x0F); /* read status of column */
      ba:	83 b3       	in	r24, 0x13	; 19
      bc:	8f 70       	andi	r24, 0x0F	; 15
      be:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <colloc>
				}while(colloc == 0x0F);        /* check for any key press */
      c2:	8f 30       	cpi	r24, 0x0F	; 15
      c4:	a1 f3       	breq	.-24     	; 0xae <keyfind+0x1c>
      c6:	8f e0       	ldi	r24, 0x0F	; 15
      c8:	97 e2       	ldi	r25, 0x27	; 39
      ca:	01 97       	sbiw	r24, 0x01	; 1
      cc:	f1 f7       	brne	.-4      	; 0xca <keyfind+0x38>
      ce:	00 c0       	rjmp	.+0      	; 0xd0 <keyfind+0x3e>
      d0:	00 00       	nop
				
				_delay_ms (40);	            /* 20 ms key debounce time */
				colloc = (KEY_PIN & 0x0F);
      d2:	83 b3       	in	r24, 0x13	; 19
      d4:	8f 70       	andi	r24, 0x0F	; 15
      d6:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <colloc>
			}while(colloc == 0x0F);
      da:	8f 30       	cpi	r24, 0x0F	; 15
      dc:	41 f3       	breq	.-48     	; 0xae <keyfind+0x1c>

			/* now check for rows */
			KEY_PRT = 0xEF;            /* check for pressed key in 1st row */
      de:	8f ee       	ldi	r24, 0xEF	; 239
      e0:	85 bb       	out	0x15, r24	; 21
			asm("NOP");
      e2:	00 00       	nop
			colloc = (KEY_PIN & 0x0F);
      e4:	83 b3       	in	r24, 0x13	; 19
      e6:	8f 70       	andi	r24, 0x0F	; 15
      e8:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <colloc>
			if(colloc != 0x0F)
      ec:	8f 30       	cpi	r24, 0x0F	; 15
      ee:	19 f0       	breq	.+6      	; 0xf6 <keyfind+0x64>
			{
				rowloc = 0;
      f0:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <rowloc>
				break;
      f4:	27 c0       	rjmp	.+78     	; 0x144 <keyfind+0xb2>
			}

			KEY_PRT = 0xDF;		/* check for pressed key in 2nd row */
      f6:	8f ed       	ldi	r24, 0xDF	; 223
      f8:	85 bb       	out	0x15, r24	; 21
			asm("NOP");
      fa:	00 00       	nop
			colloc = (KEY_PIN & 0x0F);
      fc:	83 b3       	in	r24, 0x13	; 19
      fe:	8f 70       	andi	r24, 0x0F	; 15
     100:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <colloc>
			if(colloc != 0x0F)
     104:	8f 30       	cpi	r24, 0x0F	; 15
     106:	21 f0       	breq	.+8      	; 0x110 <keyfind+0x7e>
			{
				rowloc = 1;
     108:	81 e0       	ldi	r24, 0x01	; 1
     10a:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <rowloc>
				break;
     10e:	1a c0       	rjmp	.+52     	; 0x144 <keyfind+0xb2>
			}
			
			KEY_PRT = 0xBF;		/* check for pressed key in 3rd row */
     110:	8f eb       	ldi	r24, 0xBF	; 191
     112:	85 bb       	out	0x15, r24	; 21
			asm("NOP");
     114:	00 00       	nop
			colloc = (KEY_PIN & 0x0F);
     116:	83 b3       	in	r24, 0x13	; 19
     118:	8f 70       	andi	r24, 0x0F	; 15
     11a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <colloc>
			if(colloc != 0x0F)
     11e:	8f 30       	cpi	r24, 0x0F	; 15
     120:	21 f0       	breq	.+8      	; 0x12a <keyfind+0x98>
			{
				rowloc = 2;
     122:	82 e0       	ldi	r24, 0x02	; 2
     124:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <rowloc>
				break;
     128:	0d c0       	rjmp	.+26     	; 0x144 <keyfind+0xb2>
			}

			KEY_PRT = 0x7F;		/* check for pressed key in 4th row */
     12a:	8f e7       	ldi	r24, 0x7F	; 127
     12c:	85 bb       	out	0x15, r24	; 21
			asm("NOP");
     12e:	00 00       	nop
			colloc = (KEY_PIN & 0x0F);
     130:	83 b3       	in	r24, 0x13	; 19
     132:	8f 70       	andi	r24, 0x0F	; 15
     134:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <colloc>
			if(colloc != 0x0F)
     138:	8f 30       	cpi	r24, 0x0F	; 15
     13a:	09 f4       	brne	.+2      	; 0x13e <keyfind+0xac>
     13c:	aa cf       	rjmp	.-172    	; 0x92 <keyfind>
			{
				rowloc = 3;
     13e:	83 e0       	ldi	r24, 0x03	; 3
     140:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <rowloc>
				break;
			}
		}

		if(colloc == 0x0E)
     144:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <colloc>
     148:	8e 30       	cpi	r24, 0x0E	; 14
     14a:	59 f4       	brne	.+22     	; 0x162 <keyfind+0xd0>
		return(keypad[rowloc][0]);
     14c:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <rowloc>
     150:	f0 e0       	ldi	r31, 0x00	; 0
     152:	ee 0f       	add	r30, r30
     154:	ff 1f       	adc	r31, r31
     156:	ee 0f       	add	r30, r30
     158:	ff 1f       	adc	r31, r31
     15a:	e0 5a       	subi	r30, 0xA0	; 160
     15c:	ff 4f       	sbci	r31, 0xFF	; 255
     15e:	80 81       	ld	r24, Z
     160:	08 95       	ret
		else if(colloc == 0x0D)
     162:	8d 30       	cpi	r24, 0x0D	; 13
     164:	59 f4       	brne	.+22     	; 0x17c <keyfind+0xea>
		return(keypad[rowloc][1]);
     166:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <rowloc>
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	ee 0f       	add	r30, r30
     16e:	ff 1f       	adc	r31, r31
     170:	ee 0f       	add	r30, r30
     172:	ff 1f       	adc	r31, r31
     174:	e0 5a       	subi	r30, 0xA0	; 160
     176:	ff 4f       	sbci	r31, 0xFF	; 255
     178:	81 81       	ldd	r24, Z+1	; 0x01
     17a:	08 95       	ret
		else if(colloc == 0x0B)
     17c:	8b 30       	cpi	r24, 0x0B	; 11
     17e:	59 f4       	brne	.+22     	; 0x196 <keyfind+0x104>
		return(keypad[rowloc][2]);
     180:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <rowloc>
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	ee 0f       	add	r30, r30
     188:	ff 1f       	adc	r31, r31
     18a:	ee 0f       	add	r30, r30
     18c:	ff 1f       	adc	r31, r31
     18e:	e0 5a       	subi	r30, 0xA0	; 160
     190:	ff 4f       	sbci	r31, 0xFF	; 255
     192:	82 81       	ldd	r24, Z+2	; 0x02
     194:	08 95       	ret
		else
		return(keypad[rowloc][3]);
     196:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <rowloc>
     19a:	f0 e0       	ldi	r31, 0x00	; 0
     19c:	ee 0f       	add	r30, r30
     19e:	ff 1f       	adc	r31, r31
     1a0:	ee 0f       	add	r30, r30
     1a2:	ff 1f       	adc	r31, r31
     1a4:	e0 5a       	subi	r30, 0xA0	; 160
     1a6:	ff 4f       	sbci	r31, 0xFF	; 255
     1a8:	83 81       	ldd	r24, Z+3	; 0x03
     1aa:	08 95       	ret

000001ac <stprTrayPsh_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //----Command for Left Shift
	delay(200);
     1ac:	8f ef       	ldi	r24, 0xFF	; 255
     1ae:	84 bb       	out	0x14, r24	; 20
     1b0:	15 ba       	out	0x15, r1	; 21
     1b2:	08 95       	ret

000001b4 <stprMix_init>:
     1b4:	8f ef       	ldi	r24, 0xFF	; 255
     1b6:	81 bb       	out	0x11, r24	; 17
     1b8:	12 ba       	out	0x12, r1	; 18
     1ba:	08 95       	ret

000001bc <stprTrayPsh_clk>:
     1bc:	ac 01       	movw	r20, r24
     1be:	20 e0       	ldi	r18, 0x00	; 0
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	22 c0       	rjmp	.+68     	; 0x208 <stprTrayPsh_clk+0x4c>
     1c4:	90 e9       	ldi	r25, 0x90	; 144
     1c6:	95 bb       	out	0x15, r25	; 21
     1c8:	8b ed       	ldi	r24, 0xDB	; 219
     1ca:	95 e0       	ldi	r25, 0x05	; 5
     1cc:	01 97       	sbiw	r24, 0x01	; 1
     1ce:	f1 f7       	brne	.-4      	; 0x1cc <stprTrayPsh_clk+0x10>
     1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <stprTrayPsh_clk+0x16>
     1d2:	00 00       	nop
     1d4:	90 ec       	ldi	r25, 0xC0	; 192
     1d6:	95 bb       	out	0x15, r25	; 21
     1d8:	8b ed       	ldi	r24, 0xDB	; 219
     1da:	95 e0       	ldi	r25, 0x05	; 5
     1dc:	01 97       	sbiw	r24, 0x01	; 1
     1de:	f1 f7       	brne	.-4      	; 0x1dc <stprTrayPsh_clk+0x20>
     1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <stprTrayPsh_clk+0x26>
     1e2:	00 00       	nop
     1e4:	90 e6       	ldi	r25, 0x60	; 96
     1e6:	95 bb       	out	0x15, r25	; 21
     1e8:	8b ed       	ldi	r24, 0xDB	; 219
     1ea:	95 e0       	ldi	r25, 0x05	; 5
     1ec:	01 97       	sbiw	r24, 0x01	; 1
     1ee:	f1 f7       	brne	.-4      	; 0x1ec <stprTrayPsh_clk+0x30>
     1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <stprTrayPsh_clk+0x36>
     1f2:	00 00       	nop
     1f4:	90 e3       	ldi	r25, 0x30	; 48
     1f6:	95 bb       	out	0x15, r25	; 21
     1f8:	8b ed       	ldi	r24, 0xDB	; 219
     1fa:	95 e0       	ldi	r25, 0x05	; 5
     1fc:	01 97       	sbiw	r24, 0x01	; 1
     1fe:	f1 f7       	brne	.-4      	; 0x1fc <stprTrayPsh_clk+0x40>
     200:	00 c0       	rjmp	.+0      	; 0x202 <stprTrayPsh_clk+0x46>
     202:	00 00       	nop
     204:	2f 5f       	subi	r18, 0xFF	; 255
     206:	3f 4f       	sbci	r19, 0xFF	; 255
     208:	24 17       	cp	r18, r20
     20a:	35 07       	cpc	r19, r21
     20c:	dc f2       	brlt	.-74     	; 0x1c4 <stprTrayPsh_clk+0x8>
     20e:	80 e9       	ldi	r24, 0x90	; 144
     210:	85 bb       	out	0x15, r24	; 21
     212:	8b ed       	ldi	r24, 0xDB	; 219
     214:	95 e0       	ldi	r25, 0x05	; 5
     216:	01 97       	sbiw	r24, 0x01	; 1
     218:	f1 f7       	brne	.-4      	; 0x216 <stprTrayPsh_clk+0x5a>
     21a:	00 c0       	rjmp	.+0      	; 0x21c <stprTrayPsh_clk+0x60>
     21c:	00 00       	nop
     21e:	08 95       	ret

00000220 <stprTrayPsh_aclk>:
     220:	ac 01       	movw	r20, r24
     222:	20 e0       	ldi	r18, 0x00	; 0
     224:	30 e0       	ldi	r19, 0x00	; 0
     226:	22 c0       	rjmp	.+68     	; 0x26c <stprTrayPsh_aclk+0x4c>
     228:	90 e3       	ldi	r25, 0x30	; 48
     22a:	95 bb       	out	0x15, r25	; 21
     22c:	8b ed       	ldi	r24, 0xDB	; 219
     22e:	95 e0       	ldi	r25, 0x05	; 5
     230:	01 97       	sbiw	r24, 0x01	; 1
     232:	f1 f7       	brne	.-4      	; 0x230 <stprTrayPsh_aclk+0x10>
     234:	00 c0       	rjmp	.+0      	; 0x236 <stprTrayPsh_aclk+0x16>
     236:	00 00       	nop
     238:	90 e6       	ldi	r25, 0x60	; 96
     23a:	95 bb       	out	0x15, r25	; 21
     23c:	8b ed       	ldi	r24, 0xDB	; 219
     23e:	95 e0       	ldi	r25, 0x05	; 5
     240:	01 97       	sbiw	r24, 0x01	; 1
     242:	f1 f7       	brne	.-4      	; 0x240 <stprTrayPsh_aclk+0x20>
     244:	00 c0       	rjmp	.+0      	; 0x246 <stprTrayPsh_aclk+0x26>
     246:	00 00       	nop
     248:	90 ec       	ldi	r25, 0xC0	; 192
     24a:	95 bb       	out	0x15, r25	; 21
     24c:	8b ed       	ldi	r24, 0xDB	; 219
     24e:	95 e0       	ldi	r25, 0x05	; 5
     250:	01 97       	sbiw	r24, 0x01	; 1
     252:	f1 f7       	brne	.-4      	; 0x250 <stprTrayPsh_aclk+0x30>
     254:	00 c0       	rjmp	.+0      	; 0x256 <stprTrayPsh_aclk+0x36>
     256:	00 00       	nop
     258:	90 e9       	ldi	r25, 0x90	; 144
     25a:	95 bb       	out	0x15, r25	; 21
     25c:	8b ed       	ldi	r24, 0xDB	; 219
     25e:	95 e0       	ldi	r25, 0x05	; 5
     260:	01 97       	sbiw	r24, 0x01	; 1
     262:	f1 f7       	brne	.-4      	; 0x260 <stprTrayPsh_aclk+0x40>
     264:	00 c0       	rjmp	.+0      	; 0x266 <stprTrayPsh_aclk+0x46>
     266:	00 00       	nop
     268:	2f 5f       	subi	r18, 0xFF	; 255
     26a:	3f 4f       	sbci	r19, 0xFF	; 255
     26c:	24 17       	cp	r18, r20
     26e:	35 07       	cpc	r19, r21
     270:	dc f2       	brlt	.-74     	; 0x228 <stprTrayPsh_aclk+0x8>
     272:	80 e9       	ldi	r24, 0x90	; 144
     274:	85 bb       	out	0x15, r24	; 21
     276:	8b ed       	ldi	r24, 0xDB	; 219
     278:	95 e0       	ldi	r25, 0x05	; 5
     27a:	01 97       	sbiw	r24, 0x01	; 1
     27c:	f1 f7       	brne	.-4      	; 0x27a <stprTrayPsh_aclk+0x5a>
     27e:	00 c0       	rjmp	.+0      	; 0x280 <stprTrayPsh_aclk+0x60>
     280:	00 00       	nop
     282:	08 95       	ret

00000284 <stprMix_clk>:
     284:	ac 01       	movw	r20, r24
     286:	20 e0       	ldi	r18, 0x00	; 0
     288:	30 e0       	ldi	r19, 0x00	; 0
     28a:	22 c0       	rjmp	.+68     	; 0x2d0 <stprMix_clk+0x4c>
     28c:	90 e9       	ldi	r25, 0x90	; 144
     28e:	92 bb       	out	0x12, r25	; 18
     290:	8b ed       	ldi	r24, 0xDB	; 219
     292:	95 e0       	ldi	r25, 0x05	; 5
     294:	01 97       	sbiw	r24, 0x01	; 1
     296:	f1 f7       	brne	.-4      	; 0x294 <stprMix_clk+0x10>
     298:	00 c0       	rjmp	.+0      	; 0x29a <stprMix_clk+0x16>
     29a:	00 00       	nop
     29c:	90 ec       	ldi	r25, 0xC0	; 192
     29e:	92 bb       	out	0x12, r25	; 18
     2a0:	8b ed       	ldi	r24, 0xDB	; 219
     2a2:	95 e0       	ldi	r25, 0x05	; 5
     2a4:	01 97       	sbiw	r24, 0x01	; 1
     2a6:	f1 f7       	brne	.-4      	; 0x2a4 <stprMix_clk+0x20>
     2a8:	00 c0       	rjmp	.+0      	; 0x2aa <stprMix_clk+0x26>
     2aa:	00 00       	nop
     2ac:	90 e6       	ldi	r25, 0x60	; 96
     2ae:	92 bb       	out	0x12, r25	; 18
     2b0:	8b ed       	ldi	r24, 0xDB	; 219
     2b2:	95 e0       	ldi	r25, 0x05	; 5
     2b4:	01 97       	sbiw	r24, 0x01	; 1
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <stprMix_clk+0x30>
     2b8:	00 c0       	rjmp	.+0      	; 0x2ba <stprMix_clk+0x36>
     2ba:	00 00       	nop
     2bc:	90 e3       	ldi	r25, 0x30	; 48
     2be:	92 bb       	out	0x12, r25	; 18
     2c0:	8b ed       	ldi	r24, 0xDB	; 219
     2c2:	95 e0       	ldi	r25, 0x05	; 5
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <stprMix_clk+0x40>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <stprMix_clk+0x46>
     2ca:	00 00       	nop
     2cc:	2f 5f       	subi	r18, 0xFF	; 255
     2ce:	3f 4f       	sbci	r19, 0xFF	; 255
     2d0:	24 17       	cp	r18, r20
     2d2:	35 07       	cpc	r19, r21
     2d4:	dc f2       	brlt	.-74     	; 0x28c <stprMix_clk+0x8>
     2d6:	80 e9       	ldi	r24, 0x90	; 144
     2d8:	82 bb       	out	0x12, r24	; 18
     2da:	8b ed       	ldi	r24, 0xDB	; 219
     2dc:	95 e0       	ldi	r25, 0x05	; 5
     2de:	01 97       	sbiw	r24, 0x01	; 1
     2e0:	f1 f7       	brne	.-4      	; 0x2de <stprMix_clk+0x5a>
     2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <stprMix_clk+0x60>
     2e4:	00 00       	nop
     2e6:	08 95       	ret

000002e8 <stprMix_aclk>:
     2e8:	ac 01       	movw	r20, r24
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	22 c0       	rjmp	.+68     	; 0x334 <stprMix_aclk+0x4c>
     2f0:	90 e3       	ldi	r25, 0x30	; 48
     2f2:	92 bb       	out	0x12, r25	; 18
     2f4:	8b ed       	ldi	r24, 0xDB	; 219
     2f6:	95 e0       	ldi	r25, 0x05	; 5
     2f8:	01 97       	sbiw	r24, 0x01	; 1
     2fa:	f1 f7       	brne	.-4      	; 0x2f8 <stprMix_aclk+0x10>
     2fc:	00 c0       	rjmp	.+0      	; 0x2fe <stprMix_aclk+0x16>
     2fe:	00 00       	nop
     300:	90 e6       	ldi	r25, 0x60	; 96
     302:	92 bb       	out	0x12, r25	; 18
     304:	8b ed       	ldi	r24, 0xDB	; 219
     306:	95 e0       	ldi	r25, 0x05	; 5
     308:	01 97       	sbiw	r24, 0x01	; 1
     30a:	f1 f7       	brne	.-4      	; 0x308 <stprMix_aclk+0x20>
     30c:	00 c0       	rjmp	.+0      	; 0x30e <stprMix_aclk+0x26>
     30e:	00 00       	nop
     310:	90 ec       	ldi	r25, 0xC0	; 192
     312:	92 bb       	out	0x12, r25	; 18
     314:	8b ed       	ldi	r24, 0xDB	; 219
     316:	95 e0       	ldi	r25, 0x05	; 5
     318:	01 97       	sbiw	r24, 0x01	; 1
     31a:	f1 f7       	brne	.-4      	; 0x318 <stprMix_aclk+0x30>
     31c:	00 c0       	rjmp	.+0      	; 0x31e <stprMix_aclk+0x36>
     31e:	00 00       	nop
     320:	90 e9       	ldi	r25, 0x90	; 144
     322:	92 bb       	out	0x12, r25	; 18
     324:	8b ed       	ldi	r24, 0xDB	; 219
     326:	95 e0       	ldi	r25, 0x05	; 5
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	f1 f7       	brne	.-4      	; 0x328 <stprMix_aclk+0x40>
     32c:	00 c0       	rjmp	.+0      	; 0x32e <stprMix_aclk+0x46>
     32e:	00 00       	nop
     330:	2f 5f       	subi	r18, 0xFF	; 255
     332:	3f 4f       	sbci	r19, 0xFF	; 255
     334:	24 17       	cp	r18, r20
     336:	35 07       	cpc	r19, r21
     338:	dc f2       	brlt	.-74     	; 0x2f0 <stprMix_aclk+0x8>
     33a:	80 e9       	ldi	r24, 0x90	; 144
     33c:	82 bb       	out	0x12, r24	; 18
     33e:	8b ed       	ldi	r24, 0xDB	; 219
     340:	95 e0       	ldi	r25, 0x05	; 5
     342:	01 97       	sbiw	r24, 0x01	; 1
     344:	f1 f7       	brne	.-4      	; 0x342 <stprMix_aclk+0x5a>
     346:	00 c0       	rjmp	.+0      	; 0x348 <stprMix_aclk+0x60>
     348:	00 00       	nop
     34a:	08 95       	ret

0000034c <dc_init>:
     34c:	81 b3       	in	r24, 0x11	; 17
     34e:	83 60       	ori	r24, 0x03	; 3
     350:	81 bb       	out	0x11, r24	; 17
     352:	82 b3       	in	r24, 0x12	; 18
     354:	82 bb       	out	0x12, r24	; 18
     356:	82 b3       	in	r24, 0x12	; 18
     358:	82 bb       	out	0x12, r24	; 18
     35a:	08 95       	ret

0000035c <dc_stp>:
     35c:	82 b3       	in	r24, 0x12	; 18
     35e:	8c 7f       	andi	r24, 0xFC	; 252
     360:	82 bb       	out	0x12, r24	; 18
     362:	08 95       	ret

00000364 <dc_aclk>:
     364:	22 b3       	in	r18, 0x12	; 18
     366:	21 60       	ori	r18, 0x01	; 1
     368:	22 bb       	out	0x12, r18	; 18
     36a:	07 c0       	rjmp	.+14     	; 0x37a <dc_aclk+0x16>
     36c:	89 ef       	ldi	r24, 0xF9	; 249
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	01 97       	sbiw	r24, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <dc_aclk+0xc>
     374:	00 c0       	rjmp	.+0      	; 0x376 <dc_aclk+0x12>
     376:	00 00       	nop
     378:	c9 01       	movw	r24, r18
     37a:	9c 01       	movw	r18, r24
     37c:	21 50       	subi	r18, 0x01	; 1
     37e:	31 09       	sbc	r19, r1
     380:	89 2b       	or	r24, r25
     382:	a1 f7       	brne	.-24     	; 0x36c <dc_aclk+0x8>
     384:	0e 94 ae 01 	call	0x35c	; 0x35c <dc_stp>
     388:	08 95       	ret

0000038a <dc_clk>:
     38a:	22 b3       	in	r18, 0x12	; 18
     38c:	22 60       	ori	r18, 0x02	; 2
     38e:	22 bb       	out	0x12, r18	; 18
     390:	07 c0       	rjmp	.+14     	; 0x3a0 <dc_clk+0x16>
     392:	89 ef       	ldi	r24, 0xF9	; 249
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	01 97       	sbiw	r24, 0x01	; 1
     398:	f1 f7       	brne	.-4      	; 0x396 <dc_clk+0xc>
     39a:	00 c0       	rjmp	.+0      	; 0x39c <dc_clk+0x12>
     39c:	00 00       	nop
     39e:	c9 01       	movw	r24, r18
     3a0:	9c 01       	movw	r18, r24
     3a2:	21 50       	subi	r18, 0x01	; 1
     3a4:	31 09       	sbc	r19, r1
     3a6:	89 2b       	or	r24, r25
     3a8:	a1 f7       	brne	.-24     	; 0x392 <dc_clk+0x8>
     3aa:	0e 94 ae 01 	call	0x35c	; 0x35c <dc_stp>
     3ae:	08 95       	ret

000003b0 <acvt_mixer>:
     3b0:	0e 94 a6 01 	call	0x34c	; 0x34c <dc_init>
     3b4:	84 e1       	ldi	r24, 0x14	; 20
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	0e 94 c5 01 	call	0x38a	; 0x38a <dc_clk>
     3bc:	84 e1       	ldi	r24, 0x14	; 20
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0e 94 b2 01 	call	0x364	; 0x364 <dc_aclk>
     3c4:	0e 94 ae 01 	call	0x35c	; 0x35c <dc_stp>
     3c8:	08 95       	ret

000003ca <ADC_Init>:
     3ca:	1a ba       	out	0x1a, r1	; 26
     3cc:	87 e8       	ldi	r24, 0x87	; 135
     3ce:	86 b9       	out	0x06, r24	; 6
     3d0:	80 e4       	ldi	r24, 0x40	; 64
     3d2:	87 b9       	out	0x07, r24	; 7
     3d4:	08 95       	ret

000003d6 <ADC_Read>:
     3d6:	97 b1       	in	r25, 0x07	; 7
     3d8:	8f 70       	andi	r24, 0x0F	; 15
     3da:	98 2b       	or	r25, r24
     3dc:	97 b9       	out	0x07, r25	; 7
     3de:	86 b1       	in	r24, 0x06	; 6
     3e0:	80 64       	ori	r24, 0x40	; 64
     3e2:	86 b9       	out	0x06, r24	; 6
     3e4:	34 9b       	sbis	0x06, 4	; 6
     3e6:	fe cf       	rjmp	.-4      	; 0x3e4 <ADC_Read+0xe>
     3e8:	83 e0       	ldi	r24, 0x03	; 3
     3ea:	8a 95       	dec	r24
     3ec:	f1 f7       	brne	.-4      	; 0x3ea <ADC_Read+0x14>
     3ee:	00 00       	nop
     3f0:	24 b1       	in	r18, 0x04	; 4
     3f2:	85 b1       	in	r24, 0x05	; 5
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	98 2f       	mov	r25, r24
     3f8:	88 27       	eor	r24, r24
     3fa:	82 0f       	add	r24, r18
     3fc:	91 1d       	adc	r25, r1
     3fe:	08 95       	ret

00000400 <switchOn>:
     400:	85 b3       	in	r24, 0x15	; 21
     402:	88 60       	ori	r24, 0x08	; 8
     404:	85 bb       	out	0x15, r24	; 21
     406:	08 95       	ret

00000408 <switchOff>:
     408:	85 b3       	in	r24, 0x15	; 21
     40a:	85 bb       	out	0x15, r24	; 21
     40c:	08 95       	ret

0000040e <ultrasonic1>:
     40e:	88 b3       	in	r24, 0x18	; 24
     410:	88 bb       	out	0x18, r24	; 24
     412:	88 b3       	in	r24, 0x18	; 24
     414:	88 bb       	out	0x18, r24	; 24
     416:	08 95       	ret

00000418 <ultrasonic2>:
     418:	88 b3       	in	r24, 0x18	; 24
     41a:	88 60       	ori	r24, 0x08	; 8
     41c:	88 bb       	out	0x18, r24	; 24
     41e:	88 b3       	in	r24, 0x18	; 24
     420:	88 bb       	out	0x18, r24	; 24
     422:	08 95       	ret

00000424 <ultrasonic3>:
     424:	88 b3       	in	r24, 0x18	; 24
     426:	88 bb       	out	0x18, r24	; 24
     428:	88 b3       	in	r24, 0x18	; 24
     42a:	88 60       	ori	r24, 0x08	; 8
     42c:	88 bb       	out	0x18, r24	; 24
     42e:	08 95       	ret

00000430 <depth>:
     430:	83 ed       	ldi	r24, 0xD3	; 211
     432:	90 e3       	ldi	r25, 0x30	; 48
     434:	01 97       	sbiw	r24, 0x01	; 1
     436:	f1 f7       	brne	.-4      	; 0x434 <depth+0x4>
     438:	00 c0       	rjmp	.+0      	; 0x43a <depth+0xa>
     43a:	00 00       	nop
     43c:	88 b3       	in	r24, 0x18	; 24
     43e:	82 60       	ori	r24, 0x02	; 2
     440:	88 bb       	out	0x18, r24	; 24
     442:	95 e0       	ldi	r25, 0x05	; 5
     444:	9a 95       	dec	r25
     446:	f1 f7       	brne	.-4      	; 0x444 <depth+0x14>
     448:	88 b3       	in	r24, 0x18	; 24
     44a:	8d 7f       	andi	r24, 0xFD	; 253
     44c:	88 bb       	out	0x18, r24	; 24
     44e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <pulse>
     452:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <pulse+0x1>
     456:	84 35       	cpi	r24, 0x54	; 84
     458:	9b 40       	sbci	r25, 0x0B	; 11
     45a:	1c f0       	brlt	.+6      	; 0x462 <depth+0x32>
     45c:	81 e0       	ldi	r24, 0x01	; 1
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	08 95       	ret
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	08 95       	ret

00000468 <ir_init>:
     468:	80 ef       	ldi	r24, 0xF0	; 240
     46a:	84 bb       	out	0x14, r24	; 20
     46c:	8f e0       	ldi	r24, 0x0F	; 15
     46e:	85 bb       	out	0x15, r24	; 21
     470:	08 95       	ret

00000472 <act_IR>:
     472:	0e 94 34 02 	call	0x468	; 0x468 <ir_init>
     476:	9a 9b       	sbis	0x13, 2	; 19
     478:	fe cf       	rjmp	.-4      	; 0x476 <act_IR+0x4>
     47a:	81 e0       	ldi	r24, 0x01	; 1
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	08 95       	ret

00000480 <timer_1>:
     480:	1f bc       	out	0x2f, r1	; 47
     482:	1e bc       	out	0x2e, r1	; 46
     484:	8e b5       	in	r24, 0x2e	; 46
     486:	85 60       	ori	r24, 0x05	; 5
     488:	8e bd       	out	0x2e, r24	; 46
     48a:	1d bc       	out	0x2d, r1	; 45
     48c:	1c bc       	out	0x2c, r1	; 44
     48e:	08 95       	ret

00000490 <pump_w>:
     490:	8f 92       	push	r8
     492:	9f 92       	push	r9
     494:	af 92       	push	r10
     496:	bf 92       	push	r11
     498:	cf 92       	push	r12
     49a:	df 92       	push	r13
     49c:	ef 92       	push	r14
     49e:	ff 92       	push	r15
     4a0:	0f 93       	push	r16
     4a2:	1f 93       	push	r17
     4a4:	6b 01       	movw	r12, r22
     4a6:	7c 01       	movw	r14, r24
     4a8:	88 b3       	in	r24, 0x18	; 24
     4aa:	88 bb       	out	0x18, r24	; 24
     4ac:	88 b3       	in	r24, 0x18	; 24
     4ae:	88 bb       	out	0x18, r24	; 24
     4b0:	88 b3       	in	r24, 0x18	; 24
     4b2:	80 62       	ori	r24, 0x20	; 32
     4b4:	88 bb       	out	0x18, r24	; 24
     4b6:	0e 94 40 02 	call	0x480	; 0x480 <timer_1>
     4ba:	81 b3       	in	r24, 0x11	; 17
     4bc:	8b 7f       	andi	r24, 0xFB	; 251
     4be:	81 bb       	out	0x11, r24	; 17
     4c0:	8f ef       	ldi	r24, 0xFF	; 255
     4c2:	82 bb       	out	0x12, r24	; 18
     4c4:	81 b3       	in	r24, 0x11	; 17
     4c6:	8b 7f       	andi	r24, 0xFB	; 251
     4c8:	81 bb       	out	0x11, r24	; 17
     4ca:	80 e4       	ldi	r24, 0x40	; 64
     4cc:	8b bf       	out	0x3b, r24	; 59
     4ce:	83 e0       	ldi	r24, 0x03	; 3
     4d0:	85 bf       	out	0x35, r24	; 53
     4d2:	78 94       	sei
     4d4:	b3 c0       	rjmp	.+358    	; 0x63c <pump_w+0x1ac>
     4d6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <millisec>
     4da:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <millisec+0x1>
     4de:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <millisec+0x2>
     4e2:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <millisec+0x3>
     4e6:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <oldTime>
     4ea:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <oldTime+0x1>
     4ee:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <oldTime+0x2>
     4f2:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <oldTime+0x3>
     4f6:	84 1b       	sub	r24, r20
     4f8:	95 0b       	sbc	r25, r21
     4fa:	a6 0b       	sbc	r26, r22
     4fc:	b7 0b       	sbc	r27, r23
     4fe:	88 3e       	cpi	r24, 0xE8	; 232
     500:	93 40       	sbci	r25, 0x03	; 3
     502:	a1 05       	cpc	r26, r1
     504:	b1 05       	cpc	r27, r1
     506:	08 f4       	brcc	.+2      	; 0x50a <pump_w+0x7a>
     508:	99 c0       	rjmp	.+306    	; 0x63c <pump_w+0x1ac>
     50a:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <sec>
     50e:	90 91 ff 00 	lds	r25, 0x00FF	; 0x8000ff <sec+0x1>
     512:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <sec+0x2>
     516:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <sec+0x3>
     51a:	01 96       	adiw	r24, 0x01	; 1
     51c:	a1 1d       	adc	r26, r1
     51e:	b1 1d       	adc	r27, r1
     520:	80 93 fe 00 	sts	0x00FE, r24	; 0x8000fe <sec>
     524:	90 93 ff 00 	sts	0x00FF, r25	; 0x8000ff <sec+0x1>
     528:	a0 93 00 01 	sts	0x0100, r26	; 0x800100 <sec+0x2>
     52c:	b0 93 01 01 	sts	0x0101, r27	; 0x800101 <sec+0x3>
     530:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <sec>
     534:	90 91 ff 00 	lds	r25, 0x00FF	; 0x8000ff <sec+0x1>
     538:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <sec+0x2>
     53c:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <sec+0x3>
     540:	01 97       	sbiw	r24, 0x01	; 1
     542:	a1 05       	cpc	r26, r1
     544:	b1 05       	cpc	r27, r1
     546:	09 f0       	breq	.+2      	; 0x54a <pump_w+0xba>
     548:	79 c0       	rjmp	.+242    	; 0x63c <pump_w+0x1ac>
     54a:	f8 94       	cli
     54c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <millisec>
     550:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <millisec+0x1>
     554:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <millisec+0x2>
     558:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <millisec+0x3>
     55c:	00 91 0c 01 	lds	r16, 0x010C	; 0x80010c <oldTime>
     560:	10 91 0d 01 	lds	r17, 0x010D	; 0x80010d <oldTime+0x1>
     564:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <oldTime+0x2>
     568:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <oldTime+0x3>
     56c:	bc 01       	movw	r22, r24
     56e:	cd 01       	movw	r24, r26
     570:	60 1b       	sub	r22, r16
     572:	71 0b       	sbc	r23, r17
     574:	82 0b       	sbc	r24, r18
     576:	93 0b       	sbc	r25, r19
     578:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__floatunsisf>
     57c:	9b 01       	movw	r18, r22
     57e:	ac 01       	movw	r20, r24
     580:	60 e0       	ldi	r22, 0x00	; 0
     582:	70 e0       	ldi	r23, 0x00	; 0
     584:	8a e7       	ldi	r24, 0x7A	; 122
     586:	94 e4       	ldi	r25, 0x44	; 68
     588:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3>
     58c:	4b 01       	movw	r8, r22
     58e:	5c 01       	movw	r10, r24
     590:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <pulseCount>
     594:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <pulseCount+0x1>
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__floatunsisf>
     5a0:	a5 01       	movw	r20, r10
     5a2:	94 01       	movw	r18, r8
     5a4:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__mulsf3>
     5a8:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <calibrationFactor>
     5ac:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <calibrationFactor+0x1>
     5b0:	40 91 72 00 	lds	r20, 0x0072	; 0x800072 <calibrationFactor+0x2>
     5b4:	50 91 73 00 	lds	r21, 0x0073	; 0x800073 <calibrationFactor+0x3>
     5b8:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3>
     5bc:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <flowRate>
     5c0:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <flowRate+0x1>
     5c4:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <flowRate+0x2>
     5c8:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <flowRate+0x3>
     5cc:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <millisec>
     5d0:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <millisec+0x1>
     5d4:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <millisec+0x2>
     5d8:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <millisec+0x3>
     5dc:	00 93 0c 01 	sts	0x010C, r16	; 0x80010c <oldTime>
     5e0:	10 93 0d 01 	sts	0x010D, r17	; 0x80010d <oldTime+0x1>
     5e4:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <oldTime+0x2>
     5e8:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <oldTime+0x3>
     5ec:	20 e0       	ldi	r18, 0x00	; 0
     5ee:	30 e0       	ldi	r19, 0x00	; 0
     5f0:	40 e7       	ldi	r20, 0x70	; 112
     5f2:	52 e4       	ldi	r21, 0x42	; 66
     5f4:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3>
     5f8:	20 e0       	ldi	r18, 0x00	; 0
     5fa:	30 e0       	ldi	r19, 0x00	; 0
     5fc:	4a e7       	ldi	r20, 0x7A	; 122
     5fe:	54 e4       	ldi	r21, 0x44	; 68
     600:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__mulsf3>
     604:	0e 94 35 09 	call	0x126a	; 0x126a <__fixunssfsi>
     608:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <flowMilliLitres+0x1>
     60c:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <flowMilliLitres>
     610:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <totalMilliLitres>
     614:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <totalMilliLitres+0x1>
     618:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <totalMilliLitres+0x2>
     61c:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <totalMilliLitres+0x3>
     620:	da 01       	movw	r26, r20
     622:	c9 01       	movw	r24, r18
     624:	86 0f       	add	r24, r22
     626:	97 1f       	adc	r25, r23
     628:	a1 1d       	adc	r26, r1
     62a:	b1 1d       	adc	r27, r1
     62c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <totalMilliLitres>
     630:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <totalMilliLitres+0x1>
     634:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <totalMilliLitres+0x2>
     638:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <totalMilliLitres+0x3>
     63c:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <totalMilliLitres>
     640:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <totalMilliLitres+0x1>
     644:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <totalMilliLitres+0x2>
     648:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <totalMilliLitres+0x3>
     64c:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__floatunsisf>
     650:	a7 01       	movw	r20, r14
     652:	96 01       	movw	r18, r12
     654:	0e 94 b7 08 	call	0x116e	; 0x116e <__cmpsf2>
     658:	81 11       	cpse	r24, r1
     65a:	3d cf       	rjmp	.-390    	; 0x4d6 <pump_w+0x46>
     65c:	88 b3       	in	r24, 0x18	; 24
     65e:	8f 7d       	andi	r24, 0xDF	; 223
     660:	88 bb       	out	0x18, r24	; 24
     662:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <millisec>
     666:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <millisec+0x1>
     66a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <millisec+0x2>
     66e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <millisec+0x3>
     672:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <sec>
     676:	10 92 ff 00 	sts	0x00FF, r1	; 0x8000ff <sec+0x1>
     67a:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <sec+0x2>
     67e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <sec+0x3>
     682:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <pulseCount+0x1>
     686:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <pulseCount>
     68a:	78 94       	sei
     68c:	1f 91       	pop	r17
     68e:	0f 91       	pop	r16
     690:	ff 90       	pop	r15
     692:	ef 90       	pop	r14
     694:	df 90       	pop	r13
     696:	cf 90       	pop	r12
     698:	bf 90       	pop	r11
     69a:	af 90       	pop	r10
     69c:	9f 90       	pop	r9
     69e:	8f 90       	pop	r8
     6a0:	08 95       	ret

000006a2 <__vector_7>:
     6a2:	1f 92       	push	r1
     6a4:	0f 92       	push	r0
     6a6:	0f b6       	in	r0, 0x3f	; 63
     6a8:	0f 92       	push	r0
     6aa:	11 24       	eor	r1, r1
     6ac:	8f 93       	push	r24
     6ae:	9f 93       	push	r25
     6b0:	af 93       	push	r26
     6b2:	bf 93       	push	r27
     6b4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <millisec>
     6b8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <millisec+0x1>
     6bc:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <millisec+0x2>
     6c0:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <millisec+0x3>
     6c4:	01 96       	adiw	r24, 0x01	; 1
     6c6:	a1 1d       	adc	r26, r1
     6c8:	b1 1d       	adc	r27, r1
     6ca:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <millisec>
     6ce:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <millisec+0x1>
     6d2:	a0 93 04 01 	sts	0x0104, r26	; 0x800104 <millisec+0x2>
     6d6:	b0 93 05 01 	sts	0x0105, r27	; 0x800105 <millisec+0x3>
     6da:	bf 91       	pop	r27
     6dc:	af 91       	pop	r26
     6de:	9f 91       	pop	r25
     6e0:	8f 91       	pop	r24
     6e2:	0f 90       	pop	r0
     6e4:	0f be       	out	0x3f, r0	; 63
     6e6:	0f 90       	pop	r0
     6e8:	1f 90       	pop	r1
     6ea:	18 95       	reti

000006ec <__vector_1>:
     6ec:	1f 92       	push	r1
     6ee:	0f 92       	push	r0
     6f0:	0f b6       	in	r0, 0x3f	; 63
     6f2:	0f 92       	push	r0
     6f4:	11 24       	eor	r1, r1
     6f6:	8f 93       	push	r24
     6f8:	9f 93       	push	r25
     6fa:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <pulseCount>
     6fe:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <pulseCount+0x1>
     702:	01 96       	adiw	r24, 0x01	; 1
     704:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <pulseCount+0x1>
     708:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <pulseCount>
     70c:	9f 91       	pop	r25
     70e:	8f 91       	pop	r24
     710:	0f 90       	pop	r0
     712:	0f be       	out	0x3f, r0	; 63
     714:	0f 90       	pop	r0
     716:	1f 90       	pop	r1
     718:	18 95       	reti

0000071a <pump_l>:
     71a:	8f 92       	push	r8
     71c:	9f 92       	push	r9
     71e:	af 92       	push	r10
     720:	bf 92       	push	r11
     722:	cf 92       	push	r12
     724:	df 92       	push	r13
     726:	ef 92       	push	r14
     728:	ff 92       	push	r15
     72a:	0f 93       	push	r16
     72c:	1f 93       	push	r17
     72e:	6b 01       	movw	r12, r22
     730:	7c 01       	movw	r14, r24
     732:	88 b3       	in	r24, 0x18	; 24
     734:	80 64       	ori	r24, 0x40	; 64
     736:	88 bb       	out	0x18, r24	; 24
     738:	0e 94 40 02 	call	0x480	; 0x480 <timer_1>
     73c:	81 b3       	in	r24, 0x11	; 17
     73e:	8b 7f       	andi	r24, 0xFB	; 251
     740:	81 bb       	out	0x11, r24	; 17
     742:	8f ef       	ldi	r24, 0xFF	; 255
     744:	82 bb       	out	0x12, r24	; 18
     746:	81 b3       	in	r24, 0x11	; 17
     748:	87 7f       	andi	r24, 0xF7	; 247
     74a:	81 bb       	out	0x11, r24	; 17
     74c:	80 e8       	ldi	r24, 0x80	; 128
     74e:	8b bf       	out	0x3b, r24	; 59
     750:	8c e0       	ldi	r24, 0x0C	; 12
     752:	85 bf       	out	0x35, r24	; 53
     754:	78 94       	sei
     756:	b3 c0       	rjmp	.+358    	; 0x8be <__stack+0x5f>
     758:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <millisec>
     75c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <millisec+0x1>
     760:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <millisec+0x2>
     764:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <millisec+0x3>
     768:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <oldTime>
     76c:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <oldTime+0x1>
     770:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <oldTime+0x2>
     774:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <oldTime+0x3>
     778:	84 1b       	sub	r24, r20
     77a:	95 0b       	sbc	r25, r21
     77c:	a6 0b       	sbc	r26, r22
     77e:	b7 0b       	sbc	r27, r23
     780:	88 3e       	cpi	r24, 0xE8	; 232
     782:	93 40       	sbci	r25, 0x03	; 3
     784:	a1 05       	cpc	r26, r1
     786:	b1 05       	cpc	r27, r1
     788:	08 f4       	brcc	.+2      	; 0x78c <pump_l+0x72>
     78a:	99 c0       	rjmp	.+306    	; 0x8be <__stack+0x5f>
     78c:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <sec>
     790:	90 91 ff 00 	lds	r25, 0x00FF	; 0x8000ff <sec+0x1>
     794:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <sec+0x2>
     798:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <sec+0x3>
     79c:	01 96       	adiw	r24, 0x01	; 1
     79e:	a1 1d       	adc	r26, r1
     7a0:	b1 1d       	adc	r27, r1
     7a2:	80 93 fe 00 	sts	0x00FE, r24	; 0x8000fe <sec>
     7a6:	90 93 ff 00 	sts	0x00FF, r25	; 0x8000ff <sec+0x1>
     7aa:	a0 93 00 01 	sts	0x0100, r26	; 0x800100 <sec+0x2>
     7ae:	b0 93 01 01 	sts	0x0101, r27	; 0x800101 <sec+0x3>
     7b2:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <sec>
     7b6:	90 91 ff 00 	lds	r25, 0x00FF	; 0x8000ff <sec+0x1>
     7ba:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <sec+0x2>
     7be:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <sec+0x3>
     7c2:	01 97       	sbiw	r24, 0x01	; 1
     7c4:	a1 05       	cpc	r26, r1
     7c6:	b1 05       	cpc	r27, r1
     7c8:	09 f0       	breq	.+2      	; 0x7cc <pump_l+0xb2>
     7ca:	79 c0       	rjmp	.+242    	; 0x8be <__stack+0x5f>
     7cc:	f8 94       	cli
     7ce:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <millisec>
     7d2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <millisec+0x1>
     7d6:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <millisec+0x2>
     7da:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <millisec+0x3>
     7de:	00 91 0c 01 	lds	r16, 0x010C	; 0x80010c <oldTime>
     7e2:	10 91 0d 01 	lds	r17, 0x010D	; 0x80010d <oldTime+0x1>
     7e6:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <oldTime+0x2>
     7ea:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <oldTime+0x3>
     7ee:	bc 01       	movw	r22, r24
     7f0:	cd 01       	movw	r24, r26
     7f2:	60 1b       	sub	r22, r16
     7f4:	71 0b       	sbc	r23, r17
     7f6:	82 0b       	sbc	r24, r18
     7f8:	93 0b       	sbc	r25, r19
     7fa:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__floatunsisf>
     7fe:	9b 01       	movw	r18, r22
     800:	ac 01       	movw	r20, r24
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	8a e7       	ldi	r24, 0x7A	; 122
     808:	94 e4       	ldi	r25, 0x44	; 68
     80a:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3>
     80e:	4b 01       	movw	r8, r22
     810:	5c 01       	movw	r10, r24
     812:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <pulseCount>
     816:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <pulseCount+0x1>
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__floatunsisf>
     822:	a5 01       	movw	r20, r10
     824:	94 01       	movw	r18, r8
     826:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__mulsf3>
     82a:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <calibrationFactor>
     82e:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <calibrationFactor+0x1>
     832:	40 91 72 00 	lds	r20, 0x0072	; 0x800072 <calibrationFactor+0x2>
     836:	50 91 73 00 	lds	r21, 0x0073	; 0x800073 <calibrationFactor+0x3>
     83a:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3>
     83e:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <flowRate>
     842:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <flowRate+0x1>
     846:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <flowRate+0x2>
     84a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <flowRate+0x3>
     84e:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <millisec>
     852:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <millisec+0x1>
     856:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <millisec+0x2>
     85a:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <millisec+0x3>
     85e:	00 93 0c 01 	sts	0x010C, r16	; 0x80010c <oldTime>
     862:	10 93 0d 01 	sts	0x010D, r17	; 0x80010d <oldTime+0x1>
     866:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <oldTime+0x2>
     86a:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <oldTime+0x3>
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	40 e7       	ldi	r20, 0x70	; 112
     874:	52 e4       	ldi	r21, 0x42	; 66
     876:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3>
     87a:	20 e0       	ldi	r18, 0x00	; 0
     87c:	30 e0       	ldi	r19, 0x00	; 0
     87e:	4a e7       	ldi	r20, 0x7A	; 122
     880:	54 e4       	ldi	r21, 0x44	; 68
     882:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__mulsf3>
     886:	0e 94 35 09 	call	0x126a	; 0x126a <__fixunssfsi>
     88a:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <flowMilliLitres+0x1>
     88e:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <flowMilliLitres>
     892:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <totalMilliLitres>
     896:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <totalMilliLitres+0x1>
     89a:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <totalMilliLitres+0x2>
     89e:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <totalMilliLitres+0x3>
     8a2:	da 01       	movw	r26, r20
     8a4:	c9 01       	movw	r24, r18
     8a6:	86 0f       	add	r24, r22
     8a8:	97 1f       	adc	r25, r23
     8aa:	a1 1d       	adc	r26, r1
     8ac:	b1 1d       	adc	r27, r1
     8ae:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <totalMilliLitres>
     8b2:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <totalMilliLitres+0x1>
     8b6:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <totalMilliLitres+0x2>
     8ba:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <totalMilliLitres+0x3>
     8be:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <totalMilliLitres>
     8c2:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <totalMilliLitres+0x1>
     8c6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <totalMilliLitres+0x2>
     8ca:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <totalMilliLitres+0x3>
     8ce:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__floatunsisf>
     8d2:	a7 01       	movw	r20, r14
     8d4:	96 01       	movw	r18, r12
     8d6:	0e 94 b7 08 	call	0x116e	; 0x116e <__cmpsf2>
     8da:	81 11       	cpse	r24, r1
     8dc:	3d cf       	rjmp	.-390    	; 0x758 <pump_l+0x3e>
     8de:	88 b3       	in	r24, 0x18	; 24
     8e0:	8f 7b       	andi	r24, 0xBF	; 191
     8e2:	88 bb       	out	0x18, r24	; 24
     8e4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <millisec>
     8e8:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <millisec+0x1>
     8ec:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <millisec+0x2>
     8f0:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <millisec+0x3>
     8f4:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <sec>
     8f8:	10 92 ff 00 	sts	0x00FF, r1	; 0x8000ff <sec+0x1>
     8fc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <sec+0x2>
     900:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <sec+0x3>
     904:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <pulseCount+0x1>
     908:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <pulseCount>
     90c:	78 94       	sei
     90e:	1f 91       	pop	r17
     910:	0f 91       	pop	r16
     912:	ff 90       	pop	r15
     914:	ef 90       	pop	r14
     916:	df 90       	pop	r13
     918:	cf 90       	pop	r12
     91a:	bf 90       	pop	r11
     91c:	af 90       	pop	r10
     91e:	9f 90       	pop	r9
     920:	8f 90       	pop	r8
     922:	08 95       	ret

00000924 <__vector_2>:
     924:	1f 92       	push	r1
     926:	0f 92       	push	r0
     928:	0f b6       	in	r0, 0x3f	; 63
     92a:	0f 92       	push	r0
     92c:	11 24       	eor	r1, r1
     92e:	8f 93       	push	r24
     930:	9f 93       	push	r25
     932:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <pulseCount>
     936:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <pulseCount+0x1>
     93a:	01 96       	adiw	r24, 0x01	; 1
     93c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <pulseCount+0x1>
     940:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <pulseCount>
     944:	9f 91       	pop	r25
     946:	8f 91       	pop	r24
     948:	0f 90       	pop	r0
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	0f 90       	pop	r0
     94e:	1f 90       	pop	r1
     950:	18 95       	reti

00000952 <pump_a>:
     952:	8f 92       	push	r8
     954:	9f 92       	push	r9
     956:	af 92       	push	r10
     958:	bf 92       	push	r11
     95a:	cf 92       	push	r12
     95c:	df 92       	push	r13
     95e:	ef 92       	push	r14
     960:	ff 92       	push	r15
     962:	0f 93       	push	r16
     964:	1f 93       	push	r17
     966:	6b 01       	movw	r12, r22
     968:	7c 01       	movw	r14, r24
     96a:	88 b3       	in	r24, 0x18	; 24
     96c:	80 68       	ori	r24, 0x80	; 128
     96e:	88 bb       	out	0x18, r24	; 24
     970:	0e 94 40 02 	call	0x480	; 0x480 <timer_1>
     974:	87 b3       	in	r24, 0x17	; 23
     976:	8b 7f       	andi	r24, 0xFB	; 251
     978:	87 bb       	out	0x17, r24	; 23
     97a:	8f ef       	ldi	r24, 0xFF	; 255
     97c:	88 bb       	out	0x18, r24	; 24
     97e:	87 b3       	in	r24, 0x17	; 23
     980:	8b 7f       	andi	r24, 0xFB	; 251
     982:	87 bb       	out	0x17, r24	; 23
     984:	80 e2       	ldi	r24, 0x20	; 32
     986:	8b bf       	out	0x3b, r24	; 59
     988:	80 e4       	ldi	r24, 0x40	; 64
     98a:	85 bf       	out	0x35, r24	; 53
     98c:	78 94       	sei
     98e:	b3 c0       	rjmp	.+358    	; 0xaf6 <pump_a+0x1a4>
     990:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <millisec>
     994:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <millisec+0x1>
     998:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <millisec+0x2>
     99c:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <millisec+0x3>
     9a0:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <oldTime>
     9a4:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <oldTime+0x1>
     9a8:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <oldTime+0x2>
     9ac:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <oldTime+0x3>
     9b0:	84 1b       	sub	r24, r20
     9b2:	95 0b       	sbc	r25, r21
     9b4:	a6 0b       	sbc	r26, r22
     9b6:	b7 0b       	sbc	r27, r23
     9b8:	88 3e       	cpi	r24, 0xE8	; 232
     9ba:	93 40       	sbci	r25, 0x03	; 3
     9bc:	a1 05       	cpc	r26, r1
     9be:	b1 05       	cpc	r27, r1
     9c0:	08 f4       	brcc	.+2      	; 0x9c4 <pump_a+0x72>
     9c2:	99 c0       	rjmp	.+306    	; 0xaf6 <pump_a+0x1a4>
     9c4:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <sec>
     9c8:	90 91 ff 00 	lds	r25, 0x00FF	; 0x8000ff <sec+0x1>
     9cc:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <sec+0x2>
     9d0:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <sec+0x3>
     9d4:	01 96       	adiw	r24, 0x01	; 1
     9d6:	a1 1d       	adc	r26, r1
     9d8:	b1 1d       	adc	r27, r1
     9da:	80 93 fe 00 	sts	0x00FE, r24	; 0x8000fe <sec>
     9de:	90 93 ff 00 	sts	0x00FF, r25	; 0x8000ff <sec+0x1>
     9e2:	a0 93 00 01 	sts	0x0100, r26	; 0x800100 <sec+0x2>
     9e6:	b0 93 01 01 	sts	0x0101, r27	; 0x800101 <sec+0x3>
     9ea:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <sec>
     9ee:	90 91 ff 00 	lds	r25, 0x00FF	; 0x8000ff <sec+0x1>
     9f2:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <sec+0x2>
     9f6:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <sec+0x3>
     9fa:	01 97       	sbiw	r24, 0x01	; 1
     9fc:	a1 05       	cpc	r26, r1
     9fe:	b1 05       	cpc	r27, r1
     a00:	09 f0       	breq	.+2      	; 0xa04 <pump_a+0xb2>
     a02:	79 c0       	rjmp	.+242    	; 0xaf6 <pump_a+0x1a4>
     a04:	f8 94       	cli
     a06:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <millisec>
     a0a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <millisec+0x1>
     a0e:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <millisec+0x2>
     a12:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <millisec+0x3>
     a16:	00 91 0c 01 	lds	r16, 0x010C	; 0x80010c <oldTime>
     a1a:	10 91 0d 01 	lds	r17, 0x010D	; 0x80010d <oldTime+0x1>
     a1e:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <oldTime+0x2>
     a22:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <oldTime+0x3>
     a26:	bc 01       	movw	r22, r24
     a28:	cd 01       	movw	r24, r26
     a2a:	60 1b       	sub	r22, r16
     a2c:	71 0b       	sbc	r23, r17
     a2e:	82 0b       	sbc	r24, r18
     a30:	93 0b       	sbc	r25, r19
     a32:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__floatunsisf>
     a36:	9b 01       	movw	r18, r22
     a38:	ac 01       	movw	r20, r24
     a3a:	60 e0       	ldi	r22, 0x00	; 0
     a3c:	70 e0       	ldi	r23, 0x00	; 0
     a3e:	8a e7       	ldi	r24, 0x7A	; 122
     a40:	94 e4       	ldi	r25, 0x44	; 68
     a42:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3>
     a46:	4b 01       	movw	r8, r22
     a48:	5c 01       	movw	r10, r24
     a4a:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <pulseCount>
     a4e:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <pulseCount+0x1>
     a52:	80 e0       	ldi	r24, 0x00	; 0
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__floatunsisf>
     a5a:	a5 01       	movw	r20, r10
     a5c:	94 01       	movw	r18, r8
     a5e:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__mulsf3>
     a62:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <calibrationFactor>
     a66:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <calibrationFactor+0x1>
     a6a:	40 91 72 00 	lds	r20, 0x0072	; 0x800072 <calibrationFactor+0x2>
     a6e:	50 91 73 00 	lds	r21, 0x0073	; 0x800073 <calibrationFactor+0x3>
     a72:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3>
     a76:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <flowRate>
     a7a:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <flowRate+0x1>
     a7e:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <flowRate+0x2>
     a82:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <flowRate+0x3>
     a86:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <millisec>
     a8a:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <millisec+0x1>
     a8e:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <millisec+0x2>
     a92:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <millisec+0x3>
     a96:	00 93 0c 01 	sts	0x010C, r16	; 0x80010c <oldTime>
     a9a:	10 93 0d 01 	sts	0x010D, r17	; 0x80010d <oldTime+0x1>
     a9e:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <oldTime+0x2>
     aa2:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <oldTime+0x3>
     aa6:	20 e0       	ldi	r18, 0x00	; 0
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	40 e7       	ldi	r20, 0x70	; 112
     aac:	52 e4       	ldi	r21, 0x42	; 66
     aae:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3>
     ab2:	20 e0       	ldi	r18, 0x00	; 0
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	4a e7       	ldi	r20, 0x7A	; 122
     ab8:	54 e4       	ldi	r21, 0x44	; 68
     aba:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__mulsf3>
     abe:	0e 94 35 09 	call	0x126a	; 0x126a <__fixunssfsi>
     ac2:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <flowMilliLitres+0x1>
     ac6:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <flowMilliLitres>
     aca:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <totalMilliLitres>
     ace:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <totalMilliLitres+0x1>
     ad2:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <totalMilliLitres+0x2>
     ad6:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <totalMilliLitres+0x3>
     ada:	da 01       	movw	r26, r20
     adc:	c9 01       	movw	r24, r18
     ade:	86 0f       	add	r24, r22
     ae0:	97 1f       	adc	r25, r23
     ae2:	a1 1d       	adc	r26, r1
     ae4:	b1 1d       	adc	r27, r1
     ae6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <totalMilliLitres>
     aea:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <totalMilliLitres+0x1>
     aee:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <totalMilliLitres+0x2>
     af2:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <totalMilliLitres+0x3>
     af6:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <totalMilliLitres>
     afa:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <totalMilliLitres+0x1>
     afe:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <totalMilliLitres+0x2>
     b02:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <totalMilliLitres+0x3>
     b06:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__floatunsisf>
     b0a:	a7 01       	movw	r20, r14
     b0c:	96 01       	movw	r18, r12
     b0e:	0e 94 b7 08 	call	0x116e	; 0x116e <__cmpsf2>
     b12:	81 11       	cpse	r24, r1
     b14:	3d cf       	rjmp	.-390    	; 0x990 <pump_a+0x3e>
     b16:	88 b3       	in	r24, 0x18	; 24
     b18:	8f 77       	andi	r24, 0x7F	; 127
     b1a:	88 bb       	out	0x18, r24	; 24
     b1c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <millisec>
     b20:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <millisec+0x1>
     b24:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <millisec+0x2>
     b28:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <millisec+0x3>
     b2c:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <sec>
     b30:	10 92 ff 00 	sts	0x00FF, r1	; 0x8000ff <sec+0x1>
     b34:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <sec+0x2>
     b38:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <sec+0x3>
     b3c:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <pulseCount+0x1>
     b40:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <pulseCount>
     b44:	78 94       	sei
     b46:	1f 91       	pop	r17
     b48:	0f 91       	pop	r16
     b4a:	ff 90       	pop	r15
     b4c:	ef 90       	pop	r14
     b4e:	df 90       	pop	r13
     b50:	cf 90       	pop	r12
     b52:	bf 90       	pop	r11
     b54:	af 90       	pop	r10
     b56:	9f 90       	pop	r9
     b58:	8f 90       	pop	r8
     b5a:	08 95       	ret

00000b5c <__vector_3>:
     b5c:	1f 92       	push	r1
     b5e:	0f 92       	push	r0
     b60:	0f b6       	in	r0, 0x3f	; 63
     b62:	0f 92       	push	r0
     b64:	11 24       	eor	r1, r1
     b66:	8f 93       	push	r24
     b68:	9f 93       	push	r25
     b6a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <pulseCount>
     b6e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <pulseCount+0x1>
     b72:	01 96       	adiw	r24, 0x01	; 1
     b74:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <pulseCount+0x1>
     b78:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <pulseCount>
     b7c:	9f 91       	pop	r25
     b7e:	8f 91       	pop	r24
     b80:	0f 90       	pop	r0
     b82:	0f be       	out	0x3f, r0	; 63
     b84:	0f 90       	pop	r0
     b86:	1f 90       	pop	r1
     b88:	18 95       	reti

00000b8a <i2c_init>:
     b8a:	82 e6       	ldi	r24, 0x62	; 98
     b8c:	80 b9       	out	0x00, r24	; 0
     b8e:	84 e0       	ldi	r24, 0x04	; 4
     b90:	86 bf       	out	0x36, r24	; 54
     b92:	11 b8       	out	0x01, r1	; 1
     b94:	08 95       	ret

00000b96 <i2c_start>:
     b96:	84 ea       	ldi	r24, 0xA4	; 164
     b98:	86 bf       	out	0x36, r24	; 54
     b9a:	06 b6       	in	r0, 0x36	; 54
     b9c:	07 fe       	sbrs	r0, 7
     b9e:	fd cf       	rjmp	.-6      	; 0xb9a <i2c_start+0x4>
     ba0:	08 95       	ret

00000ba2 <i2c_write>:
     ba2:	83 b9       	out	0x03, r24	; 3
     ba4:	84 e8       	ldi	r24, 0x84	; 132
     ba6:	86 bf       	out	0x36, r24	; 54
     ba8:	06 b6       	in	r0, 0x36	; 54
     baa:	07 fe       	sbrs	r0, 7
     bac:	fd cf       	rjmp	.-6      	; 0xba8 <i2c_write+0x6>
     bae:	08 95       	ret

00000bb0 <delay>:
     bb0:	40 e0       	ldi	r20, 0x00	; 0
     bb2:	50 e0       	ldi	r21, 0x00	; 0
     bb4:	0a c0       	rjmp	.+20     	; 0xbca <delay+0x1a>
     bb6:	2f 5f       	subi	r18, 0xFF	; 255
     bb8:	3f 4f       	sbci	r19, 0xFF	; 255
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <delay+0x10>
     bbc:	20 e0       	ldi	r18, 0x00	; 0
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	29 37       	cpi	r18, 0x79	; 121
     bc2:	31 05       	cpc	r19, r1
     bc4:	c4 f3       	brlt	.-16     	; 0xbb6 <delay+0x6>
     bc6:	4f 5f       	subi	r20, 0xFF	; 255
     bc8:	5f 4f       	sbci	r21, 0xFF	; 255
     bca:	84 17       	cp	r24, r20
     bcc:	95 07       	cpc	r25, r21
     bce:	b4 f7       	brge	.-20     	; 0xbbc <delay+0xc>
     bd0:	08 95       	ret

00000bd2 <toggle>:
     bd2:	83 b1       	in	r24, 0x03	; 3
     bd4:	82 60       	ori	r24, 0x02	; 2
     bd6:	83 b9       	out	0x03, r24	; 3
     bd8:	84 e8       	ldi	r24, 0x84	; 132
     bda:	86 bf       	out	0x36, r24	; 54
     bdc:	06 b6       	in	r0, 0x36	; 54
     bde:	07 fe       	sbrs	r0, 7
     be0:	fd cf       	rjmp	.-6      	; 0xbdc <toggle+0xa>
     be2:	81 e0       	ldi	r24, 0x01	; 1
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <delay>
     bea:	83 b1       	in	r24, 0x03	; 3
     bec:	8d 7f       	andi	r24, 0xFD	; 253
     bee:	83 b9       	out	0x03, r24	; 3
     bf0:	84 e8       	ldi	r24, 0x84	; 132
     bf2:	86 bf       	out	0x36, r24	; 54
     bf4:	06 b6       	in	r0, 0x36	; 54
     bf6:	07 fe       	sbrs	r0, 7
     bf8:	fd cf       	rjmp	.-6      	; 0xbf4 <toggle+0x22>
     bfa:	08 95       	ret

00000bfc <lcd_cmd_hf>:
     bfc:	93 b1       	in	r25, 0x03	; 3
     bfe:	9e 7f       	andi	r25, 0xFE	; 254
     c00:	93 b9       	out	0x03, r25	; 3
     c02:	94 e8       	ldi	r25, 0x84	; 132
     c04:	96 bf       	out	0x36, r25	; 54
     c06:	06 b6       	in	r0, 0x36	; 54
     c08:	07 fe       	sbrs	r0, 7
     c0a:	fd cf       	rjmp	.-6      	; 0xc06 <lcd_cmd_hf+0xa>
     c0c:	93 b1       	in	r25, 0x03	; 3
     c0e:	9f 70       	andi	r25, 0x0F	; 15
     c10:	93 b9       	out	0x03, r25	; 3
     c12:	94 e8       	ldi	r25, 0x84	; 132
     c14:	96 bf       	out	0x36, r25	; 54
     c16:	06 b6       	in	r0, 0x36	; 54
     c18:	07 fe       	sbrs	r0, 7
     c1a:	fd cf       	rjmp	.-6      	; 0xc16 <lcd_cmd_hf+0x1a>
     c1c:	93 b1       	in	r25, 0x03	; 3
     c1e:	80 7f       	andi	r24, 0xF0	; 240
     c20:	89 2b       	or	r24, r25
     c22:	83 b9       	out	0x03, r24	; 3
     c24:	84 e8       	ldi	r24, 0x84	; 132
     c26:	86 bf       	out	0x36, r24	; 54
     c28:	06 b6       	in	r0, 0x36	; 54
     c2a:	07 fe       	sbrs	r0, 7
     c2c:	fd cf       	rjmp	.-6      	; 0xc28 <lcd_cmd_hf+0x2c>
     c2e:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <toggle>
     c32:	08 95       	ret

00000c34 <lcd_cmd>:
     c34:	cf 93       	push	r28
     c36:	c8 2f       	mov	r28, r24
     c38:	83 b1       	in	r24, 0x03	; 3
     c3a:	8e 7f       	andi	r24, 0xFE	; 254
     c3c:	83 b9       	out	0x03, r24	; 3
     c3e:	84 e8       	ldi	r24, 0x84	; 132
     c40:	86 bf       	out	0x36, r24	; 54
     c42:	06 b6       	in	r0, 0x36	; 54
     c44:	07 fe       	sbrs	r0, 7
     c46:	fd cf       	rjmp	.-6      	; 0xc42 <lcd_cmd+0xe>
     c48:	83 b1       	in	r24, 0x03	; 3
     c4a:	8f 70       	andi	r24, 0x0F	; 15
     c4c:	83 b9       	out	0x03, r24	; 3
     c4e:	84 e8       	ldi	r24, 0x84	; 132
     c50:	86 bf       	out	0x36, r24	; 54
     c52:	06 b6       	in	r0, 0x36	; 54
     c54:	07 fe       	sbrs	r0, 7
     c56:	fd cf       	rjmp	.-6      	; 0xc52 <lcd_cmd+0x1e>
     c58:	83 b1       	in	r24, 0x03	; 3
     c5a:	9c 2f       	mov	r25, r28
     c5c:	90 7f       	andi	r25, 0xF0	; 240
     c5e:	89 2b       	or	r24, r25
     c60:	83 b9       	out	0x03, r24	; 3
     c62:	84 e8       	ldi	r24, 0x84	; 132
     c64:	86 bf       	out	0x36, r24	; 54
     c66:	06 b6       	in	r0, 0x36	; 54
     c68:	07 fe       	sbrs	r0, 7
     c6a:	fd cf       	rjmp	.-6      	; 0xc66 <lcd_cmd+0x32>
     c6c:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <toggle>
     c70:	83 b1       	in	r24, 0x03	; 3
     c72:	8f 70       	andi	r24, 0x0F	; 15
     c74:	83 b9       	out	0x03, r24	; 3
     c76:	84 e8       	ldi	r24, 0x84	; 132
     c78:	86 bf       	out	0x36, r24	; 54
     c7a:	06 b6       	in	r0, 0x36	; 54
     c7c:	07 fe       	sbrs	r0, 7
     c7e:	fd cf       	rjmp	.-6      	; 0xc7a <lcd_cmd+0x46>
     c80:	23 b1       	in	r18, 0x03	; 3
     c82:	30 e1       	ldi	r19, 0x10	; 16
     c84:	c3 9f       	mul	r28, r19
     c86:	c0 01       	movw	r24, r0
     c88:	11 24       	eor	r1, r1
     c8a:	82 2b       	or	r24, r18
     c8c:	83 b9       	out	0x03, r24	; 3
     c8e:	84 e8       	ldi	r24, 0x84	; 132
     c90:	86 bf       	out	0x36, r24	; 54
     c92:	06 b6       	in	r0, 0x36	; 54
     c94:	07 fe       	sbrs	r0, 7
     c96:	fd cf       	rjmp	.-6      	; 0xc92 <lcd_cmd+0x5e>
     c98:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <toggle>
     c9c:	cf 91       	pop	r28
     c9e:	08 95       	ret

00000ca0 <lcd_init>:
     ca0:	80 e3       	ldi	r24, 0x30	; 48
     ca2:	0e 94 fe 05 	call	0xbfc	; 0xbfc <lcd_cmd_hf>
     ca6:	80 e3       	ldi	r24, 0x30	; 48
     ca8:	0e 94 fe 05 	call	0xbfc	; 0xbfc <lcd_cmd_hf>
     cac:	80 e2       	ldi	r24, 0x20	; 32
     cae:	0e 94 fe 05 	call	0xbfc	; 0xbfc <lcd_cmd_hf>
     cb2:	88 e2       	ldi	r24, 0x28	; 40
     cb4:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
     cb8:	8c e0       	ldi	r24, 0x0C	; 12
     cba:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
     cbe:	81 e0       	ldi	r24, 0x01	; 1
     cc0:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
     cc4:	86 e0       	ldi	r24, 0x06	; 6
     cc6:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
     cca:	80 e8       	ldi	r24, 0x80	; 128
     ccc:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
     cd0:	08 95       	ret

00000cd2 <lcd_dwr>:
     cd2:	cf 93       	push	r28
     cd4:	c8 2f       	mov	r28, r24
     cd6:	83 b1       	in	r24, 0x03	; 3
     cd8:	81 60       	ori	r24, 0x01	; 1
     cda:	83 b9       	out	0x03, r24	; 3
     cdc:	84 e8       	ldi	r24, 0x84	; 132
     cde:	86 bf       	out	0x36, r24	; 54
     ce0:	06 b6       	in	r0, 0x36	; 54
     ce2:	07 fe       	sbrs	r0, 7
     ce4:	fd cf       	rjmp	.-6      	; 0xce0 <lcd_dwr+0xe>
     ce6:	83 b1       	in	r24, 0x03	; 3
     ce8:	8f 70       	andi	r24, 0x0F	; 15
     cea:	83 b9       	out	0x03, r24	; 3
     cec:	84 e8       	ldi	r24, 0x84	; 132
     cee:	86 bf       	out	0x36, r24	; 54
     cf0:	06 b6       	in	r0, 0x36	; 54
     cf2:	07 fe       	sbrs	r0, 7
     cf4:	fd cf       	rjmp	.-6      	; 0xcf0 <lcd_dwr+0x1e>
     cf6:	83 b1       	in	r24, 0x03	; 3
     cf8:	9c 2f       	mov	r25, r28
     cfa:	90 7f       	andi	r25, 0xF0	; 240
     cfc:	89 2b       	or	r24, r25
     cfe:	83 b9       	out	0x03, r24	; 3
     d00:	84 e8       	ldi	r24, 0x84	; 132
     d02:	86 bf       	out	0x36, r24	; 54
     d04:	06 b6       	in	r0, 0x36	; 54
     d06:	07 fe       	sbrs	r0, 7
     d08:	fd cf       	rjmp	.-6      	; 0xd04 <lcd_dwr+0x32>
     d0a:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <toggle>
     d0e:	83 b1       	in	r24, 0x03	; 3
     d10:	8f 70       	andi	r24, 0x0F	; 15
     d12:	83 b9       	out	0x03, r24	; 3
     d14:	84 e8       	ldi	r24, 0x84	; 132
     d16:	86 bf       	out	0x36, r24	; 54
     d18:	06 b6       	in	r0, 0x36	; 54
     d1a:	07 fe       	sbrs	r0, 7
     d1c:	fd cf       	rjmp	.-6      	; 0xd18 <lcd_dwr+0x46>
     d1e:	23 b1       	in	r18, 0x03	; 3
     d20:	30 e1       	ldi	r19, 0x10	; 16
     d22:	c3 9f       	mul	r28, r19
     d24:	c0 01       	movw	r24, r0
     d26:	11 24       	eor	r1, r1
     d28:	82 2b       	or	r24, r18
     d2a:	83 b9       	out	0x03, r24	; 3
     d2c:	84 e8       	ldi	r24, 0x84	; 132
     d2e:	86 bf       	out	0x36, r24	; 54
     d30:	06 b6       	in	r0, 0x36	; 54
     d32:	07 fe       	sbrs	r0, 7
     d34:	fd cf       	rjmp	.-6      	; 0xd30 <lcd_dwr+0x5e>
     d36:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <toggle>
     d3a:	cf 91       	pop	r28
     d3c:	08 95       	ret

00000d3e <lcd_msg>:
     d3e:	cf 93       	push	r28
     d40:	df 93       	push	r29
     d42:	ec 01       	movw	r28, r24
     d44:	03 c0       	rjmp	.+6      	; 0xd4c <lcd_msg+0xe>
     d46:	21 96       	adiw	r28, 0x01	; 1
     d48:	0e 94 69 06 	call	0xcd2	; 0xcd2 <lcd_dwr>
     d4c:	88 81       	ld	r24, Y
     d4e:	81 11       	cpse	r24, r1
     d50:	fa cf       	rjmp	.-12     	; 0xd46 <lcd_msg+0x8>
     d52:	df 91       	pop	r29
     d54:	cf 91       	pop	r28
     d56:	08 95       	ret

00000d58 <wlcm_msg>:
int num_tray();
int tray_vol();

//Display a welcome message on the display
void wlcm_msg()
{
     d58:	cf 93       	push	r28
     d5a:	df 93       	push	r29
	i2c_init();
     d5c:	0e 94 c5 05 	call	0xb8a	; 0xb8a <i2c_init>
	i2c_start();
     d60:	0e 94 cb 05 	call	0xb96	; 0xb96 <i2c_start>
	i2c_write(0x07);
     d64:	87 e0       	ldi	r24, 0x07	; 7
     d66:	0e 94 d1 05 	call	0xba2	; 0xba2 <i2c_write>
	lcd_init();
     d6a:	0e 94 50 06 	call	0xca0	; 0xca0 <lcd_init>
	
	lcd_cmd(0x80);
     d6e:	80 e8       	ldi	r24, 0x80	; 128
     d70:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_msg("Rubber Solution Mixer 1.0");
     d74:	84 e7       	ldi	r24, 0x74	; 116
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
	lcd_cmd(0xC0);
     d7c:	80 ec       	ldi	r24, 0xC0	; 192
     d7e:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_cmd(0x14);
     d82:	84 e1       	ldi	r24, 0x14	; 20
     d84:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_cmd(0x14);
     d88:	84 e1       	ldi	r24, 0x14	; 20
     d8a:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_cmd(0x14);
     d8e:	84 e1       	ldi	r24, 0x14	; 20
     d90:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_cmd(0x14);
     d94:	84 e1       	ldi	r24, 0x14	; 20
     d96:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_msg("Welcome");
     d9a:	8e e8       	ldi	r24, 0x8E	; 142
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
     da2:	2f e9       	ldi	r18, 0x9F	; 159
     da4:	86 e8       	ldi	r24, 0x86	; 134
     da6:	91 e0       	ldi	r25, 0x01	; 1
     da8:	21 50       	subi	r18, 0x01	; 1
     daa:	80 40       	sbci	r24, 0x00	; 0
     dac:	90 40       	sbci	r25, 0x00	; 0
     dae:	e1 f7       	brne	.-8      	; 0xda8 <wlcm_msg+0x50>
     db0:	00 c0       	rjmp	.+0      	; 0xdb2 <wlcm_msg+0x5a>
     db2:	00 00       	nop
	_delay_ms(500);
	for (int i= 0; i<27; i++)
     db4:	c0 e0       	ldi	r28, 0x00	; 0
     db6:	d0 e0       	ldi	r29, 0x00	; 0
     db8:	0a c0       	rjmp	.+20     	; 0xdce <wlcm_msg+0x76>
	{
		lcd_cmd(0x18);
     dba:	88 e1       	ldi	r24, 0x18	; 24
     dbc:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
     dc0:	87 ea       	ldi	r24, 0xA7	; 167
     dc2:	91 e6       	ldi	r25, 0x61	; 97
     dc4:	01 97       	sbiw	r24, 0x01	; 1
     dc6:	f1 f7       	brne	.-4      	; 0xdc4 <wlcm_msg+0x6c>
     dc8:	00 c0       	rjmp	.+0      	; 0xdca <wlcm_msg+0x72>
     dca:	00 00       	nop
	lcd_cmd(0x14);
	lcd_cmd(0x14);
	lcd_cmd(0x14);
	lcd_msg("Welcome");
	_delay_ms(500);
	for (int i= 0; i<27; i++)
     dcc:	21 96       	adiw	r28, 0x01	; 1
     dce:	cb 31       	cpi	r28, 0x1B	; 27
     dd0:	d1 05       	cpc	r29, r1
     dd2:	9c f3       	brlt	.-26     	; 0xdba <wlcm_msg+0x62>
	{
		lcd_cmd(0x18);
		_delay_ms(100);
	}
}
     dd4:	df 91       	pop	r29
     dd6:	cf 91       	pop	r28
     dd8:	08 95       	ret

00000dda <num_tray>:

//Get the user input for the number of trays
int num_tray()
{
     dda:	cf 93       	push	r28
     ddc:	df 93       	push	r29
	
	
	redo_trays:
	
	lcd_cmd(0x01);
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_cmd(0x80);
     de4:	80 e8       	ldi	r24, 0x80	; 128
     de6:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_msg("Number of Trays?");
     dea:	86 e9       	ldi	r24, 0x96	; 150
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
	lcd_cmd(0xC0);
     df2:	80 ec       	ldi	r24, 0xC0	; 192
     df4:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_cmd(0x0F);
     df8:	8f e0       	ldi	r24, 0x0F	; 15
     dfa:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	
	
	do
	{
		strcpy(temp,keyfind());
     dfe:	0e 94 49 00 	call	0x92	; 0x92 <keyfind>
     e02:	68 2f       	mov	r22, r24
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	8e e1       	ldi	r24, 0x1E	; 30
     e08:	91 e0       	ldi	r25, 0x01	; 1
     e0a:	0e 94 af 0a 	call	0x155e	; 0x155e <strcpy>
		if (strcmp(temp,"=")==0)
     e0e:	67 ea       	ldi	r22, 0xA7	; 167
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	8e e1       	ldi	r24, 0x1E	; 30
     e14:	91 e0       	ldi	r25, 0x01	; 1
     e16:	0e 94 a6 0a 	call	0x154c	; 0x154c <strcmp>
     e1a:	89 2b       	or	r24, r25
     e1c:	41 f5       	brne	.+80     	; 0xe6e <num_tray+0x94>
		{
			if (digs>=1)
     e1e:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <__data_end>
     e22:	90 91 f7 00 	lds	r25, 0x00F7	; 0x8000f7 <__data_end+0x1>
     e26:	18 16       	cp	r1, r24
     e28:	19 06       	cpc	r1, r25
     e2a:	ac f5       	brge	.+106    	; 0xe96 <num_tray+0xbc>
			{
				lcd_cmd(0x10);
     e2c:	80 e1       	ldi	r24, 0x10	; 16
     e2e:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
				lcd_msg(" ");
     e32:	89 ea       	ldi	r24, 0xA9	; 169
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
				lcd_cmd(0x10);
     e3a:	80 e1       	ldi	r24, 0x10	; 16
     e3c:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
				lcd_cmd(0x10);
     e40:	80 e1       	ldi	r24, 0x10	; 16
     e42:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
				lcd_cmd(0x14);
     e46:	84 e1       	ldi	r24, 0x14	; 20
     e48:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
				digs--;
     e4c:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <__data_end>
     e50:	90 91 f7 00 	lds	r25, 0x00F7	; 0x8000f7 <__data_end+0x1>
     e54:	01 97       	sbiw	r24, 0x01	; 1
     e56:	90 93 f7 00 	sts	0x00F7, r25	; 0x8000f7 <__data_end+0x1>
     e5a:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__data_end>
				strcpy(&str[digs], " ");
     e5e:	fc 01       	movw	r30, r24
     e60:	e4 5d       	subi	r30, 0xD4	; 212
     e62:	fe 4f       	sbci	r31, 0xFE	; 254
     e64:	20 e2       	ldi	r18, 0x20	; 32
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	31 83       	std	Z+1, r19	; 0x01
     e6a:	20 83       	st	Z, r18
			}
			continue;
     e6c:	14 c0       	rjmp	.+40     	; 0xe96 <num_tray+0xbc>
		}
		lcd_msg(temp);
     e6e:	8e e1       	ldi	r24, 0x1E	; 30
     e70:	91 e0       	ldi	r25, 0x01	; 1
     e72:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
		strcpy(&str[digs],temp);
     e76:	c0 91 f6 00 	lds	r28, 0x00F6	; 0x8000f6 <__data_end>
     e7a:	d0 91 f7 00 	lds	r29, 0x00F7	; 0x8000f7 <__data_end+0x1>
     e7e:	6e e1       	ldi	r22, 0x1E	; 30
     e80:	71 e0       	ldi	r23, 0x01	; 1
     e82:	ce 01       	movw	r24, r28
     e84:	84 5d       	subi	r24, 0xD4	; 212
     e86:	9e 4f       	sbci	r25, 0xFE	; 254
     e88:	0e 94 af 0a 	call	0x155e	; 0x155e <strcpy>
		digs++;
     e8c:	21 96       	adiw	r28, 0x01	; 1
     e8e:	d0 93 f7 00 	sts	0x00F7, r29	; 0x8000f7 <__data_end+0x1>
     e92:	c0 93 f6 00 	sts	0x00F6, r28	; 0x8000f6 <__data_end>
	} while ((strcmp(temp," ")!=0)|(atoi(str)==0));
     e96:	69 ea       	ldi	r22, 0xA9	; 169
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	8e e1       	ldi	r24, 0x1E	; 30
     e9c:	91 e0       	ldi	r25, 0x01	; 1
     e9e:	0e 94 a6 0a 	call	0x154c	; 0x154c <strcmp>
     ea2:	ec 01       	movw	r28, r24
     ea4:	8c e2       	ldi	r24, 0x2C	; 44
     ea6:	91 e0       	ldi	r25, 0x01	; 1
     ea8:	0e 94 88 0a 	call	0x1510	; 0x1510 <atoi>
     eac:	ac 01       	movw	r20, r24
     eae:	21 e0       	ldi	r18, 0x01	; 1
     eb0:	cd 2b       	or	r28, r29
     eb2:	09 f4       	brne	.+2      	; 0xeb6 <num_tray+0xdc>
     eb4:	20 e0       	ldi	r18, 0x00	; 0
     eb6:	91 e0       	ldi	r25, 0x01	; 1
     eb8:	41 15       	cp	r20, r1
     eba:	51 05       	cpc	r21, r1
     ebc:	09 f0       	breq	.+2      	; 0xec0 <num_tray+0xe6>
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	92 2b       	or	r25, r18
     ec2:	09 f0       	breq	.+2      	; 0xec6 <num_tray+0xec>
     ec4:	9c cf       	rjmp	.-200    	; 0xdfe <num_tray+0x24>
	
	num_trays= atoi(str);
     ec6:	50 93 fd 00 	sts	0x00FD, r21	; 0x8000fd <num_trays+0x1>
     eca:	40 93 fc 00 	sts	0x00FC, r20	; 0x8000fc <num_trays>
	lcd_cmd(0x01);
     ece:	81 e0       	ldi	r24, 0x01	; 1
     ed0:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_cmd(0x80);
     ed4:	80 e8       	ldi	r24, 0x80	; 128
     ed6:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	
	if (num_trays>=20)
     eda:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <num_trays>
     ede:	90 91 fd 00 	lds	r25, 0x00FD	; 0x8000fd <num_trays+0x1>
     ee2:	84 31       	cpi	r24, 0x14	; 20
     ee4:	91 05       	cpc	r25, r1
     ee6:	f4 f0       	brlt	.+60     	; 0xf24 <num_tray+0x14a>
	{
		lcd_msg("Enter a value less than 20");
     ee8:	8b ea       	ldi	r24, 0xAB	; 171
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
     ef0:	2f e9       	ldi	r18, 0x9F	; 159
     ef2:	86 e8       	ldi	r24, 0x86	; 134
     ef4:	91 e0       	ldi	r25, 0x01	; 1
     ef6:	21 50       	subi	r18, 0x01	; 1
     ef8:	80 40       	sbci	r24, 0x00	; 0
     efa:	90 40       	sbci	r25, 0x00	; 0
     efc:	e1 f7       	brne	.-8      	; 0xef6 <num_tray+0x11c>
     efe:	00 c0       	rjmp	.+0      	; 0xf00 <num_tray+0x126>
     f00:	00 00       	nop
		_delay_ms(500);
		for (int i = 0; i<27 ;i++)
     f02:	c0 e0       	ldi	r28, 0x00	; 0
     f04:	d0 e0       	ldi	r29, 0x00	; 0
     f06:	0a c0       	rjmp	.+20     	; 0xf1c <num_tray+0x142>
		{
			lcd_cmd(0x18);
     f08:	88 e1       	ldi	r24, 0x18	; 24
     f0a:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
     f0e:	87 ea       	ldi	r24, 0xA7	; 167
     f10:	91 e6       	ldi	r25, 0x61	; 97
     f12:	01 97       	sbiw	r24, 0x01	; 1
     f14:	f1 f7       	brne	.-4      	; 0xf12 <num_tray+0x138>
     f16:	00 c0       	rjmp	.+0      	; 0xf18 <num_tray+0x13e>
     f18:	00 00       	nop
	
	if (num_trays>=20)
	{
		lcd_msg("Enter a value less than 20");
		_delay_ms(500);
		for (int i = 0; i<27 ;i++)
     f1a:	21 96       	adiw	r28, 0x01	; 1
     f1c:	cb 31       	cpi	r28, 0x1B	; 27
     f1e:	d1 05       	cpc	r29, r1
     f20:	9c f3       	brlt	.-26     	; 0xf08 <num_tray+0x12e>
     f22:	5d cf       	rjmp	.-326    	; 0xdde <num_tray+0x4>
			_delay_ms(100);
		}
		goto redo_trays;
	}
	return num_trays;
}
     f24:	df 91       	pop	r29
     f26:	cf 91       	pop	r28
     f28:	08 95       	ret

00000f2a <tray_vol>:

//Getting the volume of trays in milliliters
int tray_vol()
{
     f2a:	cf 92       	push	r12
     f2c:	df 92       	push	r13
     f2e:	ef 92       	push	r14
     f30:	ff 92       	push	r15
     f32:	cf 93       	push	r28
     f34:	df 93       	push	r29
	redo_vol:
	
	
	lcd_msg("Vol.of a Tray(ml)");
     f36:	86 ec       	ldi	r24, 0xC6	; 198
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
	lcd_cmd(0xC0);
     f3e:	80 ec       	ldi	r24, 0xC0	; 192
     f40:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_cmd(0x0F);
     f44:	8f e0       	ldi	r24, 0x0F	; 15
     f46:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	digs=0;
     f4a:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <__data_end+0x1>
     f4e:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <__data_end>
	do
	{
		strcpy(temp,keyfind());
     f52:	0e 94 49 00 	call	0x92	; 0x92 <keyfind>
     f56:	68 2f       	mov	r22, r24
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	8e e1       	ldi	r24, 0x1E	; 30
     f5c:	91 e0       	ldi	r25, 0x01	; 1
     f5e:	0e 94 af 0a 	call	0x155e	; 0x155e <strcpy>
		
		if (strcmp(temp,"=")==0)
     f62:	67 ea       	ldi	r22, 0xA7	; 167
     f64:	70 e0       	ldi	r23, 0x00	; 0
     f66:	8e e1       	ldi	r24, 0x1E	; 30
     f68:	91 e0       	ldi	r25, 0x01	; 1
     f6a:	0e 94 a6 0a 	call	0x154c	; 0x154c <strcmp>
     f6e:	89 2b       	or	r24, r25
     f70:	41 f5       	brne	.+80     	; 0xfc2 <tray_vol+0x98>
		{
			if (digs>=1)
     f72:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <__data_end>
     f76:	90 91 f7 00 	lds	r25, 0x00F7	; 0x8000f7 <__data_end+0x1>
     f7a:	18 16       	cp	r1, r24
     f7c:	19 06       	cpc	r1, r25
     f7e:	ac f5       	brge	.+106    	; 0xfea <tray_vol+0xc0>
			{
				lcd_cmd(0x10);
     f80:	80 e1       	ldi	r24, 0x10	; 16
     f82:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
				lcd_msg(" ");
     f86:	89 ea       	ldi	r24, 0xA9	; 169
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
				lcd_cmd(0x10);
     f8e:	80 e1       	ldi	r24, 0x10	; 16
     f90:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
				lcd_cmd(0x10);
     f94:	80 e1       	ldi	r24, 0x10	; 16
     f96:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
				lcd_cmd(0x14);
     f9a:	84 e1       	ldi	r24, 0x14	; 20
     f9c:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
				digs--;
     fa0:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <__data_end>
     fa4:	90 91 f7 00 	lds	r25, 0x00F7	; 0x8000f7 <__data_end+0x1>
     fa8:	01 97       	sbiw	r24, 0x01	; 1
     faa:	90 93 f7 00 	sts	0x00F7, r25	; 0x8000f7 <__data_end+0x1>
     fae:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__data_end>
				strcpy(&str[digs]," ");
     fb2:	fc 01       	movw	r30, r24
     fb4:	e4 5d       	subi	r30, 0xD4	; 212
     fb6:	fe 4f       	sbci	r31, 0xFE	; 254
     fb8:	20 e2       	ldi	r18, 0x20	; 32
     fba:	30 e0       	ldi	r19, 0x00	; 0
     fbc:	31 83       	std	Z+1, r19	; 0x01
     fbe:	20 83       	st	Z, r18
			}
			continue;
     fc0:	14 c0       	rjmp	.+40     	; 0xfea <tray_vol+0xc0>
		}
		lcd_msg(temp);
     fc2:	8e e1       	ldi	r24, 0x1E	; 30
     fc4:	91 e0       	ldi	r25, 0x01	; 1
     fc6:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
		strcpy(&str[digs],temp);
     fca:	c0 91 f6 00 	lds	r28, 0x00F6	; 0x8000f6 <__data_end>
     fce:	d0 91 f7 00 	lds	r29, 0x00F7	; 0x8000f7 <__data_end+0x1>
     fd2:	6e e1       	ldi	r22, 0x1E	; 30
     fd4:	71 e0       	ldi	r23, 0x01	; 1
     fd6:	ce 01       	movw	r24, r28
     fd8:	84 5d       	subi	r24, 0xD4	; 212
     fda:	9e 4f       	sbci	r25, 0xFE	; 254
     fdc:	0e 94 af 0a 	call	0x155e	; 0x155e <strcpy>
		digs++;
     fe0:	21 96       	adiw	r28, 0x01	; 1
     fe2:	d0 93 f7 00 	sts	0x00F7, r29	; 0x8000f7 <__data_end+0x1>
     fe6:	c0 93 f6 00 	sts	0x00F6, r28	; 0x8000f6 <__data_end>
	} while ((strcmp(temp," ")!=0)|(atoi(str)==0));
     fea:	69 ea       	ldi	r22, 0xA9	; 169
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	8e e1       	ldi	r24, 0x1E	; 30
     ff0:	91 e0       	ldi	r25, 0x01	; 1
     ff2:	0e 94 a6 0a 	call	0x154c	; 0x154c <strcmp>
     ff6:	ec 01       	movw	r28, r24
     ff8:	8c e2       	ldi	r24, 0x2C	; 44
     ffa:	91 e0       	ldi	r25, 0x01	; 1
     ffc:	0e 94 88 0a 	call	0x1510	; 0x1510 <atoi>
    1000:	bc 01       	movw	r22, r24
    1002:	21 e0       	ldi	r18, 0x01	; 1
    1004:	cd 2b       	or	r28, r29
    1006:	09 f4       	brne	.+2      	; 0x100a <tray_vol+0xe0>
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	91 e0       	ldi	r25, 0x01	; 1
    100c:	61 15       	cp	r22, r1
    100e:	71 05       	cpc	r23, r1
    1010:	09 f0       	breq	.+2      	; 0x1014 <tray_vol+0xea>
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	92 2b       	or	r25, r18
    1016:	09 f0       	breq	.+2      	; 0x101a <tray_vol+0xf0>
    1018:	9c cf       	rjmp	.-200    	; 0xf52 <tray_vol+0x28>
	
	vol= atoi(str);
    101a:	07 2e       	mov	r0, r23
    101c:	00 0c       	add	r0, r0
    101e:	88 0b       	sbc	r24, r24
    1020:	99 0b       	sbc	r25, r25
    1022:	0e 94 66 09 	call	0x12cc	; 0x12cc <__floatsisf>
    1026:	60 93 f8 00 	sts	0x00F8, r22	; 0x8000f8 <vol>
    102a:	70 93 f9 00 	sts	0x00F9, r23	; 0x8000f9 <vol+0x1>
    102e:	80 93 fa 00 	sts	0x00FA, r24	; 0x8000fa <vol+0x2>
    1032:	90 93 fb 00 	sts	0x00FB, r25	; 0x8000fb <vol+0x3>
	lcd_cmd(0x01);
    1036:	81 e0       	ldi	r24, 0x01	; 1
    1038:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	lcd_cmd(0x80);
    103c:	80 e8       	ldi	r24, 0x80	; 128
    103e:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
	
	if (vol>=5000)
    1042:	c0 90 f8 00 	lds	r12, 0x00F8	; 0x8000f8 <vol>
    1046:	d0 90 f9 00 	lds	r13, 0x00F9	; 0x8000f9 <vol+0x1>
    104a:	e0 90 fa 00 	lds	r14, 0x00FA	; 0x8000fa <vol+0x2>
    104e:	f0 90 fb 00 	lds	r15, 0x00FB	; 0x8000fb <vol+0x3>
    1052:	20 e0       	ldi	r18, 0x00	; 0
    1054:	30 e4       	ldi	r19, 0x40	; 64
    1056:	4c e9       	ldi	r20, 0x9C	; 156
    1058:	55 e4       	ldi	r21, 0x45	; 69
    105a:	c7 01       	movw	r24, r14
    105c:	b6 01       	movw	r22, r12
    105e:	0e 94 16 0a 	call	0x142c	; 0x142c <__gesf2>
    1062:	88 23       	and	r24, r24
    1064:	f4 f0       	brlt	.+60     	; 0x10a2 <tray_vol+0x178>
	{
		lcd_msg("Enter a value less than 5000");
    1066:	88 ed       	ldi	r24, 0xD8	; 216
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	0e 94 9f 06 	call	0xd3e	; 0xd3e <lcd_msg>
    106e:	2f e9       	ldi	r18, 0x9F	; 159
    1070:	86 e8       	ldi	r24, 0x86	; 134
    1072:	91 e0       	ldi	r25, 0x01	; 1
    1074:	21 50       	subi	r18, 0x01	; 1
    1076:	80 40       	sbci	r24, 0x00	; 0
    1078:	90 40       	sbci	r25, 0x00	; 0
    107a:	e1 f7       	brne	.-8      	; 0x1074 <tray_vol+0x14a>
    107c:	00 c0       	rjmp	.+0      	; 0x107e <tray_vol+0x154>
    107e:	00 00       	nop
		_delay_ms(500);
		for (int i = 0; i<28 ; i++)
    1080:	c0 e0       	ldi	r28, 0x00	; 0
    1082:	d0 e0       	ldi	r29, 0x00	; 0
    1084:	0a c0       	rjmp	.+20     	; 0x109a <tray_vol+0x170>
		{
			lcd_cmd(0x18);
    1086:	88 e1       	ldi	r24, 0x18	; 24
    1088:	0e 94 1a 06 	call	0xc34	; 0xc34 <lcd_cmd>
    108c:	87 ea       	ldi	r24, 0xA7	; 167
    108e:	91 e6       	ldi	r25, 0x61	; 97
    1090:	01 97       	sbiw	r24, 0x01	; 1
    1092:	f1 f7       	brne	.-4      	; 0x1090 <tray_vol+0x166>
    1094:	00 c0       	rjmp	.+0      	; 0x1096 <tray_vol+0x16c>
    1096:	00 00       	nop
	
	if (vol>=5000)
	{
		lcd_msg("Enter a value less than 5000");
		_delay_ms(500);
		for (int i = 0; i<28 ; i++)
    1098:	21 96       	adiw	r28, 0x01	; 1
    109a:	cc 31       	cpi	r28, 0x1C	; 28
    109c:	d1 05       	cpc	r29, r1
    109e:	9c f3       	brlt	.-26     	; 0x1086 <tray_vol+0x15c>
    10a0:	4a cf       	rjmp	.-364    	; 0xf36 <tray_vol+0xc>
			lcd_cmd(0x18);
			_delay_ms(100);
		}
		goto redo_vol;
	}
	return vol;
    10a2:	c7 01       	movw	r24, r14
    10a4:	b6 01       	movw	r22, r12
    10a6:	0e 94 2e 09 	call	0x125c	; 0x125c <__fixsfsi>
	
    10aa:	cb 01       	movw	r24, r22
    10ac:	df 91       	pop	r29
    10ae:	cf 91       	pop	r28
    10b0:	ff 90       	pop	r15
    10b2:	ef 90       	pop	r14
    10b4:	df 90       	pop	r13
    10b6:	cf 90       	pop	r12
    10b8:	08 95       	ret

000010ba <main>:
		
	//Main Program Loop
	
	while(1){
		//------------------------------display on-----------------------------------
		wlcm_msg();
    10ba:	0e 94 ac 06 	call	0xd58	; 0xd58 <wlcm_msg>
		int num_trays = num_tray();
    10be:	0e 94 ed 06 	call	0xdda	; 0xdda <num_tray>
		int vol = tray_vol();
    10c2:	0e 94 95 07 	call	0xf2a	; 0xf2a <tray_vol>
		

		//------------------------------ultrasonic-----------------------(In progress)
		ultrasonic1();	//activate ultrasonic sensor in the water tank
    10c6:	0e 94 07 02 	call	0x40e	; 0x40e <ultrasonic1>
		if (!depth())	// Display a message if the liquid is empty
    10ca:	0e 94 18 02 	call	0x430	; 0x430 <depth>
		{
		}
		
		
		ultrasonic2();	//activate ultrasonic sensor in the acid tank
    10ce:	0e 94 0c 02 	call	0x418	; 0x418 <ultrasonic2>
		if (!depth())	// Display a message if the liquid is empty
    10d2:	0e 94 18 02 	call	0x430	; 0x430 <depth>
		{
		}
		
		
		ultrasonic3();	//activate ultrasonic sensor in the latex tank
    10d6:	0e 94 12 02 	call	0x424	; 0x424 <ultrasonic3>
		if (!depth())	// Display a message if the liquid is empty
    10da:	0e 94 18 02 	call	0x430	; 0x430 <depth>
		}
		
		
		//----------------------------------ph sensor--------------------------(in progress)
		
		ADC_Init();
    10de:	0e 94 e5 01 	call	0x3ca	; 0x3ca <ADC_Init>
		
		ADC_Read('B');
    10e2:	82 e4       	ldi	r24, 0x42	; 66
    10e4:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <ADC_Read>
		
		//----------------------------calculation for ph value------------------------
		
		//--------------------------------conveyor start------------------------------
		
		switchOn();	//activate the relay switch to the AC motor
    10e8:	0e 94 00 02 	call	0x400	; 0x400 <switchOn>
		
		//---------------------------------stepper push-------------------------------
		
		stprTrayPsh_init();	// initialize the stepper motors
    10ec:	0e 94 d6 00 	call	0x1ac	; 0x1ac <stprTrayPsh_init>
		stprTrayPsh_clk(2);	// rotate the stepper motors to push the tray onto the conveyor
    10f0:	82 e0       	ldi	r24, 0x02	; 2
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	0e 94 de 00 	call	0x1bc	; 0x1bc <stprTrayPsh_clk>
		
		//--------------------------------Ir detector---------------------------------
		
		while(1){
			if (act_IR())		//if the IR function returns a true value the conveyor will stop
    10f8:	0e 94 39 02 	call	0x472	; 0x472 <act_IR>
    10fc:	89 2b       	or	r24, r25
    10fe:	e1 f3       	breq	.-8      	; 0x10f8 <main+0x3e>
			{
				switchOff();
    1100:	0e 94 04 02 	call	0x408	; 0x408 <switchOff>
			}
		}
		
		//--------------------------------stepper pull--------------------------------
		
		stprTrayPsh_init();	// initialize the stepper motors
    1104:	0e 94 d6 00 	call	0x1ac	; 0x1ac <stprTrayPsh_init>
		stprTrayPsh_aclk(2);// rotate the stepper motors to pull the handle
    1108:	82 e0       	ldi	r24, 0x02	; 2
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	0e 94 10 01 	call	0x220	; 0x220 <stprTrayPsh_aclk>

		
		//----------------------------tray holder down (mixer)----------------------------
		
		stprMix_init(); //initiate the stepper motor
    1110:	0e 94 da 00 	call	0x1b4	; 0x1b4 <stprMix_init>
		stprMix_clk(2);	// rotate the stepper motor to lower the mixer
    1114:	82 e0       	ldi	r24, 0x02	; 2
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	0e 94 42 01 	call	0x284	; 0x284 <stprMix_clk>
		
		//----------------------------liquid pumps {flow sensor}--------------------------
		pump_w(w_vol);
    111c:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <w_vol>
    1120:	70 91 37 01 	lds	r23, 0x0137	; 0x800137 <w_vol+0x1>
    1124:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <w_vol+0x2>
    1128:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <w_vol+0x3>
    112c:	0e 94 48 02 	call	0x490	; 0x490 <pump_w>
		pump_l(l_vol);
    1130:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <l_vol>
    1134:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <l_vol+0x1>
    1138:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <l_vol+0x2>
    113c:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <l_vol+0x3>
    1140:	0e 94 8d 03 	call	0x71a	; 0x71a <pump_l>
		pump_a(a_vol);
    1144:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <a_vol>
    1148:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <a_vol+0x1>
    114c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <a_vol+0x2>
    1150:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <a_vol+0x3>
    1154:	0e 94 a9 04 	call	0x952	; 0x952 <pump_a>
		
		//---------------------------------DC motor (Mixer)-------------------------------
		acvt_mixer();
    1158:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <acvt_mixer>
		
		//------------------------------tray holder up (mixer)----------------------------
		
		stprMix_init();//initiate the stepper motor
    115c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <stprMix_init>
		stprMix_aclk(2);// rotate the stepper motor to lower the mixer;
    1160:	82 e0       	ldi	r24, 0x02	; 2
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 74 01 	call	0x2e8	; 0x2e8 <stprMix_aclk>
		
		//------------------------------conveyor belt start-------------------------------
		switchOn();
    1168:	0e 94 00 02 	call	0x400	; 0x400 <switchOn>
	}
    116c:	a6 cf       	rjmp	.-180    	; 0x10ba <main>

0000116e <__cmpsf2>:
    116e:	0e 94 a1 09 	call	0x1342	; 0x1342 <__fp_cmp>
    1172:	08 f4       	brcc	.+2      	; 0x1176 <__cmpsf2+0x8>
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	08 95       	ret

00001178 <__divsf3>:
    1178:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <__divsf3x>
    117c:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_round>
    1180:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__fp_pscB>
    1184:	58 f0       	brcs	.+22     	; 0x119c <__divsf3+0x24>
    1186:	0e 94 ce 09 	call	0x139c	; 0x139c <__fp_pscA>
    118a:	40 f0       	brcs	.+16     	; 0x119c <__divsf3+0x24>
    118c:	29 f4       	brne	.+10     	; 0x1198 <__divsf3+0x20>
    118e:	5f 3f       	cpi	r21, 0xFF	; 255
    1190:	29 f0       	breq	.+10     	; 0x119c <__divsf3+0x24>
    1192:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__fp_inf>
    1196:	51 11       	cpse	r21, r1
    1198:	0c 94 10 0a 	jmp	0x1420	; 0x1420 <__fp_szero>
    119c:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__fp_nan>

000011a0 <__divsf3x>:
    11a0:	0e 94 ed 09 	call	0x13da	; 0x13da <__fp_split3>
    11a4:	68 f3       	brcs	.-38     	; 0x1180 <__divsf3+0x8>

000011a6 <__divsf3_pse>:
    11a6:	99 23       	and	r25, r25
    11a8:	b1 f3       	breq	.-20     	; 0x1196 <__divsf3+0x1e>
    11aa:	55 23       	and	r21, r21
    11ac:	91 f3       	breq	.-28     	; 0x1192 <__divsf3+0x1a>
    11ae:	95 1b       	sub	r25, r21
    11b0:	55 0b       	sbc	r21, r21
    11b2:	bb 27       	eor	r27, r27
    11b4:	aa 27       	eor	r26, r26
    11b6:	62 17       	cp	r22, r18
    11b8:	73 07       	cpc	r23, r19
    11ba:	84 07       	cpc	r24, r20
    11bc:	38 f0       	brcs	.+14     	; 0x11cc <__divsf3_pse+0x26>
    11be:	9f 5f       	subi	r25, 0xFF	; 255
    11c0:	5f 4f       	sbci	r21, 0xFF	; 255
    11c2:	22 0f       	add	r18, r18
    11c4:	33 1f       	adc	r19, r19
    11c6:	44 1f       	adc	r20, r20
    11c8:	aa 1f       	adc	r26, r26
    11ca:	a9 f3       	breq	.-22     	; 0x11b6 <__divsf3_pse+0x10>
    11cc:	35 d0       	rcall	.+106    	; 0x1238 <__divsf3_pse+0x92>
    11ce:	0e 2e       	mov	r0, r30
    11d0:	3a f0       	brmi	.+14     	; 0x11e0 <__divsf3_pse+0x3a>
    11d2:	e0 e8       	ldi	r30, 0x80	; 128
    11d4:	32 d0       	rcall	.+100    	; 0x123a <__divsf3_pse+0x94>
    11d6:	91 50       	subi	r25, 0x01	; 1
    11d8:	50 40       	sbci	r21, 0x00	; 0
    11da:	e6 95       	lsr	r30
    11dc:	00 1c       	adc	r0, r0
    11de:	ca f7       	brpl	.-14     	; 0x11d2 <__divsf3_pse+0x2c>
    11e0:	2b d0       	rcall	.+86     	; 0x1238 <__divsf3_pse+0x92>
    11e2:	fe 2f       	mov	r31, r30
    11e4:	29 d0       	rcall	.+82     	; 0x1238 <__divsf3_pse+0x92>
    11e6:	66 0f       	add	r22, r22
    11e8:	77 1f       	adc	r23, r23
    11ea:	88 1f       	adc	r24, r24
    11ec:	bb 1f       	adc	r27, r27
    11ee:	26 17       	cp	r18, r22
    11f0:	37 07       	cpc	r19, r23
    11f2:	48 07       	cpc	r20, r24
    11f4:	ab 07       	cpc	r26, r27
    11f6:	b0 e8       	ldi	r27, 0x80	; 128
    11f8:	09 f0       	breq	.+2      	; 0x11fc <__divsf3_pse+0x56>
    11fa:	bb 0b       	sbc	r27, r27
    11fc:	80 2d       	mov	r24, r0
    11fe:	bf 01       	movw	r22, r30
    1200:	ff 27       	eor	r31, r31
    1202:	93 58       	subi	r25, 0x83	; 131
    1204:	5f 4f       	sbci	r21, 0xFF	; 255
    1206:	3a f0       	brmi	.+14     	; 0x1216 <__divsf3_pse+0x70>
    1208:	9e 3f       	cpi	r25, 0xFE	; 254
    120a:	51 05       	cpc	r21, r1
    120c:	78 f0       	brcs	.+30     	; 0x122c <__divsf3_pse+0x86>
    120e:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__fp_inf>
    1212:	0c 94 10 0a 	jmp	0x1420	; 0x1420 <__fp_szero>
    1216:	5f 3f       	cpi	r21, 0xFF	; 255
    1218:	e4 f3       	brlt	.-8      	; 0x1212 <__divsf3_pse+0x6c>
    121a:	98 3e       	cpi	r25, 0xE8	; 232
    121c:	d4 f3       	brlt	.-12     	; 0x1212 <__divsf3_pse+0x6c>
    121e:	86 95       	lsr	r24
    1220:	77 95       	ror	r23
    1222:	67 95       	ror	r22
    1224:	b7 95       	ror	r27
    1226:	f7 95       	ror	r31
    1228:	9f 5f       	subi	r25, 0xFF	; 255
    122a:	c9 f7       	brne	.-14     	; 0x121e <__divsf3_pse+0x78>
    122c:	88 0f       	add	r24, r24
    122e:	91 1d       	adc	r25, r1
    1230:	96 95       	lsr	r25
    1232:	87 95       	ror	r24
    1234:	97 f9       	bld	r25, 7
    1236:	08 95       	ret
    1238:	e1 e0       	ldi	r30, 0x01	; 1
    123a:	66 0f       	add	r22, r22
    123c:	77 1f       	adc	r23, r23
    123e:	88 1f       	adc	r24, r24
    1240:	bb 1f       	adc	r27, r27
    1242:	62 17       	cp	r22, r18
    1244:	73 07       	cpc	r23, r19
    1246:	84 07       	cpc	r24, r20
    1248:	ba 07       	cpc	r27, r26
    124a:	20 f0       	brcs	.+8      	; 0x1254 <__divsf3_pse+0xae>
    124c:	62 1b       	sub	r22, r18
    124e:	73 0b       	sbc	r23, r19
    1250:	84 0b       	sbc	r24, r20
    1252:	ba 0b       	sbc	r27, r26
    1254:	ee 1f       	adc	r30, r30
    1256:	88 f7       	brcc	.-30     	; 0x123a <__divsf3_pse+0x94>
    1258:	e0 95       	com	r30
    125a:	08 95       	ret

0000125c <__fixsfsi>:
    125c:	0e 94 35 09 	call	0x126a	; 0x126a <__fixunssfsi>
    1260:	68 94       	set
    1262:	b1 11       	cpse	r27, r1
    1264:	0c 94 10 0a 	jmp	0x1420	; 0x1420 <__fp_szero>
    1268:	08 95       	ret

0000126a <__fixunssfsi>:
    126a:	0e 94 f5 09 	call	0x13ea	; 0x13ea <__fp_splitA>
    126e:	88 f0       	brcs	.+34     	; 0x1292 <__fixunssfsi+0x28>
    1270:	9f 57       	subi	r25, 0x7F	; 127
    1272:	98 f0       	brcs	.+38     	; 0x129a <__fixunssfsi+0x30>
    1274:	b9 2f       	mov	r27, r25
    1276:	99 27       	eor	r25, r25
    1278:	b7 51       	subi	r27, 0x17	; 23
    127a:	b0 f0       	brcs	.+44     	; 0x12a8 <__fixunssfsi+0x3e>
    127c:	e1 f0       	breq	.+56     	; 0x12b6 <__fixunssfsi+0x4c>
    127e:	66 0f       	add	r22, r22
    1280:	77 1f       	adc	r23, r23
    1282:	88 1f       	adc	r24, r24
    1284:	99 1f       	adc	r25, r25
    1286:	1a f0       	brmi	.+6      	; 0x128e <__fixunssfsi+0x24>
    1288:	ba 95       	dec	r27
    128a:	c9 f7       	brne	.-14     	; 0x127e <__fixunssfsi+0x14>
    128c:	14 c0       	rjmp	.+40     	; 0x12b6 <__fixunssfsi+0x4c>
    128e:	b1 30       	cpi	r27, 0x01	; 1
    1290:	91 f0       	breq	.+36     	; 0x12b6 <__fixunssfsi+0x4c>
    1292:	0e 94 0f 0a 	call	0x141e	; 0x141e <__fp_zero>
    1296:	b1 e0       	ldi	r27, 0x01	; 1
    1298:	08 95       	ret
    129a:	0c 94 0f 0a 	jmp	0x141e	; 0x141e <__fp_zero>
    129e:	67 2f       	mov	r22, r23
    12a0:	78 2f       	mov	r23, r24
    12a2:	88 27       	eor	r24, r24
    12a4:	b8 5f       	subi	r27, 0xF8	; 248
    12a6:	39 f0       	breq	.+14     	; 0x12b6 <__fixunssfsi+0x4c>
    12a8:	b9 3f       	cpi	r27, 0xF9	; 249
    12aa:	cc f3       	brlt	.-14     	; 0x129e <__fixunssfsi+0x34>
    12ac:	86 95       	lsr	r24
    12ae:	77 95       	ror	r23
    12b0:	67 95       	ror	r22
    12b2:	b3 95       	inc	r27
    12b4:	d9 f7       	brne	.-10     	; 0x12ac <__fixunssfsi+0x42>
    12b6:	3e f4       	brtc	.+14     	; 0x12c6 <__fixunssfsi+0x5c>
    12b8:	90 95       	com	r25
    12ba:	80 95       	com	r24
    12bc:	70 95       	com	r23
    12be:	61 95       	neg	r22
    12c0:	7f 4f       	sbci	r23, 0xFF	; 255
    12c2:	8f 4f       	sbci	r24, 0xFF	; 255
    12c4:	9f 4f       	sbci	r25, 0xFF	; 255
    12c6:	08 95       	ret

000012c8 <__floatunsisf>:
    12c8:	e8 94       	clt
    12ca:	09 c0       	rjmp	.+18     	; 0x12de <__floatsisf+0x12>

000012cc <__floatsisf>:
    12cc:	97 fb       	bst	r25, 7
    12ce:	3e f4       	brtc	.+14     	; 0x12de <__floatsisf+0x12>
    12d0:	90 95       	com	r25
    12d2:	80 95       	com	r24
    12d4:	70 95       	com	r23
    12d6:	61 95       	neg	r22
    12d8:	7f 4f       	sbci	r23, 0xFF	; 255
    12da:	8f 4f       	sbci	r24, 0xFF	; 255
    12dc:	9f 4f       	sbci	r25, 0xFF	; 255
    12de:	99 23       	and	r25, r25
    12e0:	a9 f0       	breq	.+42     	; 0x130c <__floatsisf+0x40>
    12e2:	f9 2f       	mov	r31, r25
    12e4:	96 e9       	ldi	r25, 0x96	; 150
    12e6:	bb 27       	eor	r27, r27
    12e8:	93 95       	inc	r25
    12ea:	f6 95       	lsr	r31
    12ec:	87 95       	ror	r24
    12ee:	77 95       	ror	r23
    12f0:	67 95       	ror	r22
    12f2:	b7 95       	ror	r27
    12f4:	f1 11       	cpse	r31, r1
    12f6:	f8 cf       	rjmp	.-16     	; 0x12e8 <__floatsisf+0x1c>
    12f8:	fa f4       	brpl	.+62     	; 0x1338 <__floatsisf+0x6c>
    12fa:	bb 0f       	add	r27, r27
    12fc:	11 f4       	brne	.+4      	; 0x1302 <__floatsisf+0x36>
    12fe:	60 ff       	sbrs	r22, 0
    1300:	1b c0       	rjmp	.+54     	; 0x1338 <__floatsisf+0x6c>
    1302:	6f 5f       	subi	r22, 0xFF	; 255
    1304:	7f 4f       	sbci	r23, 0xFF	; 255
    1306:	8f 4f       	sbci	r24, 0xFF	; 255
    1308:	9f 4f       	sbci	r25, 0xFF	; 255
    130a:	16 c0       	rjmp	.+44     	; 0x1338 <__floatsisf+0x6c>
    130c:	88 23       	and	r24, r24
    130e:	11 f0       	breq	.+4      	; 0x1314 <__floatsisf+0x48>
    1310:	96 e9       	ldi	r25, 0x96	; 150
    1312:	11 c0       	rjmp	.+34     	; 0x1336 <__floatsisf+0x6a>
    1314:	77 23       	and	r23, r23
    1316:	21 f0       	breq	.+8      	; 0x1320 <__floatsisf+0x54>
    1318:	9e e8       	ldi	r25, 0x8E	; 142
    131a:	87 2f       	mov	r24, r23
    131c:	76 2f       	mov	r23, r22
    131e:	05 c0       	rjmp	.+10     	; 0x132a <__floatsisf+0x5e>
    1320:	66 23       	and	r22, r22
    1322:	71 f0       	breq	.+28     	; 0x1340 <__floatsisf+0x74>
    1324:	96 e8       	ldi	r25, 0x86	; 134
    1326:	86 2f       	mov	r24, r22
    1328:	70 e0       	ldi	r23, 0x00	; 0
    132a:	60 e0       	ldi	r22, 0x00	; 0
    132c:	2a f0       	brmi	.+10     	; 0x1338 <__floatsisf+0x6c>
    132e:	9a 95       	dec	r25
    1330:	66 0f       	add	r22, r22
    1332:	77 1f       	adc	r23, r23
    1334:	88 1f       	adc	r24, r24
    1336:	da f7       	brpl	.-10     	; 0x132e <__floatsisf+0x62>
    1338:	88 0f       	add	r24, r24
    133a:	96 95       	lsr	r25
    133c:	87 95       	ror	r24
    133e:	97 f9       	bld	r25, 7
    1340:	08 95       	ret

00001342 <__fp_cmp>:
    1342:	99 0f       	add	r25, r25
    1344:	00 08       	sbc	r0, r0
    1346:	55 0f       	add	r21, r21
    1348:	aa 0b       	sbc	r26, r26
    134a:	e0 e8       	ldi	r30, 0x80	; 128
    134c:	fe ef       	ldi	r31, 0xFE	; 254
    134e:	16 16       	cp	r1, r22
    1350:	17 06       	cpc	r1, r23
    1352:	e8 07       	cpc	r30, r24
    1354:	f9 07       	cpc	r31, r25
    1356:	c0 f0       	brcs	.+48     	; 0x1388 <__fp_cmp+0x46>
    1358:	12 16       	cp	r1, r18
    135a:	13 06       	cpc	r1, r19
    135c:	e4 07       	cpc	r30, r20
    135e:	f5 07       	cpc	r31, r21
    1360:	98 f0       	brcs	.+38     	; 0x1388 <__fp_cmp+0x46>
    1362:	62 1b       	sub	r22, r18
    1364:	73 0b       	sbc	r23, r19
    1366:	84 0b       	sbc	r24, r20
    1368:	95 0b       	sbc	r25, r21
    136a:	39 f4       	brne	.+14     	; 0x137a <__fp_cmp+0x38>
    136c:	0a 26       	eor	r0, r26
    136e:	61 f0       	breq	.+24     	; 0x1388 <__fp_cmp+0x46>
    1370:	23 2b       	or	r18, r19
    1372:	24 2b       	or	r18, r20
    1374:	25 2b       	or	r18, r21
    1376:	21 f4       	brne	.+8      	; 0x1380 <__fp_cmp+0x3e>
    1378:	08 95       	ret
    137a:	0a 26       	eor	r0, r26
    137c:	09 f4       	brne	.+2      	; 0x1380 <__fp_cmp+0x3e>
    137e:	a1 40       	sbci	r26, 0x01	; 1
    1380:	a6 95       	lsr	r26
    1382:	8f ef       	ldi	r24, 0xFF	; 255
    1384:	81 1d       	adc	r24, r1
    1386:	81 1d       	adc	r24, r1
    1388:	08 95       	ret

0000138a <__fp_inf>:
    138a:	97 f9       	bld	r25, 7
    138c:	9f 67       	ori	r25, 0x7F	; 127
    138e:	80 e8       	ldi	r24, 0x80	; 128
    1390:	70 e0       	ldi	r23, 0x00	; 0
    1392:	60 e0       	ldi	r22, 0x00	; 0
    1394:	08 95       	ret

00001396 <__fp_nan>:
    1396:	9f ef       	ldi	r25, 0xFF	; 255
    1398:	80 ec       	ldi	r24, 0xC0	; 192
    139a:	08 95       	ret

0000139c <__fp_pscA>:
    139c:	00 24       	eor	r0, r0
    139e:	0a 94       	dec	r0
    13a0:	16 16       	cp	r1, r22
    13a2:	17 06       	cpc	r1, r23
    13a4:	18 06       	cpc	r1, r24
    13a6:	09 06       	cpc	r0, r25
    13a8:	08 95       	ret

000013aa <__fp_pscB>:
    13aa:	00 24       	eor	r0, r0
    13ac:	0a 94       	dec	r0
    13ae:	12 16       	cp	r1, r18
    13b0:	13 06       	cpc	r1, r19
    13b2:	14 06       	cpc	r1, r20
    13b4:	05 06       	cpc	r0, r21
    13b6:	08 95       	ret

000013b8 <__fp_round>:
    13b8:	09 2e       	mov	r0, r25
    13ba:	03 94       	inc	r0
    13bc:	00 0c       	add	r0, r0
    13be:	11 f4       	brne	.+4      	; 0x13c4 <__fp_round+0xc>
    13c0:	88 23       	and	r24, r24
    13c2:	52 f0       	brmi	.+20     	; 0x13d8 <__fp_round+0x20>
    13c4:	bb 0f       	add	r27, r27
    13c6:	40 f4       	brcc	.+16     	; 0x13d8 <__fp_round+0x20>
    13c8:	bf 2b       	or	r27, r31
    13ca:	11 f4       	brne	.+4      	; 0x13d0 <__fp_round+0x18>
    13cc:	60 ff       	sbrs	r22, 0
    13ce:	04 c0       	rjmp	.+8      	; 0x13d8 <__fp_round+0x20>
    13d0:	6f 5f       	subi	r22, 0xFF	; 255
    13d2:	7f 4f       	sbci	r23, 0xFF	; 255
    13d4:	8f 4f       	sbci	r24, 0xFF	; 255
    13d6:	9f 4f       	sbci	r25, 0xFF	; 255
    13d8:	08 95       	ret

000013da <__fp_split3>:
    13da:	57 fd       	sbrc	r21, 7
    13dc:	90 58       	subi	r25, 0x80	; 128
    13de:	44 0f       	add	r20, r20
    13e0:	55 1f       	adc	r21, r21
    13e2:	59 f0       	breq	.+22     	; 0x13fa <__fp_splitA+0x10>
    13e4:	5f 3f       	cpi	r21, 0xFF	; 255
    13e6:	71 f0       	breq	.+28     	; 0x1404 <__fp_splitA+0x1a>
    13e8:	47 95       	ror	r20

000013ea <__fp_splitA>:
    13ea:	88 0f       	add	r24, r24
    13ec:	97 fb       	bst	r25, 7
    13ee:	99 1f       	adc	r25, r25
    13f0:	61 f0       	breq	.+24     	; 0x140a <__fp_splitA+0x20>
    13f2:	9f 3f       	cpi	r25, 0xFF	; 255
    13f4:	79 f0       	breq	.+30     	; 0x1414 <__fp_splitA+0x2a>
    13f6:	87 95       	ror	r24
    13f8:	08 95       	ret
    13fa:	12 16       	cp	r1, r18
    13fc:	13 06       	cpc	r1, r19
    13fe:	14 06       	cpc	r1, r20
    1400:	55 1f       	adc	r21, r21
    1402:	f2 cf       	rjmp	.-28     	; 0x13e8 <__fp_split3+0xe>
    1404:	46 95       	lsr	r20
    1406:	f1 df       	rcall	.-30     	; 0x13ea <__fp_splitA>
    1408:	08 c0       	rjmp	.+16     	; 0x141a <__fp_splitA+0x30>
    140a:	16 16       	cp	r1, r22
    140c:	17 06       	cpc	r1, r23
    140e:	18 06       	cpc	r1, r24
    1410:	99 1f       	adc	r25, r25
    1412:	f1 cf       	rjmp	.-30     	; 0x13f6 <__fp_splitA+0xc>
    1414:	86 95       	lsr	r24
    1416:	71 05       	cpc	r23, r1
    1418:	61 05       	cpc	r22, r1
    141a:	08 94       	sec
    141c:	08 95       	ret

0000141e <__fp_zero>:
    141e:	e8 94       	clt

00001420 <__fp_szero>:
    1420:	bb 27       	eor	r27, r27
    1422:	66 27       	eor	r22, r22
    1424:	77 27       	eor	r23, r23
    1426:	cb 01       	movw	r24, r22
    1428:	97 f9       	bld	r25, 7
    142a:	08 95       	ret

0000142c <__gesf2>:
    142c:	0e 94 a1 09 	call	0x1342	; 0x1342 <__fp_cmp>
    1430:	08 f4       	brcc	.+2      	; 0x1434 <__gesf2+0x8>
    1432:	8f ef       	ldi	r24, 0xFF	; 255
    1434:	08 95       	ret

00001436 <__mulsf3>:
    1436:	0e 94 2e 0a 	call	0x145c	; 0x145c <__mulsf3x>
    143a:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_round>
    143e:	0e 94 ce 09 	call	0x139c	; 0x139c <__fp_pscA>
    1442:	38 f0       	brcs	.+14     	; 0x1452 <__mulsf3+0x1c>
    1444:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__fp_pscB>
    1448:	20 f0       	brcs	.+8      	; 0x1452 <__mulsf3+0x1c>
    144a:	95 23       	and	r25, r21
    144c:	11 f0       	breq	.+4      	; 0x1452 <__mulsf3+0x1c>
    144e:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__fp_inf>
    1452:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__fp_nan>
    1456:	11 24       	eor	r1, r1
    1458:	0c 94 10 0a 	jmp	0x1420	; 0x1420 <__fp_szero>

0000145c <__mulsf3x>:
    145c:	0e 94 ed 09 	call	0x13da	; 0x13da <__fp_split3>
    1460:	70 f3       	brcs	.-36     	; 0x143e <__mulsf3+0x8>

00001462 <__mulsf3_pse>:
    1462:	95 9f       	mul	r25, r21
    1464:	c1 f3       	breq	.-16     	; 0x1456 <__mulsf3+0x20>
    1466:	95 0f       	add	r25, r21
    1468:	50 e0       	ldi	r21, 0x00	; 0
    146a:	55 1f       	adc	r21, r21
    146c:	62 9f       	mul	r22, r18
    146e:	f0 01       	movw	r30, r0
    1470:	72 9f       	mul	r23, r18
    1472:	bb 27       	eor	r27, r27
    1474:	f0 0d       	add	r31, r0
    1476:	b1 1d       	adc	r27, r1
    1478:	63 9f       	mul	r22, r19
    147a:	aa 27       	eor	r26, r26
    147c:	f0 0d       	add	r31, r0
    147e:	b1 1d       	adc	r27, r1
    1480:	aa 1f       	adc	r26, r26
    1482:	64 9f       	mul	r22, r20
    1484:	66 27       	eor	r22, r22
    1486:	b0 0d       	add	r27, r0
    1488:	a1 1d       	adc	r26, r1
    148a:	66 1f       	adc	r22, r22
    148c:	82 9f       	mul	r24, r18
    148e:	22 27       	eor	r18, r18
    1490:	b0 0d       	add	r27, r0
    1492:	a1 1d       	adc	r26, r1
    1494:	62 1f       	adc	r22, r18
    1496:	73 9f       	mul	r23, r19
    1498:	b0 0d       	add	r27, r0
    149a:	a1 1d       	adc	r26, r1
    149c:	62 1f       	adc	r22, r18
    149e:	83 9f       	mul	r24, r19
    14a0:	a0 0d       	add	r26, r0
    14a2:	61 1d       	adc	r22, r1
    14a4:	22 1f       	adc	r18, r18
    14a6:	74 9f       	mul	r23, r20
    14a8:	33 27       	eor	r19, r19
    14aa:	a0 0d       	add	r26, r0
    14ac:	61 1d       	adc	r22, r1
    14ae:	23 1f       	adc	r18, r19
    14b0:	84 9f       	mul	r24, r20
    14b2:	60 0d       	add	r22, r0
    14b4:	21 1d       	adc	r18, r1
    14b6:	82 2f       	mov	r24, r18
    14b8:	76 2f       	mov	r23, r22
    14ba:	6a 2f       	mov	r22, r26
    14bc:	11 24       	eor	r1, r1
    14be:	9f 57       	subi	r25, 0x7F	; 127
    14c0:	50 40       	sbci	r21, 0x00	; 0
    14c2:	9a f0       	brmi	.+38     	; 0x14ea <__mulsf3_pse+0x88>
    14c4:	f1 f0       	breq	.+60     	; 0x1502 <__mulsf3_pse+0xa0>
    14c6:	88 23       	and	r24, r24
    14c8:	4a f0       	brmi	.+18     	; 0x14dc <__mulsf3_pse+0x7a>
    14ca:	ee 0f       	add	r30, r30
    14cc:	ff 1f       	adc	r31, r31
    14ce:	bb 1f       	adc	r27, r27
    14d0:	66 1f       	adc	r22, r22
    14d2:	77 1f       	adc	r23, r23
    14d4:	88 1f       	adc	r24, r24
    14d6:	91 50       	subi	r25, 0x01	; 1
    14d8:	50 40       	sbci	r21, 0x00	; 0
    14da:	a9 f7       	brne	.-22     	; 0x14c6 <__mulsf3_pse+0x64>
    14dc:	9e 3f       	cpi	r25, 0xFE	; 254
    14de:	51 05       	cpc	r21, r1
    14e0:	80 f0       	brcs	.+32     	; 0x1502 <__mulsf3_pse+0xa0>
    14e2:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__fp_inf>
    14e6:	0c 94 10 0a 	jmp	0x1420	; 0x1420 <__fp_szero>
    14ea:	5f 3f       	cpi	r21, 0xFF	; 255
    14ec:	e4 f3       	brlt	.-8      	; 0x14e6 <__mulsf3_pse+0x84>
    14ee:	98 3e       	cpi	r25, 0xE8	; 232
    14f0:	d4 f3       	brlt	.-12     	; 0x14e6 <__mulsf3_pse+0x84>
    14f2:	86 95       	lsr	r24
    14f4:	77 95       	ror	r23
    14f6:	67 95       	ror	r22
    14f8:	b7 95       	ror	r27
    14fa:	f7 95       	ror	r31
    14fc:	e7 95       	ror	r30
    14fe:	9f 5f       	subi	r25, 0xFF	; 255
    1500:	c1 f7       	brne	.-16     	; 0x14f2 <__mulsf3_pse+0x90>
    1502:	fe 2b       	or	r31, r30
    1504:	88 0f       	add	r24, r24
    1506:	91 1d       	adc	r25, r1
    1508:	96 95       	lsr	r25
    150a:	87 95       	ror	r24
    150c:	97 f9       	bld	r25, 7
    150e:	08 95       	ret

00001510 <atoi>:
    1510:	fc 01       	movw	r30, r24
    1512:	88 27       	eor	r24, r24
    1514:	99 27       	eor	r25, r25
    1516:	e8 94       	clt
    1518:	21 91       	ld	r18, Z+
    151a:	20 32       	cpi	r18, 0x20	; 32
    151c:	e9 f3       	breq	.-6      	; 0x1518 <atoi+0x8>
    151e:	29 30       	cpi	r18, 0x09	; 9
    1520:	10 f0       	brcs	.+4      	; 0x1526 <atoi+0x16>
    1522:	2e 30       	cpi	r18, 0x0E	; 14
    1524:	c8 f3       	brcs	.-14     	; 0x1518 <atoi+0x8>
    1526:	2b 32       	cpi	r18, 0x2B	; 43
    1528:	41 f0       	breq	.+16     	; 0x153a <atoi+0x2a>
    152a:	2d 32       	cpi	r18, 0x2D	; 45
    152c:	39 f4       	brne	.+14     	; 0x153c <atoi+0x2c>
    152e:	68 94       	set
    1530:	04 c0       	rjmp	.+8      	; 0x153a <atoi+0x2a>
    1532:	0e 94 b6 0a 	call	0x156c	; 0x156c <__mulhi_const_10>
    1536:	82 0f       	add	r24, r18
    1538:	91 1d       	adc	r25, r1
    153a:	21 91       	ld	r18, Z+
    153c:	20 53       	subi	r18, 0x30	; 48
    153e:	2a 30       	cpi	r18, 0x0A	; 10
    1540:	c0 f3       	brcs	.-16     	; 0x1532 <atoi+0x22>
    1542:	1e f4       	brtc	.+6      	; 0x154a <atoi+0x3a>
    1544:	90 95       	com	r25
    1546:	81 95       	neg	r24
    1548:	9f 4f       	sbci	r25, 0xFF	; 255
    154a:	08 95       	ret

0000154c <strcmp>:
    154c:	fb 01       	movw	r30, r22
    154e:	dc 01       	movw	r26, r24
    1550:	8d 91       	ld	r24, X+
    1552:	01 90       	ld	r0, Z+
    1554:	80 19       	sub	r24, r0
    1556:	01 10       	cpse	r0, r1
    1558:	d9 f3       	breq	.-10     	; 0x1550 <strcmp+0x4>
    155a:	99 0b       	sbc	r25, r25
    155c:	08 95       	ret

0000155e <strcpy>:
    155e:	fb 01       	movw	r30, r22
    1560:	dc 01       	movw	r26, r24
    1562:	01 90       	ld	r0, Z+
    1564:	0d 92       	st	X+, r0
    1566:	00 20       	and	r0, r0
    1568:	e1 f7       	brne	.-8      	; 0x1562 <strcpy+0x4>
    156a:	08 95       	ret

0000156c <__mulhi_const_10>:
    156c:	7a e0       	ldi	r23, 0x0A	; 10
    156e:	97 9f       	mul	r25, r23
    1570:	90 2d       	mov	r25, r0
    1572:	87 9f       	mul	r24, r23
    1574:	80 2d       	mov	r24, r0
    1576:	91 0d       	add	r25, r1
    1578:	11 24       	eor	r1, r1
    157a:	08 95       	ret

0000157c <_exit>:
    157c:	f8 94       	cli

0000157e <__stop_program>:
    157e:	ff cf       	rjmp	.-2      	; 0x157e <__stop_program>
